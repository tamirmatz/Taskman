[{"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/index.js":"1","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/serviceWorkerRegistration.js":"2","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/reportWebVitals.js":"3","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/App.jsx":"4","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/store.js":"5","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/routes.js":"6","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/systemReducer.js":"7","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/userReducer.js":"8","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/reviewReducer.js":"9","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/boardReducer.js":"10","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/AppHeader.jsx":"11","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/UserDetails.jsx":"12","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/LoginSignup.jsx":"13","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Board.jsx":"14","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Chat.jsx":"15","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Home.jsx":"16","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/BoardList.jsx":"17","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskDetails.jsx":"18","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/userActions.js":"19","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/reviewActions.js":"20","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/boardsAction.js":"21","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/userService.js":"22","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/socketService.js":"23","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/Upload.jsx":"24","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskList.jsx":"25","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/reviewService.js":"26","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/boardService.js":"27","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/httpService.js":"28","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/cloudinaryService.js":"29","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/utilService.js":"30","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/asyncStorageService.js":"31","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskPreview.jsx":"32","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/data/board.js":"33","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalWrapper.jsx":"34","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/Overlay.jsx":"35","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MiniBoard.jsx":"36","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/systemActions.js":"37","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/UserPreview.jsx":"38","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/BoardNavbar.jsx":"39","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MembersBoard.jsx":"40","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/CheckList.jsx":"41"},{"size":910,"mtime":1610189396000,"results":"42","hashOfConfig":"43"},{"size":5064,"mtime":499155300000,"results":"44","hashOfConfig":"43"},{"size":364,"mtime":499155300000,"results":"45","hashOfConfig":"43"},{"size":515,"mtime":1622208933114,"results":"46","hashOfConfig":"43"},{"size":752,"mtime":1622123464533,"results":"47","hashOfConfig":"43"},{"size":747,"mtime":1622376904555,"results":"48","hashOfConfig":"43"},{"size":322,"mtime":1609063804000,"results":"49","hashOfConfig":"43"},{"size":868,"mtime":1622452229862,"results":"50","hashOfConfig":"43"},{"size":669,"mtime":1609949674000,"results":"51","hashOfConfig":"43"},{"size":668,"mtime":1622215305163,"results":"52","hashOfConfig":"43"},{"size":2631,"mtime":1622452229853,"results":"53","hashOfConfig":"43"},{"size":732,"mtime":1621836072000,"results":"54","hashOfConfig":"43"},{"size":5612,"mtime":1622452229859,"results":"55","hashOfConfig":"43"},{"size":6012,"mtime":1622452229883,"results":"56","hashOfConfig":"43"},{"size":3395,"mtime":1622123464523,"results":"57","hashOfConfig":"43"},{"size":2963,"mtime":1622452229857,"results":"58","hashOfConfig":"43"},{"size":1141,"mtime":1622390182440,"results":"59","hashOfConfig":"43"},{"size":6504,"mtime":1622458571547,"results":"60","hashOfConfig":"43"},{"size":1907,"mtime":1622452229860,"results":"61","hashOfConfig":"43"},{"size":1321,"mtime":1622123464531,"results":"62","hashOfConfig":"43"},{"size":2069,"mtime":1622452484583,"results":"63","hashOfConfig":"43"},{"size":2097,"mtime":1622445084281,"results":"64","hashOfConfig":"43"},{"size":2329,"mtime":1622451717615,"results":"65","hashOfConfig":"43"},{"size":1127,"mtime":1622123464522,"results":"66","hashOfConfig":"43"},{"size":4441,"mtime":1622371168330,"results":"67","hashOfConfig":"43"},{"size":1087,"mtime":1622123464528,"results":"68","hashOfConfig":"43"},{"size":2272,"mtime":1622405262188,"results":"69","hashOfConfig":"43"},{"size":1093,"mtime":1622401206514,"results":"70","hashOfConfig":"43"},{"size":563,"mtime":1622123464526,"results":"71","hashOfConfig":"43"},{"size":3219,"mtime":1622381616987,"results":"72","hashOfConfig":"43"},{"size":2319,"mtime":1622289086771,"results":"73","hashOfConfig":"43"},{"size":5336,"mtime":1622452428611,"results":"74","hashOfConfig":"43"},{"size":298307,"mtime":1622370343765,"results":"75","hashOfConfig":"43"},{"size":158,"mtime":1622292625069,"results":"76","hashOfConfig":"43"},{"size":103,"mtime":1622291834024,"results":"77","hashOfConfig":"43"},{"size":239,"mtime":1622381347337,"results":"78","hashOfConfig":"43"},{"size":424,"mtime":1622452229859,"results":"79","hashOfConfig":"43"},{"size":456,"mtime":1622452229855,"results":"80","hashOfConfig":"43"},{"size":976,"mtime":1622452229854,"results":"81","hashOfConfig":"43"},{"size":640,"mtime":1622452229855,"results":"82","hashOfConfig":"43"},{"size":2594,"mtime":1622463561334,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1wsars6",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/index.js",[],["173","174"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/serviceWorkerRegistration.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/reportWebVitals.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/App.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/store.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/routes.js",["175","176","177","178"],"import { Home } from './pages/Home'\nimport { LoginSignup } from './pages/LoginSignup'\nimport { Chat } from './pages/Chat'\nimport { UserDetails } from './pages/UserDetails'\nimport { BoardList } from './pages/BoardList'\nimport { Board } from './pages/Board'\nimport { Login } from './pages/LoginSignup'\nimport { TaskDetails } from './cmps/board/TaskDetails'\n\nexport const routes = [\n    /* {\n        path: '/board/:boardId/:groupId/:taskId',\n        component: TaskDetails,\n    }, */\n    {\n        path: '/board/:boardId',\n        component: Board,\n    },\n    {\n        path: '/login',\n        component: LoginSignup,\n    },\n    {\n        path: '/board',\n        component: BoardList\n    },\n    {\n        path: '/',\n        component: Home,\n    },\n]\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/systemReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/userReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/reviewReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/boardReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/AppHeader.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/UserDetails.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/LoginSignup.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Board.jsx",["179","180"],"import { connect } from 'react-redux'\nimport { remove, add, loadBoard, update } from '../store/actions/boardsAction.js';\nimport { loading } from '../store/actions/systemActions';\n\nimport React, { Component } from 'react'\nimport { TaskList } from '../cmps/board/TaskList'\nimport { BoardNavbar } from '../cmps/board/BoardNavbar'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Route, Switch } from 'react-router';\nimport { TaskDetails } from '../cmps/board/TaskDetails.jsx';\nimport { boardService } from '.././services/boardService.js'\nimport { utilService } from '../services/generalService/utilService.js'\nimport { socketService } from '../services/generalService/socketService.js'\nimport { ModalWrapper } from '../cmps/shared/ModalWrapper.jsx';\n\nconst EMPTY_GROUP = { title: '' }\n\nclass _Board extends Component {\n    state = {\n        group: EMPTY_GROUP\n    }\n\n\n    componentDidMount() {\n        const { boardId } = this.props.match.params\n        this.props.loadBoard(boardId);\n\n    }\n\n    componentWillUnmount() {\n        // socketService.off('update board', this.props.update)\n        // socketService.terminate()\n    }\n\n\n    onUpdate = (updateBoard) => {\n        console.log(updateBoard)\n        this.props.update(updateBoard)\n        \n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            group: {\n                ...prevState.group,\n                [field]: value,\n            }\n        }))\n    }\n\n    onAddGroup = () => {\n        const copyBoard = { ...this.props.board };\n        this.setState({ group: { ...this.state.group, id: utilService.makeId() } })\n        copyBoard.groups.push(utilService.formatNewGroup(this.state.group))\n        this.props.update(copyBoard)\n        this.setState({ group: EMPTY_GROUP })\n    }\n\n    onDragEnd = res => {\n        const { destination, source, type } = res\n        if (!destination) return\n        if (destination.droppableId === source.droppableId &&\n            destination.index === source.index) return\n        const copyBoard = { ...this.props.board }\n        const activity = {}\n        if (type === 'task') {\n            const sourceListIdx = boardService.getGroupIdxById(copyBoard, source.droppableId)\n            const destinationListIdx = boardService.getGroupIdxById(copyBoard, destination.droppableId)\n            const task = copyBoard.groups[sourceListIdx].tasks.splice(source.index, 1)\n            copyBoard.groups[destinationListIdx].tasks.splice(destination.index, 0, task[0])\n            const sourceListName = copyBoard.groups[sourceListIdx].title\n            const destinationListName = copyBoard.groups[destinationListIdx].title\n            activity.txt = `has moved ${task[0].title} from ${sourceListName} to ${destinationListName}`\n        }\n        else {\n\n            const list = copyBoard.groups.splice(source.index, 1)\n            copyBoard.groups.splice(destination.index, 0, list[0])\n            activity.txt = `has moved list ${list[0].title}`\n        }\n        this.props.update(copyBoard)\n    }\n\n    onCloseDetails = () => {\n        this.props.history.push(`/board/${this.props.board._id}`)\n\n    }\n    render() {\n        const { board } = this.props;\n        if (!board) {\n            return <div className=\"loader w-100 h-100 flex center content-center\">Loading...</div>\n        }\n        // loading ui\n        this.props.loading();\n        // if(this.props.isLoading) return <h1 className=\"w-100 h-100 flex center content-center\">Loading...</h1>\n        if (this.props.isLoading) return <div className=\"loader w-100 h-100 flex center content-center\">Loading...</div>\n\n\n        return (\n            <section className=\"board w-100 pad-0 animate__animated animate__fadeInRight marg-03\">\n                <BoardNavbar board={board}/>\n                <DragDropContext\n                    onDragEnd={this.onDragEnd}\n                >\n                    <Droppable droppableId={'all-columns'}\n                        direction=\"horizontal\"\n                        type=\"list\"\n                    >\n                        {provided => (\n                            <ul\n                                className=\"groups clean-list flex \"\n                                {...provided.droppableProps}\n                                ref={provided.innerRef}\n                            >\n                                {board && board.groups.map((group, idx) => <TaskList index={idx}\n                                    key={group.id}\n                                    board={board}\n                                    group={group}\n                                    updateBoard={this.onUpdate} />)}\n                                {provided.placeholder}\n\n\n                            </ul>\n                        )}\n\n                    </Droppable>\n                </DragDropContext>\n                <div className=\"group add-group flex\">\n                    <form onSubmit={(ev) => {\n                        ev.preventDefault()\n                        this.onAddGroup()\n                    }}>\n                        <input className=\"add-task\" value={this.state.group.title} type=\"text\" placeholder=\"+ Add a group\" name=\"title\" onChange={this.handleChange} />\n                    </form>\n                </div>\n                <Switch>\n                    <Route path={'/board/:boardId/:groupId/:taskId'} render={(props) => <ModalWrapper onClick={this.onCloseDetails}><TaskDetails {...props} /></ModalWrapper>}></Route>\n                </Switch>\n            </section>\n        )\n    }\n}\n\n// {\n//     path: '/board/:boardId/:taskId',\n//     component: TaskDetails,\n// }\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.board,\n        isLoading: state.systemModule.isLoading\n    }\n}\nconst mapDispatchToProps = {\n    remove,\n    add,\n    loadBoard,\n    update,\n    loading\n}\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Chat.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Home.jsx",["181","182","183","184","185","186","187","188","189"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MainImg from '../assets/img/home/main-img.svg'\r\nimport TeamworkImg from '../assets/img/home/teamwork.svg'\r\nimport TimeImg from '../assets/img/home/time.svg'\r\nimport OrganizeImg from '../assets/img/home/organize.svg'\r\nimport { loadReviews, addReview, removeReview } from '../store/actions/reviewActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Home extends Component {\r\n  state = {\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      reviewToEdit: {\r\n        ...prevState.reviewToEdit,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home-page flex column fam-1 \">\r\n        <div className=\"flex row marg-4 space-between\">\r\n          <div className=\"align-center flex column\">\r\n              <div className=\"c-stand ps-2 font-xl\"><span className=\"logo-span\">T</span>askman</div>\r\n              <h1 className=\"fam-1\">Task management</h1>\r\n              <h2 className=\"fam-1\">The <span className=\"main-color\">easiest</span> way. </h2>\r\n              <Link to=\"/board/606056b5f2a2af09afd9f2fb\"><button className=\"btn-hover color-3\">Try it now!</button></Link>\r\n          </div>\r\n          <img className=\"main-img w-50\" src={MainImg}/>\r\n        </div>\r\n        <div className=\"features flex row space-between\">\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1\">All the tools your team needs</h3>\r\n            <span>Organize and assign tasks.</span>\r\n            <span>With lists, teams see immediately what they need to do,</span>\r\n            <span>which tasks are a priority, and when work is due.</span>\r\n            </div>\r\n          <img className=\"feature-img w-30\" src={TeamworkImg}/>\r\n          </div>\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1\">Manage your time wisely</h3>\r\n            <span>Instantly see which projects are on track,</span>\r\n            <span>which ones are falling behind,</span>\r\n            <span>and what every team member is working on at a glance.</span>\r\n            </div>\r\n          <img className=\"feature-img w-25\" src={TimeImg}/>\r\n          </div>\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1\">Organize anything with anyone, anywhere</h3>\r\n            <span>Choose the project view that suits your style,</span>\r\n            <span> and collaborate no matter where you are.</span>\r\n            </div>\r\n          <img className=\"feature-img \" src={OrganizeImg}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/BoardList.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskDetails.jsx",["190","191"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/userActions.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/reviewActions.js",["192","193"],"import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../../services/generalService/socketService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n      // socketService.on(SOCKET_EVENT_REVIEW_ADDED, review =>{\r\n      //   dispatch({ type: 'ADD_REVIEW', review })\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/boardsAction.js",["194"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/userService.js",["195"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/socketService.js",["196","197"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/Upload.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskList.jsx",["198"],"import { TaskPreview } from '../board/TaskPreview'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Component } from 'react';\nimport { boardService } from '../../services/boardService.js'\nimport { utilService } from '../../services/generalService/utilService.js'\n\nconst EMPTY_TASK = { title: '' }\nconst EMPTY_GROUP = { title: '' }\nexport class TaskList extends Component {\n    state = {\n        group: EMPTY_GROUP,\n        task: EMPTY_TASK\n    }\n    componentDidMount() {\n        this.setState({ group: this.props.group })\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            task: {\n                ...prevState.task,\n                [field]: value,\n            }\n        }))\n    }\n\n    updateGroup = () => {\n        if (!this.state.group.title) return;\n        const copyBoard = { ...this.props.board };\n        const groupIdx = boardService.getGroupIdxById(copyBoard, this.state.group.id)\n        copyBoard.groups[groupIdx] = this.state.group\n        this.props.updateBoard(copyBoard)\n    }\n\n    handleChangeGroup = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            group: {\n                ...prevState.group,\n                [field]: value,\n            }\n        }))\n    }\n\n    onAddTask = () => {\n        if (!this.state.task.title) return;\n        const { group } = this.props\n        const copyBoard = { ...this.props.board };\n        const groupIdx = boardService.getGroupIdxById(copyBoard, group.id)\n        copyBoard.groups[groupIdx].tasks.push(utilService.formatNewTask(this.state.task))\n        this.props.updateBoard(copyBoard)\n        this.setState({ task: EMPTY_TASK })\n    }\n\n    render() {\n        const { board, group, updateBoard, index } = this.props\n\n        return/*  <div className=\"group-container\"> */(\n            <Draggable index={index} isDragDisabled={false} draggableId={group.id}>\n                {(provided, snapshot) => {\n                    return <li className=\"group pad-4\"\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                        style={{\n                            backgroundColor: snapshot.isDraggingOver ? 'lightblue' : '#EBECF0'\n                        }}\n                    >\n                        <form className=\"mb-06\" onSubmit={(ev) => {\n                            ev.preventDefault()\n                            this.updateGroup()\n\n                        }}>   <input className=\"group-title add-task\" onBlur={this.updateGroup} type=\"text\" value={this.state.group.title} name=\"title\" onChange={this.handleChangeGroup} /></form>\n                        <div className=\"task-list\">\n                            <Droppable key={index} droppableId={group.id} type='task'>\n                                {(provided) => (\n                                    <div ref={provided.innerRef} {...provided.droppableProps}>\n                                        {group.tasks.map((task, idx) => (\n                                            <TaskPreview key={task.id}\n                                                board={board}\n                                                index={idx}\n                                                groupId={group.id}\n                                                updateBoard={updateBoard}\n                                                task={task}\n                                            />\n                                        ))}\n                                        {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n                            <form onSubmit={(ev) => {\n                                ev.preventDefault()\n                                this.onAddTask()\n                                console.log(ev)\n                            }}>\n                                <input className=\"add-task\" value={this.state.task.title} type=\"text\" placeholder=\"+ Add a task\" name=\"title\" onChange={this.handleChange} />\n                            </form>\n                        </div>\n                    </li>\n                }}\n            </Draggable>)\n        /*    </div> */\n    }\n}","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/reviewService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/boardService.js",["199"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/httpService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/cloudinaryService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/utilService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/asyncStorageService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskPreview.jsx",["200","201","202","203","204","205","206","207"],"import { Link } from 'react-router-dom'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Provider } from 'react-redux';\nimport { boardService } from '../../services/boardService.js'\nimport { BsCheckBox } from 'react-icons/bs'\nimport { FaRegCommentDots } from 'react-icons/fa'\nimport { AiOutlineClockCircle } from 'react-icons/ai'\nimport { GrTextAlignFull } from 'react-icons/gr'\nimport { utilService } from '../../services/generalService/utilService'\nimport React, { Component } from 'react'\n\n\n\n// export function TaskPreview({ board, index, task, updateBoard, groupId }) {\nexport class TaskPreview extends Component {\n    state = {\n        isLabelOpen: false    \n    }\n\n    toggleLabels = () => {\n        this.setState({ isLabelOpen: !this.state.isLabelOpen })\n    }\n\n    getStyle = (style, snapshot) => {\n        if (!snapshot.isDropAnimating) {\n            return style;\n        }\n        const { moveTo, curve, duration } = snapshot.dropAnimation;\n        // move to the right spot\n        const translate = `translate(${moveTo.x}px, ${moveTo.y}px)`;\n        // add a bit of turn for fun\n        const rotate = 'rotate(0.01turn)';\n\n        // patching the existing style\n        return {\n            ...style,\n            transform: `${translate} ${rotate}`,\n            // slowing down the drop because we can\n            transition: `all ${curve} 0.2s`,\n        };\n    }\n\n    onRemoveTask = (taskId) => {\n        const { board, index, task, updateBoard, groupId } = this.props\n        const group = board.groups[boardService.getGroupIdxById(board, groupId)]\n        board.groups[boardService.getGroupIdxById(board, groupId)].tasks.splice(boardService.getTaskIdxById(group, taskId), 1)\n        updateBoard({ ...board })\n    }\n    render() {\n        const { board, index, task, updateBoard, groupId } = this.props\n        return <Draggable\n            draggableId={task.id}\n            index={index}\n            isDragDisabled={false}\n        >\n            {(provided, snapshot) => (\n                <div\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                    isDragging={snapshot.isDragging && !snapshot.isDropAnimating}\n                    style={this.getStyle(provided.draggableProps.style, snapshot)}\n                >\n\n                    <div className=\"task-preview font-s pad-20 flex column\">\n                        {/* <Link to={`/board/${board._id}/${task.id}`}> */}\n                        <div className=\"flex row space-between center w-90\">\n                            <div className=\"label-task-prev\">\n                                {utilService.isFalse(task.labelIds) &&\n                                    <div className=\"labels-container wrap flex\" onClick={(ev) => {\n                                        ev.stopPropagation();\n                                    }}>\n                                        {task.labelIds.map(labelId => {\n\n                                            const label = board.labels.find(label => {\n                                                return label.id === labelId;\n                                            })\n<<<<<<< HEAD\n=======\n\n>>>>>>> 7186ea6d7518eaef89e8fe48a8c071aa65ab7b0b\n                                            if (label)\n                                                return <div className={`preview-label font-s flex center bold fam-1 content-center pad-xs ${this.state.isLabelOpen && \"label-open\"}`} onClick={this.toggleLabels} style={{ backgroundColor: label.color }}>\n                                                    {this.state.isLabelOpen && label.title}\n                                                </div>\n                                        })}</div>}\n                            </div>\n                            <span className=\"cur-pointer fam-1 bold\" onClick={() => { this.onRemoveTask(task.id) }}>X</span>\n                        </div>\n\n                        <Link to={`/board/${board._id}/${groupId}/${task.id}`}>\n\n\n                            <h1 className=\" w-100 flex  content-start c-stand pad-07 fam-1\">{task.title}</h1>\n                            <div className=\"flex content-start ps-1 gap-xs font-1 fam-1\">\n                                {utilService.isFalse(task.comments) && <small className=\"flex center\"><FaRegCommentDots /></small>}\n                                {utilService.isFalse(task.checklists) && <div className={`flex row center ${boardService.checklistPreview(task).isDone && \"check-list-done-prev\" }`}>\n                                    <BsCheckBox />\n                                    <small>{boardService.checklistPreview(task).str}</small>\n                                </div>}\n                                {task.dueDate && <div className=\"flex row center\">\n                                    <AiOutlineClockCircle />\n                                    <small>\n                                        {utilService.timeAgo(task.dueDate)}\n                                    </small>\n                                </div>}\n                                {task.description && <small className=\"flex center\"><GrTextAlignFull /></small>}\n                            </div>\n                        </Link>\n                    </div>\n                </div>\n            )\n            }\n        </Draggable>\n    }\n}\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/data/board.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalWrapper.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/Overlay.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MiniBoard.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/systemActions.js",["208"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/UserPreview.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/BoardNavbar.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MembersBoard.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/CheckList.jsx",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":14},{"ruleId":"213","severity":1,"message":"217","line":4,"column":10,"nodeType":"215","messageId":"216","endLine":4,"endColumn":21},{"ruleId":"213","severity":1,"message":"218","line":7,"column":10,"nodeType":"215","messageId":"216","endLine":7,"endColumn":15},{"ruleId":"213","severity":1,"message":"219","line":8,"column":10,"nodeType":"215","messageId":"216","endLine":8,"endColumn":21},{"ruleId":"213","severity":1,"message":"220","line":5,"column":27,"nodeType":"215","messageId":"216","endLine":5,"endColumn":36},{"ruleId":"213","severity":1,"message":"221","line":10,"column":10,"nodeType":"215","messageId":"216","endLine":10,"endColumn":23},{"ruleId":"213","severity":1,"message":"222","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":17},{"ruleId":"213","severity":1,"message":"223","line":7,"column":10,"nodeType":"215","messageId":"216","endLine":7,"endColumn":21},{"ruleId":"213","severity":1,"message":"224","line":7,"column":23,"nodeType":"215","messageId":"216","endLine":7,"endColumn":32},{"ruleId":"213","severity":1,"message":"225","line":7,"column":34,"nodeType":"215","messageId":"216","endLine":7,"endColumn":46},{"ruleId":"213","severity":1,"message":"226","line":8,"column":10,"nodeType":"215","messageId":"216","endLine":8,"endColumn":19},{"ruleId":"227","severity":1,"message":"228","line":41,"column":11,"nodeType":"229","endLine":41,"endColumn":57},{"ruleId":"227","severity":1,"message":"228","line":51,"column":11,"nodeType":"229","endLine":51,"endColumn":64},{"ruleId":"227","severity":1,"message":"228","line":60,"column":11,"nodeType":"229","endLine":60,"endColumn":60},{"ruleId":"227","severity":1,"message":"228","line":68,"column":11,"nodeType":"229","endLine":68,"endColumn":60},{"ruleId":"213","severity":1,"message":"230","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":14},{"ruleId":"227","severity":1,"message":"228","line":98,"column":33,"nodeType":"229","endLine":98,"endColumn":89},{"ruleId":"213","severity":1,"message":"221","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":23},{"ruleId":"213","severity":1,"message":"231","line":3,"column":25,"nodeType":"215","messageId":"216","endLine":3,"endColumn":50},{"ruleId":"213","severity":1,"message":"221","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":23},{"ruleId":"213","severity":1,"message":"232","line":3,"column":7,"nodeType":"215","messageId":"216","endLine":3,"endColumn":23},{"ruleId":"213","severity":1,"message":"233","line":19,"column":10,"nodeType":"215","messageId":"216","endLine":19,"endColumn":29},{"ruleId":"213","severity":1,"message":"234","line":43,"column":7,"nodeType":"215","messageId":"216","endLine":43,"endColumn":20},{"ruleId":"213","severity":1,"message":"235","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":25},{"ruleId":"213","severity":1,"message":"236","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":21},{"ruleId":"213","severity":1,"message":"235","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":25},{"ruleId":"213","severity":1,"message":"237","line":2,"column":38,"nodeType":"215","messageId":"216","endLine":2,"endColumn":47},{"ruleId":"213","severity":1,"message":"238","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":18},{"ruleId":"213","severity":1,"message":"239","line":28,"column":32,"nodeType":"215","messageId":"216","endLine":28,"endColumn":40},{"ruleId":"213","severity":1,"message":"240","line":44,"column":24,"nodeType":"215","messageId":"216","endLine":44,"endColumn":29},{"ruleId":"213","severity":1,"message":"241","line":44,"column":31,"nodeType":"215","messageId":"216","endLine":44,"endColumn":35},{"ruleId":"213","severity":1,"message":"242","line":50,"column":37,"nodeType":"215","messageId":"216","endLine":50,"endColumn":48},{"ruleId":"243","severity":1,"message":"244","line":73,"column":68,"nodeType":"245","messageId":"246","endLine":73,"endColumn":70},{"ruleId":"213","severity":1,"message":"236","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":21},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'Chat' is defined but never used.","Identifier","unusedVar","'UserDetails' is defined but never used.","'Login' is defined but never used.","'TaskDetails' is defined but never used.","'Draggable' is defined but never used.","'socketService' is defined but never used.","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.","'createSocketService' is defined but never used.","'socketIsReady' is assigned a value but never used.","'DragDropContext' is defined but never used.","'utilService' is defined but never used.","'Droppable' is defined but never used.","'Provider' is defined but never used.","'duration' is assigned a value but never used.","'index' is assigned a value but never used.","'task' is assigned a value but never used.","'updateBoard' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]