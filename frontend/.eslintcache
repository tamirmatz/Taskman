<<<<<<< HEAD
[{"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\index.js":"1","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\store.js":"4","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\App.jsx":"5","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js":"6","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js":"7","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js":"8","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js":"9","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\routes.js":"10","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx":"11","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\UserDetails.jsx":"12","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Board.jsx":"13","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Home.jsx":"14","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\BoardList.jsx":"15","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Chat.jsx":"16","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskDetails.jsx":"17","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\boardService.js":"18","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js":"19","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx":"20","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js":"21","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\userActions.js":"22","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\utilService.js":"23","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\socketService.js":"24","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx":"25","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\userService.js":"26","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js":"27","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\httpService.js":"28","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\Upload.jsx":"29","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx":"30","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx":"31","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardNavbar.jsx":"32","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckList.jsx":"33","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\reviewService.js":"34","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx":"35","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\data\\board.js":"36","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js":"37","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx":"38","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx":"39","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckListStatus.jsx":"40","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\ActionList.jsx":"41","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\LabelModal.jsx":"42","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MembersModal.jsx":"43","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\ModalAction.jsx":"44","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\OverlayAction.jsx":"45","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\systemAction.js":"46","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\LabelTask.jsx":"47","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Login.jsx":"48","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardMembersModal.jsx":"49","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\DueDateModal.jsx":"50","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MoveModal.jsx":"51","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\CopyModal.jsx":"52","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\GroupModal.jsx":"53"},{"size":935,"mtime":1622098926959,"results":"54","hashOfConfig":"55"},{"size":377,"mtime":1622098926965,"results":"56","hashOfConfig":"55"},{"size":5201,"mtime":1622098926966,"results":"57","hashOfConfig":"55"},{"size":752,"mtime":1622112896615,"results":"58","hashOfConfig":"55"},{"size":535,"mtime":1622209089530,"results":"59","hashOfConfig":"55"},{"size":868,"mtime":1622452098317,"results":"60","hashOfConfig":"55"},{"size":688,"mtime":1622215143805,"results":"61","hashOfConfig":"55"},{"size":426,"mtime":1622658771162,"results":"62","hashOfConfig":"55"},{"size":669,"mtime":1622098926981,"results":"63","hashOfConfig":"55"},{"size":634,"mtime":1622628379726,"results":"64","hashOfConfig":"55"},{"size":2829,"mtime":1622707504500,"results":"65","hashOfConfig":"55"},{"size":1405,"mtime":1622627111688,"results":"66","hashOfConfig":"55"},{"size":7653,"mtime":1622724409483,"results":"67","hashOfConfig":"55"},{"size":3007,"mtime":1622716101285,"results":"68","hashOfConfig":"55"},{"size":4782,"mtime":1622718355983,"results":"69","hashOfConfig":"55"},{"size":3395,"mtime":1622115436998,"results":"70","hashOfConfig":"55"},{"size":15636,"mtime":1622724409456,"results":"71","hashOfConfig":"55"},{"size":3211,"mtime":1622672132024,"results":"72","hashOfConfig":"55"},{"size":1321,"mtime":1622115440359,"results":"73","hashOfConfig":"55"},{"size":165,"mtime":1622294072443,"results":"74","hashOfConfig":"55"},{"size":2193,"mtime":1622658771200,"results":"75","hashOfConfig":"55"},{"size":1966,"mtime":1622631383176,"results":"76","hashOfConfig":"55"},{"size":2832,"mtime":1622716031499,"results":"77","hashOfConfig":"55"},{"size":2414,"mtime":1622479249276,"results":"78","hashOfConfig":"55"},{"size":533,"mtime":1622636238075,"results":"79","hashOfConfig":"55"},{"size":2097,"mtime":1622479249277,"results":"80","hashOfConfig":"55"},{"size":2404,"mtime":1622283961369,"results":"81","hashOfConfig":"55"},{"size":1136,"mtime":1622115365941,"results":"82","hashOfConfig":"55"},{"size":1127,"mtime":1622631197416,"results":"83","hashOfConfig":"55"},{"size":6715,"mtime":1622724409452,"results":"84","hashOfConfig":"55"},{"size":490,"mtime":1622675021296,"results":"85","hashOfConfig":"55"},{"size":3994,"mtime":1622707504507,"results":"86","hashOfConfig":"55"},{"size":4514,"mtime":1622707504509,"results":"87","hashOfConfig":"55"},{"size":1087,"mtime":1622115441879,"results":"88","hashOfConfig":"55"},{"size":117,"mtime":1622707504525,"results":"89","hashOfConfig":"55"},{"size":305529,"mtime":1622471688098,"results":"90","hashOfConfig":"55"},{"size":587,"mtime":1622629649919,"results":"91","hashOfConfig":"55"},{"size":7257,"mtime":1622710501017,"results":"92","hashOfConfig":"55"},{"size":846,"mtime":1622650216553,"results":"93","hashOfConfig":"55"},{"size":715,"mtime":1622658771131,"results":"94","hashOfConfig":"55"},{"size":4348,"mtime":1622707504513,"results":"95","hashOfConfig":"55"},{"size":1575,"mtime":1622707504519,"results":"96","hashOfConfig":"55"},{"size":2305,"mtime":1622724409468,"results":"97","hashOfConfig":"55"},{"size":220,"mtime":1622559991731,"results":"98","hashOfConfig":"55"},{"size":129,"mtime":1622707504524,"results":"99","hashOfConfig":"55"},{"size":756,"mtime":1622658771160,"results":"100","hashOfConfig":"55"},{"size":3987,"mtime":1622707504514,"results":"101","hashOfConfig":"55"},{"size":4715,"mtime":1622631519843,"results":"102","hashOfConfig":"55"},{"size":2261,"mtime":1622724409454,"results":"103","hashOfConfig":"55"},{"size":1668,"mtime":1622710501026,"results":"104","hashOfConfig":"55"},{"size":3085,"mtime":1622707504521,"results":"105","hashOfConfig":"55"},{"size":2973,"mtime":1622707504516,"results":"106","hashOfConfig":"55"},{"size":1552,"mtime":1622724409465,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1prlnqd",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"110"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"110"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\index.js",[],["234","235"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\store.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\App.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js",["236"],"let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\nconst defUser = {\r\n  \"_id\": \"u101\",\r\n  \"fullname\": \"Abi Abambi\",\r\n  \"username\": \"abi@ababmi.com\",\r\n  \"password\": \"aBambi123\",\r\n  \"imgUrl\": \"http://some-img.jpg\",\r\n  \"mentions\": [{\r\n    \"id\": \"m101\",\r\n    \"boardId\": \"m101\",\r\n    \"taskId\": \"t101\"\r\n  }]\r\n}\r\nconst initialState = {\r\n  loggedInUser: defUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\routes.js",["237"],"import { Home } from './pages/Home'\r\nimport { Chat } from './pages/Chat'\r\nimport { UserDetails } from './pages/UserDetails'\r\nimport { BoardList } from './pages/BoardList'\r\nimport { Board } from './pages/Board'\r\nimport { Login } from './pages/Login'\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/user/:userId',\r\n        component: UserDetails,\r\n    },\r\n    {\r\n        path: '/board/:boardId',\r\n        component: Board,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: BoardList\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n]\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\UserDetails.jsx",["238","239","240"],"import React, { Component } from 'react'\r\nimport { Upload } from '../cmps/Upload'\r\nimport ProfileImg from '../assets/img/profilePic.jpg'\r\nimport { userService } from '../services/userService.js'\r\n\r\nexport class UserDetails extends Component {\r\n  state = {\r\n    user: null\r\n  }\r\n  async componentDidMount() {\r\n    const user = await userService.getById(this.props.match.params.userId)\r\n    // const user = {\r\n    //   _id: 'a123',\r\n    //   username: 'NadavMgr',\r\n    //   fullame: 'Nadav Magier',\r\n    //   email: 'nadav1410@gmail.com',\r\n    //   imgUrl: 'https://res.cloudinary.com/dorshaul/image/upload/v1617004425/ytav_twnglu.jpg',\r\n    //   createdAt: '2021-03-29T07:54:21.000Z'\r\n    // }\r\n    this.setState({ user })\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.user) return <div>loading..</div>\r\n    const { _id, username, fullname, email, imgUrl } = this.state.user\r\n    const url = (imgUrl) ? imgUrl : ProfileImg\r\n    return (\r\n      <section className=\"user-details-container\">\r\n        <div className=\"user-details flex\">\r\n          <img src={url} />\r\n          <div className=\"txt-user-details flex column fam-1\">\r\n            <span className=\"user-fullname\">{fullname}</span>\r\n            <span className=\"user-username\">@{username}</span>\r\n            <span className=\"user-email\">{email}</span>\r\n          </div>\r\n        </div>\r\n        {/* <Upload /> */}\r\n\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Board.jsx",["241","242"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Home.jsx",["243","244","245","246","247","248","249","250","251"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\BoardList.jsx",["252","253","254","255","256","257","258","259","260"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Chat.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskDetails.jsx",["261","262","263","264","265"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { boardService } from '../../../services/boardService.js'\r\nimport { remove, add, loadBoard, update } from '../../../store/actions/boardsAction.js';\r\nimport onClickOutside from \"react-onclickoutside\";\r\nimport { BsCardChecklist } from 'react-icons/bs'\r\nimport { GrTextAlignFull } from 'react-icons/gr'\r\nimport { FaRegCommentDots } from 'react-icons/fa'\r\nimport { utilService } from '../../../services/generalService/utilService.js';\r\nimport { CheckList } from './CheckList';\r\nimport { ActionList } from './action/ActionList';\r\nimport { UserPreview } from '../UserPreview.jsx';\r\nimport { RiDeleteBin6Line } from 'react-icons/ri'\r\n\r\n// import {TaskTitle} from '../taskDetails/TaskTitle';\r\n\r\n\r\n\r\nclass _TaskDetails extends Component {\r\n    state = {\r\n        group: null,\r\n        task: null,\r\n        onFocus: false,\r\n        overlay: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { boardId, taskId, groupId } = this.props.match.params;\r\n        const board = { ...this.props.board };\r\n        const group = boardService.getGroupById(board, groupId);\r\n        const task = boardService.getTaskById(group, taskId);\r\n        this.addClassName();\r\n        this.setState({ ...this.state, group, task })\r\n    }\r\n\r\n\r\n\r\n    //Destroyed the check list! don't use it! -tamir&naav- <3\r\n\r\n    // componentDidUpdate(prevProps) {\r\n    //     if (this.props !== prevProps) {\r\n    //         const { boardId, taskId, groupId } = this.props.match.params;\r\n    //         const board = { ...this.props.board };\r\n    //         const group = boardService.getGroupById(board, groupId);\r\n    //         const task = boardService.getTaskById(group, taskId);\r\n    //         this.setState({ ...this.state, group, task })\r\n    //     }\r\n    // }\r\n\r\n\r\n    addClassName() {\r\n        document.querySelector('.board').classList.add('max-screen');\r\n    };\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({\r\n            task: {\r\n                ...prevState.task,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    handleClickOutside = evt => {\r\n        // ..handling code goes here...\r\n    };\r\n\r\n    updateTask = () => {\r\n        if (!this.state.task.title) return;\r\n        const copyBoard = { ...this.props.board };\r\n        const groupIdx = boardService.getGroupIdxById(copyBoard, this.state.group.id)\r\n        const taskIdx = boardService.getTaskIdxById(this.state.group, this.state.task.id)\r\n        copyBoard.groups[groupIdx].tasks[taskIdx] = this.state.task\r\n        this.props.update(copyBoard)\r\n    }\r\n\r\n    updateTaskState = (task) => {\r\n        this.setState({ task })\r\n    }\r\n\r\n    onAddCheckList = (task) => {\r\n        if (!task.checklists) {\r\n            task.checklists = [];\r\n        }\r\n        task.checklists.push({ id: utilService.makeId(), title: 'Checklist', todos: [] })\r\n        this.setState({ task }, this.updateTask)\r\n\r\n    }\r\n    onRemoveCheckList = (checklistIdx) => {\r\n        const { task } = this.state\r\n        task.checklists.splice(checklistIdx, 1)\r\n        this.setState({ task }, this.updateTask)\r\n    }\r\n\r\n    onDeleteTask = () => {\r\n        const { boardId } = this.props.match.params;\r\n        const copyboard = this.props.board\r\n        const { task, group } = this.state\r\n        group.tasks.splice(boardService.getTaskIdxById(group, task.id), 1)\r\n        copyboard.groups[boardService.getGroupIdxById(copyboard, group.id)] = group\r\n        this.props.update(copyboard)\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n\r\n    onAddMemberToTask = (addedMember) => {\r\n        const { task } = this.state;\r\n        const memberIdx = task.members.findIndex(member => member._id === addedMember._id)\r\n        if (memberIdx !== -1) {\r\n            task.members.splice(memberIdx, 1)\r\n        }\r\n        else task.members.push(addedMember)\r\n        this.updateTask()\r\n    }\r\n\r\n    onSaveDueDate = (date) => {\r\n        const { task } = this.state;\r\n        task.dueDate = date\r\n        this.updateTask()\r\n    }\r\n\r\n    isMemberChecked = (memberCheck) => {\r\n        const { task } = this.state;\r\n        const memberIdx = task.members.findIndex(member => member._id === memberCheck._id)\r\n        if (memberIdx !== -1) {\r\n            return 'checked'\r\n        }\r\n        else return ''\r\n    }\r\n\r\n    isDueDateDone = (val) => {\r\n        const { task } = this.state;\r\n        task.isDone = val\r\n        this.updateTask()\r\n    }\r\n\r\n    toggleModal = (className) => {\r\n        const modals = document.querySelectorAll('.action-modal');\r\n        const currModal = document.querySelector(`.${className}`);\r\n        if (modals) {\r\n            modals.forEach(\r\n                el => el.classList.add('d-none'));\r\n        }\r\n        if (currModal) {\r\n            currModal.classList.remove('d-none');\r\n        }\r\n    }\r\n    openOverlay = (className) => {\r\n        this.setState({ ...this.state, overlay: 'details-overlay' });\r\n    }\r\n\r\n\r\n    closeOverlay = (ev) => {\r\n        if (!ev.target.classList.contains('btn-action') && !ev.target.classList.contains('btn-act')) {\r\n            if (ev.target.offsetParent !== undefined && ev.target.offsetParent.classList[0] !== undefined && ev.target.offsetParent.classList[0] === 'task-details') {\r\n                const modals = document.querySelectorAll('.action-modal');\r\n                if (modals) {\r\n                    modals.forEach(\r\n                        el => el.classList.add('d-none'));\r\n                }\r\n                this.setState({ ...this.state, overlay: '' });\r\n\r\n            }\r\n        }\r\n        // this.setState({ ...this.state, overlay: '' });\r\n        // if(ev.target.classList.contain('btn-action'))\r\n    }\r\n\r\n    onAddLabelTask = (labelId) => {\r\n        const task = this.state;\r\n        if (!task.labels) {\r\n            task.labels = [];\r\n        }\r\n        task.labels.push(labelId);\r\n    }\r\n\r\n    onSendComment = (txt) => {\r\n        const { loggedInUser } = this.props\r\n        const { task } = this.state;\r\n        task.comments.unshift({ id: utilService.makeId(), txt, createdAt: Date.now(), byMember: loggedInUser })\r\n        this.updateTask()\r\n    }\r\n\r\n    onRemoveComment = (commentIdx) => {\r\n        const { task } = this.state;\r\n        task.comments.splice(commentIdx, 1)\r\n        this.updateTask()\r\n    }\r\n\r\n    render() {\r\n        const { task } = this.state;\r\n        const { board, loggedInUser } = this.props\r\n        if (!task) return <h1>Loading...</h1>\r\n        return (\r\n            <section className={`task-details w-50 flex bg-modal c-stand fam-1 pad-1 ${this.state.overlay}`}\r\n                onClick={(ev) => { this.closeOverlay(ev) }}>\r\n                <div className=\"info-task flex column w-70 h-100 content-start\">\r\n                    {/* Title */}\r\n                    <form className=\"task-title flex column content-start pb-2 w-100\" onSubmit={(ev) => {\r\n                        ev.preventDefault()\r\n                        this.updateTask()\r\n                    }}>\r\n                        <div className=\"task-title flex center h-33\">\r\n                            <label\r\n                                htmlFor=\"title\"\r\n                                className=\"font-3 flex center w-100\">\r\n                                <BsCardChecklist />\r\n                                <input\r\n                                    onBlur={this.updateTask}\r\n                                    type=\"text\"\r\n                                    value={task.title}\r\n                                    name=\"title\"\r\n                                    className=\"input-details title-task-input\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <h3 className=\"task-list-title fam-1 font-2 left-self h-20 center\">in list{' '}\r\n                            <span className=\"t-decor\">{this.state.group.title}</span>\r\n                        </h3>\r\n                    </form>\r\n\r\n                    <section className=\"info-task flex wrap gap-1 center mb-1\">\r\n                        <div className=\"task-members\">\r\n                            {task.members.length > 0 && <h3 className=\"font-s fw-1 fam-1 left-self c-lead\">MEMBERS</h3>}\r\n                            <ul className=\"flex center gap-xs\">\r\n                                {task.members.map(member => {\r\n                                    return <UserPreview key={member._id} user={member} />\r\n                                })}\r\n                                {task.members.length > 0 &&\r\n                                    <span onClick={() => { this.toggleModal('members-wrap-modal'); this.openOverlay() }} className=\"btn-act  user-preview flex center content-center font-m bg-btn cur-pointer \">+</span>}\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"task-labels flex column center wrap\">\r\n                            {(task.labelIds && task.labelIds.length > 0) && <h3 className=\"font-s fw-1 fam-1 left-self c-lead\">LABELS</h3>}\r\n                            <ul className=\"flex center wrap\">\r\n                                {task.labelIds && task.labelIds.map(labelId => {\r\n                                    const label = board.labels.find(label => {\r\n                                        return label.id === labelId;\r\n                                    })\r\n                                    if (label) {\r\n                                        return (\r\n                                            <div\r\n                                                key={label.id}\r\n                                                className={`details-label bold flex center pad-xs mb-03`} onClick={() => { this.toggleModal('label-wrap-modal') }} style={{ backgroundColor: label.color }}\r\n                                            >\r\n                                                {label.title}\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                                {task.labelIds && <span onClick={() => { this.toggleModal('label-wrap-modal'); this.openOverlay(); }} className=\"details-label bold flex center pad-xs mb-03 bg-btn btn-act cur-pointer\">+</span>}\r\n                            </ul>\r\n                        </div>\r\n                        {task.dueDate && <div className=\"task-duedate flex center column\">\r\n                            <h3 className=\"font-s fw-1 fam-1 left-self c-lead\">DUE DATE</h3>\r\n                            <div className=\"flex\">\r\n                                <input onChange={(ev) => { this.isDueDateDone(ev.target.checked) }} checked={task.isDone} type=\"checkbox\" />\r\n                                <p>{Intl.DateTimeFormat('IL-il').format(task.dueDate)}</p>\r\n                                {task.isDone && <div className=\"complete-duedate\">complete</div>}\r\n                            </div>\r\n                        </div>}\r\n                    </section>\r\n\r\n                    <section className=\"desc-section\">\r\n                        <div className=\"desc-header flex row mb-1\">\r\n                            <GrTextAlignFull /><label>Description</label>\r\n                        </div>\r\n                        <form onSubmit={(ev) => {\r\n                            ev.preventDefault()\r\n                            this.updateTask()\r\n                        }}>\r\n\r\n                            <textarea placeholder=\"Add a description for this task...\" onBlur={this.updateTask} type=\"textArea\" value={task.description} name=\"description\" className=\"w-90 input-details margin-content\" onChange={this.handleChange} />\r\n                        </form>\r\n                    </section>\r\n                    {utilService.isFalse(task.checklists) && <ul className=\"todos clean-list mb-3 \">\r\n                        {task.checklists.map((checklist, idx) => {\r\n                            return <CheckList key={idx} onRemoveCheckList={this.onRemoveCheckList} idx={idx} checklists={task.checklists} handleChange={this.handleChange} updateTask={this.updateTask} checklist={checklist} updateTaskState={this.updateTaskState} task={task} />\r\n                        })}\r\n                    </ul>}\r\n\r\n                    <section className=\"comment-section\">\r\n                        <div className=\"desc-header flex row mb-1\">\r\n                            <FaRegCommentDots /><label>Comments</label>\r\n                        </div>\r\n                        <div className=\"new-comment flex center content-gap\">\r\n                                <UserPreview user={loggedInUser} />\r\n                                <form onSubmit={(ev) => {\r\n                                    ev.preventDefault()\r\n                                    this.onSendComment(ev.target[0].value)\r\n                                }}>\r\n                                    <input className=\"comment-input\" placeholder=\"Write a comment...\" name=\"txt\">\r\n                                    </input>\r\n                                    <button className=\"btn-send-comment\">Send</button>\r\n                                </form>\r\n                        </div>\r\n                                \r\n                        {task.comments && <ul className=\"comments clean-list\">\r\n                            {task.comments.map((comment, idx) => {\r\n                                return <li className=\"full-comment flex column\">\r\n                                    <div className=\"flex space-between\">\r\n                                        <div className=\"content-gap flex center\"> \r\n                                        <UserPreview user={comment.byMember} />\r\n                                        <div className=\"commenter-name\">{comment.byMember.fullname}</div>\r\n                                        <small>{utilService.timeAgo(comment.createdAt)}</small>\r\n                                        </div>\r\n                                    <div className='btn-del-comment' onClick={() => { this.onRemoveComment(idx) }}><RiDeleteBin6Line/></div>\r\n                                    </div>\r\n                                    <div className=\"comment-gap\">\r\n                                        <p className=\"comment-txt \">{comment.txt}</p>\r\n                                    </div>\r\n                                </li>\r\n                            })}\r\n                        </ul>}\r\n                    </section>\r\n                </div>\r\n                <ActionList\r\n                    openOverlay={() => { this.openOverlay() }}\r\n                    onSaveDueDate={this.onSaveDueDate}\r\n                    onDeleteTask={this.onDeleteTask}\r\n                    toggleModal={this.toggleModal}\r\n                    isMemberChecked={this.isMemberChecked}\r\n                    onAddMemberToTask={this.onAddMemberToTask}\r\n                    task={task}\r\n                    group={this.state.group}\r\n                    onAddCheckList={this.onAddCheckList}\r\n                />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    remove,\r\n    add,\r\n    loadBoard,\r\n    update\r\n}\r\nexport const TaskDetails = connect(mapStateToProps, mapDispatchToProps)(_TaskDetails)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\boardService.js",["266","267"],"import { utilService } from './generalService/utilService.js'\r\nimport { storageService } from './generalService/asyncStorageService.js'\r\nimport {httpService} from '../services/generalService/httpService.js'\r\n\r\nwindow.storageService = storageService;\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    update,\r\n    add,\r\n    getGroupById,\r\n    getTaskById,\r\n    getGroupIdxById,\r\n    checklistPreview,\r\n    getTaskIdxById,\r\n    checklistPrecent,\r\n    updateTaskAtBoard\r\n}\r\n\r\n\r\nfunction query() {\r\n    // return storageService.query(STORAGE_KEY)\r\n    return httpService.get('board')\r\n}\r\n\r\nfunction getById(boardId) {\r\n    // const board = storageService.get(STORAGE_KEY, boardId);\r\n    // return board\r\n    return httpService.get(`board/${boardId}`)\r\n\r\n}\r\n\r\nfunction remove(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function add(title, background) {\r\n    console.log(title,background)\r\n    // const newBoard = _createBoard()\r\n    // const savedBoard = storageService.post(STORAGE_KEY, newBoard)\r\n    // return savedBoard\r\n    const board = {title ,style:{background}}\r\n    console.log(board)\r\n    const res = await httpService.post(`board`, board)\r\n    return res\r\n}\r\n\r\nasync function update(board) {\r\n    // return storageService.put(STORAGE_KEY, board)\r\n    board.activities = []\r\n    \r\n    const res = await httpService.put(`board/${board._id}`, board)\r\n    return res\r\n\r\n}\r\n\r\n//task crud\r\nfunction getGroupById(board, groupId) {\r\n    return board.groups.find(group => group.id === groupId);\r\n}\r\n\r\nfunction getGroupIdxById(board, groupId) {\r\n    return board.groups.findIndex(group => group.id === groupId);\r\n}\r\n\r\nfunction getTaskIdxById(group, taskId) {\r\n    return group.tasks.findIndex(task => task.id === taskId);\r\n}\r\n\r\nfunction getTaskById(group, taskId) {\r\n    return group.tasks.find(task => task.id === taskId)\r\n}\r\n\r\nfunction checklistPreview(task) {\r\n    const checklists = task.checklists\r\n    let isDone = false\r\n    let allTodos = 0;\r\n    let doneTodos = 0;\r\n    checklists.forEach(checkList => {\r\n        allTodos += checkList.todos.length;\r\n        checkList.todos.forEach(todo => {\r\n            if (todo.isDone) doneTodos++\r\n        })\r\n    });\r\n    if (doneTodos === allTodos && allTodos) isDone = true;\r\n    const str = `${doneTodos}/${allTodos}`\r\n    const res = { str, isDone}\r\n    return res\r\n}\r\n\r\nfunction checklistPrecent(checklist){\r\n    let doneTodos = 0;\r\n    checklist.todos.forEach(todo => {\r\n        if(todo.isDone) doneTodos++\r\n    })\r\n    const precent = (doneTodos / checklist.todos.length) * 100 \r\n    \r\n    return precent\r\n}\r\n\r\nfunction _updateTaskAtGroup(group, updateTask){\r\n    const idx = group.tasks.findIndex( task => {\r\n        task.id = updateTask.id;\r\n    })\r\n    group.tasks.splice(idx, 1, updateTask);\r\n    return group;\r\n}\r\n\r\nfunction _updateGroupAtBoard( board ,updateGroup){\r\n    const idx = getGroupIdxById(board, updateGroup.id)\r\n    board.groups[idx] = updateGroup;\r\n    return board;\r\n}\r\n\r\nfunction updateTaskAtBoard(board,group, updateTask){\r\n    const updateGroup =  _updateTaskAtGroup(group, updateTask);\r\n    const updateBoard = _updateGroupAtBoard(board, updateGroup);\r\n    return updateBoard;\r\n}","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js",["268","269"],"import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../../services/generalService/socketService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n      // socketService.on(SOCKET_EVENT_REVIEW_ADDED, review =>{\r\n      //   dispatch({ type: 'ADD_REVIEW', review })\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\utilService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\socketService.js",["270"],"import io from 'socket.io-client'\r\nimport {httpService} from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\nfunction cb(x) {console.log(x)}\r\nsocketService.on('baba', cb)\r\nsocketService.on('mama', cb)\r\nsocketService.on('lala', cb)\r\nsocketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\userService.js",["271"],"// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './generalService/httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\httpService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\Upload.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx",["272","273"],"import { TaskPreview } from '../board/TaskPreview'\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Component } from 'react';\r\nimport { boardService } from '../../services/boardService.js'\r\nimport { utilService } from '../../services/generalService/utilService.js'\r\nimport { HiOutlineMenuAlt4 } from 'react-icons/hi'\r\nconst EMPTY_TASK = { title: '' }\r\nconst EMPTY_GROUP = { title: '' }\r\n\r\nexport class TaskList extends Component {\r\n    state = {\r\n        group: EMPTY_GROUP,\r\n        task: EMPTY_TASK\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ group: this.props.group })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({\r\n            task: {\r\n                ...prevState.task,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    updateGroup = () => {\r\n        if (!this.state.group.title) return;\r\n        const copyBoard = { ...this.props.board };\r\n        this.props.updateBoard(copyBoard)\r\n        const groupIdx = boardService.getGroupIdxById(copyBoard, this.state.group.id)\r\n        copyBoard.groups[groupIdx] = this.state.group\r\n        console.log(copyBoard)\r\n    }\r\n\r\n    handleChangeGroup = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({\r\n            group: {\r\n                ...prevState.group,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    onAddTask = () => {\r\n        if (!this.state.task.title) return;\r\n        const { group } = this.props\r\n        const copyBoard = { ...this.props.board };\r\n        const groupIdx = boardService.getGroupIdxById(copyBoard, group.id)\r\n        copyBoard.groups[groupIdx].tasks.push(utilService.formatNewTask(this.state.task))\r\n        this.props.updateBoard(copyBoard)\r\n        this.setState({ task: EMPTY_TASK })\r\n    }\r\n\r\n    render() {\r\n        const { board, group, updateBoard, index } = this.props\r\n\r\n        return (\r\n            <Draggable index={index} draggableId={group.id} >\r\n                {(provided, snapshot) => {\r\n                    return <li className=\"group br-3\"\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                    >\r\n                        <form className=\"\" onSubmit={(ev) => {\r\n                            ev.preventDefault()\r\n                            this.updateGroup()\r\n\r\n                        }}>\r\n                            <div className=\"group-title w-100 flex center space-between pb-2\">\r\n                                <input className=\"app-input font-w2 font-m lh-20 \" onBlur={this.updateGroup} type=\"text\" value={this.state.group.title} name=\"title\" onChange={this.handleChangeGroup} />\r\n                                <div className=\"group-menu\">...</div>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"wrap-task-list\">\r\n\r\n                            <div className=\"task-list flex column center content-center\">\r\n                                <Droppable  \r\n                                droppableId={group.id} \r\n                                type='task'>\r\n                                    {(provided) => (\r\n<<<<<<< HEAD\r\n                                        <div className=\"task-list-droppable\"\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.droppableProps}\r\n                                            {...provided.dragHandleProps}>\r\n=======\r\n                                        <div className=\"task-list-droppable\" \r\n                                        ref={provided.innerRef} \r\n                                        {...provided.droppableProps} \r\n                                        >\r\n>>>>>>> 9d29341a2f5a6bb34821357e27cfb0e0972056e4\r\n                                            {group.tasks.map((task, idx) => (\r\n                                                <TaskPreview key={task.id}\r\n                                                    board={board}\r\n                                                    index={idx}\r\n                                                    groupId={group.id}\r\n                                                    updateBoard={updateBoard}\r\n                                                    task={task}\r\n                                                />\r\n                                            ))}\r\n                                            {!utilService.isFalse(group.tasks) && <h1 className=\"task-title fam-1 font-m\">No tasks to show</h1>}\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </div>\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.onAddTask()\r\n                                console.log(ev)\r\n                            }}>\r\n                                <input className=\"add-task\" value={this.state.task.title} type=\"text\" placeholder=\"+ Add another card\" name=\"title\" onChange={this.handleChange} />\r\n                            </form>\r\n                        </div>\r\n                    </li>\r\n                }}\r\n            </Draggable>)\r\n        /*    </div> */\r\n    }\r\n}","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardNavbar.jsx",["274"],"import { MembersBoard } from '../MembersBoard';\r\nimport { MdKeyboardArrowDown } from 'react-icons/md'\r\nimport { RiDashboardLine } from 'react-icons/ri'\r\nimport { AiOutlineStar } from 'react-icons/ai'\r\nimport { Component } from 'react';\r\nimport { BoardMembersModal } from './BoardMembersModal'\r\n\r\n\r\n\r\nexport class BoardNavbar extends Component {\r\n    state = {\r\n        title: this.props.board.title,\r\n        members: this.props.board.members\r\n    }\r\n\r\n\r\n    onAddMemberToBoard = (addedMember) => {\r\n        const { members } = this.state\r\n        const memberIdx = members.findIndex(member => member._id === addedMember._id)\r\n        if (memberIdx !== -1) {\r\n            members.splice(memberIdx, 1)\r\n        }\r\n        else members.push(addedMember)\r\n        const copyBoard = { ...this.props.board }\r\n        copyBoard.members = members\r\n        console.log(members)\r\n        this.props.updateBoard(copyBoard)\r\n    }\r\n\r\n    isMemberChecked = (memberCheck) => {\r\n        const memberIdx = this.state.members.findIndex(member => member._id === memberCheck._id)\r\n        if (memberIdx !== -1) {\r\n            return 'checked'\r\n        }\r\n        else return ''\r\n    }\r\n\r\n    toggleModal = (className) => {\r\n        const modals = document.querySelectorAll('.action-modal');\r\n        const currModal = document.querySelector(`.${className}`);\r\n        if (modals) {\r\n            modals.forEach(\r\n                el => el.classList.add('d-none'));\r\n        }\r\n        if (currModal) {\r\n            currModal.classList.remove('d-none');\r\n        }\r\n    }\r\n    onChangeBoardName = () => {\r\n        const board = this.props.board\r\n        board.title = this.state.title\r\n        this.props.updateBoard(board)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState({ [field]: value })\r\n    }\r\n    render() {\r\n        const { board, onUpdate } = this.props\r\n        if (!board) return <div>Loading...</div>\r\n        return (\r\n            <nav className=\"board-navbar flex space-between font-1 c-white fam-1 mb-03\">\r\n                <ul className=\"left-bar flex center space-evenly \">\r\n                    <li className=\"btn-board\"><RiDashboardLine />Board<MdKeyboardArrowDown /></li>\r\n                    <li className=\"btn-board \"><AiOutlineStar /></li>\r\n                    <li className=\"btn-board bold\"><form onSubmit={(ev) => {\r\n                        ev.preventDefault()\r\n                        this.onChangeBoardName(ev)\r\n                    }}>\r\n                        <input type=\"text\"\r\n                            className=\"app-input nav-board-input bold font-m lh-20 c-white\"\r\n                            name=\"title\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.title}\r\n                            onBlur={this.onChangeBoardName}\r\n                            maxLength = {13}\r\n                        />\r\n                    </form></li>\r\n                    <li className=\"btn-board\">Visiblity</li>\r\n                    <ul className=\"members-wrap\">\r\n                        <li\r\n                            className=\"btn-board \"\r\n                            onClick={() => { this.toggleModal('board-members-wrap-modal') }}>\r\n                            Invite\r\n                        </li>\r\n                        <BoardMembersModal\r\n                            users={this.props.users}\r\n                            isMemberChecked={this.isMemberChecked}\r\n                            onAddMemberToBoard={this.onAddMemberToBoard}\r\n                            toggleModal={() => { this.toggleModal() }}\r\n                        />\r\n                    </ul>\r\n                    <li className=\"btn-board\" ><MembersBoard /></li>\r\n                </ul>\r\n                <ul className=\"right-bar flex center\">\r\n                    <li className=\"btn-board\">Show-menu</li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckList.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\reviewService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\data\\board.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx",["275","276","277","278","279","280","281"],"import { Link } from 'react-router-dom'\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Provider } from 'react-redux';\r\nimport { boardService } from '../../services/boardService.js'\r\nimport { BsCheckBox } from 'react-icons/bs'\r\nimport { FaRegCommentDots } from 'react-icons/fa'\r\nimport { AiOutlineClockCircle, AiOutlineClose } from 'react-icons/ai'\r\nimport { GrTextAlignFull } from 'react-icons/gr'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/generalService/utilService'\r\nimport React, { Component } from 'react'\r\nimport { UserPreview } from './UserPreview.jsx';\r\n\r\nimport { toggleLabel } from '../../store/actions/systemAction.js';\r\n\r\n\r\n\r\n// export function TaskPreview({ board, index, task, updateBoard, groupId }) {\r\nclass _TaskPreview extends Component {\r\n\r\n    getStyle = (style, snapshot) => {\r\n        if (!snapshot.isDropAnimating) {\r\n            return style;\r\n        }\r\n        const { moveTo, curve, duration } = snapshot.dropAnimation;\r\n        // move to the right spot\r\n        const translate = `translate(${moveTo.x}px, ${moveTo.y}px)`;\r\n        // add a bit of turn for fun\r\n        const rotate = 'rotate(0.01turn)';\r\n\r\n        // patching the existing style\r\n        return {\r\n            ...style,\r\n            background: '#fff',\r\n            transform: `${translate} ${rotate}`,\r\n            // slowing down the drop because we can\r\n            transition: `all ${curve} 0.2s`,\r\n        };\r\n    }\r\n\r\n    onRemoveTask = (taskId) => {\r\n        const { board, index, task, updateBoard, groupId } = this.props\r\n        const group = board.groups[boardService.getGroupIdxById(board, groupId)]\r\n        board.groups[boardService.getGroupIdxById(board, groupId)].tasks.splice(boardService.getTaskIdxById(group, taskId), 1)\r\n        updateBoard({ ...board })\r\n    }\r\n\r\n    dueDateDonePreview = (task) => {\r\n        if(task.isDone) return 'done-preview'\r\n        else return ''\r\n     }\r\n    render() {\r\n        const { board, index, task, updateBoard, groupId } = this.props\r\n        const isLabelOpen = this.props.isLabelOpen;\r\n        return <Draggable\r\n            draggableId={task.id}\r\n            index={index}\r\n        // isDragDisabled={false}\r\n        >\r\n            {(provided, snapshot) => {\r\n                return (\r\n                    <div\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                        isdragging={snapshot.isDragging && !snapshot.isDropAnimating ? 'true' : 'false'}\r\n                        style={this.getStyle(provided.draggableProps.style, snapshot)}\r\n                    >\r\n                        <div className=\"wrap-list-task br-3\">\r\n                            <div className=\"wrap-task-prev\">\r\n                                <div className=\"task-preview flex column\">\r\n                                    {/* <Link to={`/board/${board._id}/${task.id}`}> */}\r\n                                    <span className=\"cur-pointer fam-1 font-s bold flex d-none \" onClick={() => { this.onRemoveTask(task.id) }}><AiOutlineClose /></span>\r\n                                    {utilService.isFalse(task.labelIds) &&\r\n                                                <div className=\"labels-container flex  wrap\" onClick={(ev) => {\r\n                                                    ev.stopPropagation();\r\n                                                }}>\r\n                                                    {\r\n                                                        task.labelIds.map(labelId => {\r\n                                                            const label = board.labels.find(label => {\r\n                                                                return label.id === labelId;\r\n                                                            })\r\n\r\n                                                            if (label) {\r\n                                                                return <div\r\n                                                                    key={label.id}\r\n                                                                    className={`preview-label flex  ${isLabelOpen && \"label-open\"}`}\r\n                                                                    onClick={() => this.props.toggleLabel(!isLabelOpen)}\r\n                                                                    style={{ backgroundColor: label.color }}\r\n                                                                >\r\n                                                                    {this.props.isLabelOpen && label.title}\r\n                                                                </div>\r\n                                                            }\r\n                                                        })}\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <Link to={`/board/${board._id}/${groupId}/${task.id}`}>\r\n\r\n\r\n                                        <h1 className=\"task-title fam-1 font-m\">{task.title}</h1>\r\n                                        <div className=\"task-mini-details flex w-100 content-start  gap-xs fam-1 c-stand\">\r\n                                            {/* {utilService.isFalse(task.members) && <small className=\"flex center\">{task.members.map(member => { return <UserPreview key={member._id} user={member} /> }).splice(0, 3)}</small>} */}\r\n                                            {utilService.isFalse(task.comments) && <small className=\"flex center\"><FaRegCommentDots /></small>}\r\n                                            {utilService.isFalse(task.checklists) && <div className={`flex row center ${boardService.checklistPreview(task).isDone && \"done-preview\"}`}>\r\n                                                <BsCheckBox />\r\n                                                <small>{boardService.checklistPreview(task).str}</small>\r\n                                            </div>}\r\n                                            {task.dueDate && <div className={`flex row center ${this.dueDateDonePreview(task)}`}>\r\n                                                <AiOutlineClockCircle />\r\n                                                <small>\r\n                                                    {task.dueDate}\r\n                                                </small>\r\n                                            </div>}\r\n                                            {task.description && <small className=\"flex center\"><GrTextAlignFull /></small>}\r\n                                        </div>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            }\r\n        </Draggable>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        isLabelOpen : state.systemModule.isLabelsOpen\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    toggleLabel\r\n}\r\nexport const TaskPreview = connect(mapStateToProps, mapDispatchToProps)(_TaskPreview)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx",["282"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { UserPreview } from './UserPreview';\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nclass _MembersBoard extends Component {\r\n    render() {\r\n        const members = this.props.board.members;\r\n        return (\r\n            <section className=\"members-board flex space-between\">\r\n                {members.map(member =>\r\n                    <NavLink key={member._id} to={`/user/${member._id}`}>\r\n                        <UserPreview user={member} />\r\n                    </NavLink>)}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\nexport const MembersBoard = connect(mapStateToProps, mapDispatchToProps)(_MembersBoard)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckListStatus.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\ActionList.jsx",["283","284"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { MdLabelOutline } from 'react-icons/md'\r\nimport { AiOutlineClockCircle, AiOutlineCheckSquare, AiOutlineDelete } from 'react-icons/ai'\r\nimport { BiCopy } from 'react-icons/bi'\r\nimport { FiUsers } from 'react-icons/fi'\r\nimport { BsImage, BsArrowRight } from 'react-icons/bs'\r\nimport { LabelModal } from './actionModal/LabelModal';\r\nimport { MembersModal } from './actionModal/MembersModal'\r\nimport { DueDateModal } from './actionModal/DueDateModal'\r\nimport { MoveMdodal } from './actionModal/MoveModal'\r\nimport { CopyModal } from './actionModal/CopyModal'\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\n\r\nclass _ActionList extends Component {\r\n    state = {\r\n        task: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState({\r\n            task: this.props.task\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n    }\r\n\r\n    closeDetails = () =>{\r\n        const boardId = this.props.match.params.boradId;\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n    render() {\r\n        const { task } = this.state\r\n        if (!task) return <h1>Loading...</h1>\r\n        return (\r\n            <div className=\"menu-task flex column w-40 content-start right\">\r\n                <div className=\"close-details fam-2 font-1 bold pad-1 cur-pointer\" onClick={() => this.closeDetails()}>X</div>\r\n                <div className=\"details-action flex column center pad-1 w-80\">\r\n                    <label htmlFor=\"actions\" className=\"font-m pb-3\">ACTIONS</label>\r\n                    <ul className=\"action-menu flex column w-100 clean-list font-m pad-0 fw-2\">\r\n\r\n                        <li className=\"label-wrap\" onClick={() => this.props.openOverlay('label-wrap-modal')}>\r\n                            <div className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('label-wrap-modal') }}><MdLabelOutline />Labels</div>\r\n                            <LabelModal toggleModal={() => { this.props.toggleModal() }} />\r\n                        </li>\r\n\r\n                        <ul className=\"members-wrap\">\r\n                            <li className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('members-wrap-modal') }}><FiUsers />Members</li>\r\n                            <MembersModal isMemberChecked={this.props.isMemberChecked} onAddMemberToTask={this.props.onAddMemberToTask} toggleModal={() => { this.props.toggleModal() }} />\r\n                        </ul>\r\n\r\n                        <li className=\"duedate-wrap\">\r\n                            <div className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('duedate-wrap-modal') }}><AiOutlineClockCircle />DueDate</div>\r\n                            <DueDateModal onSaveDueDate={this.props.onSaveDueDate} toggleModal={() => { this.props.toggleModal() }} />\r\n                        </li>\r\n\r\n                        <li onClick={() => { this.props.onAddCheckList(task) }} className=\"btn-action\"><AiOutlineCheckSquare />Checklist</li>\r\n                        <li className=\"btn-action\"><BsImage />Image</li>\r\n                        <li className=\"move-wrap\">\r\n                            <div className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('move-wrap-modal') }}><BsArrowRight />Move</div>\r\n                            <MoveMdodal group={this.props.group} task={task} toggleModal={() => { this.props.toggleModal() }} />\r\n                        </li>\r\n                        <li className=\"copy-wrap\">\r\n                            <div className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('copy-wrap-modal') }}><BiCopy />Copy</div>\r\n                            <CopyModal group={this.props.group} task={task} toggleModal={() => { this.props.toggleModal() }} />\r\n                        </li>\r\n                        <li onClick={() => { this.props.onDeleteTask() }} className=\"btn-action btn-delete\"><AiOutlineDelete />Delete</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const ActionList = connect(mapStateToProps, mapDispatchToProps)(withRouter(_ActionList));\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\LabelModal.jsx",["285"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { LabelTask } from '../LabelTask'\r\n\r\n\r\n\r\nclass _LabelModal extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n    render() {\r\n        const labels = this.props.board.labels;\r\n        console.log(labels);\r\n        return <div className=\"action-modal label-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"label-modal p-abs flex column pad-1\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center content-end gap-5 w-70\">\r\n                        <h1 className=\"fam-1 font-1 \">Label</h1>\r\n                        <span className=\"cur-pointer fam-1 font-s bold\" onClick={() => { this.props.toggleModal('label-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content\">\r\n                        <ul>\r\n                            {labels.map((label, idx) => <LabelTask key={idx} label={label} />)}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const LabelModal = connect(mapStateToProps, mapDispatchToProps)(_LabelModal)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MembersModal.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\ModalAction.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\OverlayAction.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\systemAction.js",["286"],"import { utilService } from '../../services/generalService/utilService';\r\n\r\nexport function loading() { // Action Creator\r\n    return async dispatch => {\r\n        try {   \r\n            dispatch('LOADING_DONE');         \r\n            dispatch('LOADING_START');\r\n            setTimeout(() => {\r\n                dispatch('LOADING_DONE');\r\n            }, 1500);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\LabelTask.jsx",["287","288"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nclass _LabelTask extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        const label = this.props.label;\r\n        console.log(label);\r\n        return (\r\n            <div className=\"label-input flex\">\r\n                <input type=\"text\"  value={label.color} onChange={ ()=> {console.log('aa');}} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const LabelTask = connect(mapStateToProps, mapDispatchToProps)(_LabelTask)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Login.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardMembersModal.jsx",["289"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { UserPreview } from '../UserPreview';\r\nimport { MembersBoard } from '../MembersBoard';\r\n\r\n\r\n\r\n\r\nclass _BoardMembersModal extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        const members  = this.props.users;\r\n        return <div className=\"action-modal c-stand board-members-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"members-modal p-abs flex column pad-1\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center content-end gap-5 w-70\">\r\n                        <h1 className=\"fam-1 font-1 \">Members</h1>\r\n                        <span className=\"cur-pointer fam-1 font-s bold\" onClick={() => { this.props.toggleModal('board-members-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content\">\r\n                        <ul>\r\n                            {members.map(member => {\r\n                                return <li key={member._id} onClick={() => { this.props.onAddMemberToBoard(member) }} className=\"flex space-between member-modal center\">\r\n                                    <div className=\"flex center gap-xs\">\r\n                                        <UserPreview user={member}/>\r\n                                        <p>{member.fullname} ({member.username})</p>\r\n                                    </div>\r\n                                    <span className={`check ${this.props.isMemberChecked(member)}`}>✓</span>\r\n                                </li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const BoardMembersModal = connect(mapStateToProps, mapDispatchToProps)(_BoardMembersModal)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\DueDateModal.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MoveModal.jsx",["290"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { LabelTask } from '../LabelTask'\r\nimport { update } from '../../../../../store/actions/boardsAction';\r\nimport { boardService } from '../../../../../services/boardService'\r\n\r\n\r\nclass _MoveMdodal extends Component {\r\n    state = {\r\n        moveTo: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    moveTask = () => {\r\n        if (this.state.moveTo !== this.props.group.id) {\r\n            const copyBoard = { ...this.props.board }\r\n            copyBoard.groups[boardService.getGroupIdxById(copyBoard, this.props.group.id)].tasks.splice(\r\n                boardService.getTaskIdxById(this.props.group, this.props.task.id), 1)\r\n            copyBoard.groups[this.state.moveTo].tasks.push(this.props.task)\r\n            this.props.update(copyBoard)\r\n        }\r\n        // this.props.history.push(`/board/${copyBoard._id}`)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log(target.value)\r\n        this.setState({ moveTo: target.value })\r\n    }\r\n    render() {\r\n        return <div className=\"action-modal move-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"move-modal w-100 p-abs flex column pad-1\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center space-between gap-5 w-100 mb-1\">\r\n                        <h1 className=\"fam-1 font-1 \">Move to</h1>\r\n                        <span className=\"cur-pointer fam-1 font-s bold\" onClick={() => { this.props.toggleModal('move-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content w-100\">\r\n                        <form onSubmit={(ev) => {\r\n                            this.moveTask()\r\n                            ev.preventDefault()\r\n                        }}>\r\n                            <select onChange={this.handleChange}>\r\n                                {this.props.board.groups.map((group, idx) => {\r\n                                    return group.id === this.props.group.id && <option key={group.id} value={group.id}>{group.title}</option>\r\n                                })}\r\n                                {this.props.board.groups.map((group, idx) => {\r\n                                    return group.id !== this.props.group.id && <option value={idx} key={group.id}>{group.title}</option>\r\n                                })}\r\n                            </select>\r\n                            <button className=\"btn-copy-move\">Move</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const MoveMdodal = connect(mapStateToProps, mapDispatchToProps)(_MoveMdodal)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\CopyModal.jsx",["291","292"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { LabelTask } from '../LabelTask'\r\nimport { update } from '../../../../../store/actions/boardsAction';\r\nimport { boardService } from '../../../../../services/boardService'\r\nimport { utilService } from '../../../../../services/generalService/utilService';\r\n\r\n\r\nclass _CopyModal extends Component {\r\n    state = {\r\n        copyTo: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    copyTask = () => {\r\n        if (this.state.copyTo !== this.props.group.id) {\r\n            const copyBoard = { ...this.props.board }\r\n            const task = { ...this.props.task }\r\n            task.id = utilService.makeId()\r\n            copyBoard.groups[this.state.copyTo].tasks.push(task)\r\n            this.props.update(copyBoard)\r\n        }\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log(target.value)\r\n        this.setState({ copyTo: target.value })\r\n    }\r\n    render() {\r\n        return <div className=\"action-modal copy-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"copy-modal p-abs flex column pad-1\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center space-between gap-5 w-100 mb-1\">\r\n                        <h1 className=\"fam-1 font-1\">Copy</h1>\r\n                        <span className=\"cur-pointer fam-1 font-1 bold\" onClick={() => { this.props.toggleModal('duedate-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content\">\r\n                        <form onSubmit={(ev) => {\r\n                            this.copyTask()\r\n                            ev.preventDefault()\r\n                        }}>\r\n                            <select onChange={this.handleChange}>\r\n                                {this.props.board.groups.map((group) => {\r\n                                    return group.id === this.props.group.id && <option key={group.id} value={group.id}>{group.title}</option>\r\n                                })}\r\n                                {this.props.board.groups.map((group, idx) => {\r\n                                    return group.id !== this.props.group.id && <option value={idx} key={group.id}>{group.title}</option>\r\n                                })}\r\n                            </select>\r\n                            <button className=\"btn-copy-move\">Copy</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const CopyModal = connect(mapStateToProps, mapDispatchToProps)(_CopyModal)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\GroupModal.jsx",[],{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","severity":1,"message":"298","line":2,"column":34,"nodeType":"299","messageId":"300","endLine":2,"endColumn":51},{"ruleId":"297","severity":1,"message":"301","line":2,"column":10,"nodeType":"299","messageId":"300","endLine":2,"endColumn":14},{"ruleId":"297","severity":1,"message":"302","line":2,"column":10,"nodeType":"299","messageId":"300","endLine":2,"endColumn":16},{"ruleId":"297","severity":1,"message":"303","line":25,"column":13,"nodeType":"299","messageId":"300","endLine":25,"endColumn":16},{"ruleId":"304","severity":1,"message":"305","line":30,"column":11,"nodeType":"306","endLine":30,"endColumn":28},{"ruleId":"297","severity":1,"message":"307","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":17},{"ruleId":"297","severity":1,"message":"308","line":8,"column":27,"nodeType":"299","messageId":"300","endLine":8,"endColumn":36},{"ruleId":"297","severity":1,"message":"309","line":2,"column":10,"nodeType":"299","messageId":"300","endLine":2,"endColumn":17},{"ruleId":"297","severity":1,"message":"310","line":7,"column":10,"nodeType":"299","messageId":"300","endLine":7,"endColumn":21},{"ruleId":"297","severity":1,"message":"311","line":7,"column":23,"nodeType":"299","messageId":"300","endLine":7,"endColumn":32},{"ruleId":"297","severity":1,"message":"312","line":7,"column":34,"nodeType":"299","messageId":"300","endLine":7,"endColumn":46},{"ruleId":"297","severity":1,"message":"313","line":8,"column":10,"nodeType":"299","messageId":"300","endLine":8,"endColumn":19},{"ruleId":"304","severity":1,"message":"305","line":41,"column":11,"nodeType":"306","endLine":41,"endColumn":57},{"ruleId":"304","severity":1,"message":"305","line":51,"column":11,"nodeType":"306","endLine":51,"endColumn":64},{"ruleId":"304","severity":1,"message":"305","line":60,"column":11,"nodeType":"306","endLine":60,"endColumn":60},{"ruleId":"304","severity":1,"message":"305","line":68,"column":11,"nodeType":"306","endLine":68,"endColumn":60},{"ruleId":"297","severity":1,"message":"314","line":6,"column":8,"nodeType":"299","messageId":"300","endLine":6,"endColumn":10},{"ruleId":"297","severity":1,"message":"315","line":7,"column":8,"nodeType":"299","messageId":"300","endLine":7,"endColumn":10},{"ruleId":"297","severity":1,"message":"316","line":8,"column":8,"nodeType":"299","messageId":"300","endLine":8,"endColumn":10},{"ruleId":"297","severity":1,"message":"317","line":9,"column":8,"nodeType":"299","messageId":"300","endLine":9,"endColumn":10},{"ruleId":"297","severity":1,"message":"318","line":10,"column":8,"nodeType":"299","messageId":"300","endLine":10,"endColumn":10},{"ruleId":"297","severity":1,"message":"319","line":11,"column":8,"nodeType":"299","messageId":"300","endLine":11,"endColumn":10},{"ruleId":"297","severity":1,"message":"320","line":12,"column":8,"nodeType":"299","messageId":"300","endLine":12,"endColumn":10},{"ruleId":"297","severity":1,"message":"321","line":13,"column":8,"nodeType":"299","messageId":"300","endLine":13,"endColumn":10},{"ruleId":"297","severity":1,"message":"322","line":14,"column":10,"nodeType":"299","messageId":"300","endLine":14,"endColumn":15},{"ruleId":"297","severity":1,"message":"323","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":14},{"ruleId":"297","severity":1,"message":"324","line":6,"column":8,"nodeType":"299","messageId":"300","endLine":6,"endColumn":22},{"ruleId":"297","severity":1,"message":"325","line":27,"column":17,"nodeType":"299","messageId":"300","endLine":27,"endColumn":24},{"ruleId":"326","severity":1,"message":"327","line":238,"column":77,"nodeType":"328","messageId":"329","endLine":238,"endColumn":79},{"ruleId":"304","severity":1,"message":"305","line":287,"column":33,"nodeType":"306","endLine":287,"endColumn":85},{"ruleId":"297","severity":1,"message":"330","line":1,"column":10,"nodeType":"299","messageId":"300","endLine":1,"endColumn":21},{"ruleId":"326","severity":1,"message":"331","line":104,"column":45,"nodeType":"328","messageId":"332","endLine":104,"endColumn":47},{"ruleId":"297","severity":1,"message":"333","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":23},{"ruleId":"297","severity":1,"message":"334","line":3,"column":25,"nodeType":"299","messageId":"300","endLine":3,"endColumn":50},{"ruleId":"297","severity":1,"message":"335","line":43,"column":7,"nodeType":"299","messageId":"300","endLine":43,"endColumn":20},{"ruleId":"297","severity":1,"message":"336","line":3,"column":7,"nodeType":"299","messageId":"300","endLine":3,"endColumn":23},{"ruleId":"297","severity":1,"message":"337","line":2,"column":10,"nodeType":"299","messageId":"300","endLine":2,"endColumn":25},{"ruleId":"297","severity":1,"message":"338","line":6,"column":10,"nodeType":"299","messageId":"300","endLine":6,"endColumn":27},{"ruleId":"297","severity":1,"message":"339","line":61,"column":24,"nodeType":"299","messageId":"300","endLine":61,"endColumn":32},{"ruleId":"297","severity":1,"message":"340","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":18},{"ruleId":"297","severity":1,"message":"341","line":12,"column":10,"nodeType":"299","messageId":"300","endLine":12,"endColumn":21},{"ruleId":"297","severity":1,"message":"342","line":25,"column":32,"nodeType":"299","messageId":"300","endLine":25,"endColumn":40},{"ruleId":"297","severity":1,"message":"343","line":42,"column":24,"nodeType":"299","messageId":"300","endLine":42,"endColumn":29},{"ruleId":"297","severity":1,"message":"344","line":42,"column":31,"nodeType":"299","messageId":"300","endLine":42,"endColumn":35},{"ruleId":"297","severity":1,"message":"345","line":53,"column":37,"nodeType":"299","messageId":"300","endLine":53,"endColumn":48},{"ruleId":"326","severity":1,"message":"327","line":80,"column":83,"nodeType":"328","messageId":"329","endLine":80,"endColumn":85},{"ruleId":"297","severity":1,"message":"323","line":4,"column":10,"nodeType":"299","messageId":"300","endLine":4,"endColumn":14},{"ruleId":"297","severity":1,"message":"323","line":2,"column":10,"nodeType":"299","messageId":"300","endLine":2,"endColumn":14},{"ruleId":"297","severity":1,"message":"346","line":2,"column":16,"nodeType":"299","messageId":"300","endLine":2,"endColumn":23},{"ruleId":"297","severity":1,"message":"324","line":4,"column":8,"nodeType":"299","messageId":"300","endLine":4,"endColumn":22},{"ruleId":"297","severity":1,"message":"330","line":1,"column":10,"nodeType":"299","messageId":"300","endLine":1,"endColumn":21},{"ruleId":"297","severity":1,"message":"323","line":2,"column":10,"nodeType":"299","messageId":"300","endLine":2,"endColumn":14},{"ruleId":"297","severity":1,"message":"346","line":2,"column":16,"nodeType":"299","messageId":"300","endLine":2,"endColumn":23},{"ruleId":"297","severity":1,"message":"347","line":6,"column":10,"nodeType":"299","messageId":"300","endLine":6,"endColumn":22},{"ruleId":"297","severity":1,"message":"348","line":5,"column":10,"nodeType":"299","messageId":"300","endLine":5,"endColumn":19},{"ruleId":"297","severity":1,"message":"348","line":5,"column":10,"nodeType":"299","messageId":"300","endLine":5,"endColumn":19},{"ruleId":"297","severity":1,"message":"349","line":7,"column":10,"nodeType":"299","messageId":"300","endLine":7,"endColumn":22},"no-native-reassign",["350"],"no-negated-in-lhs",["351"],"no-unused-vars","'localLoggedinUser' is assigned a value but never used.","Identifier","unusedVar","'Chat' is defined but never used.","'Upload' is defined but never used.","'_id' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'loading' is defined but never used.","'Draggable' is defined but never used.","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","'p0' is defined but never used.","'p1' is defined but never used.","'p2' is defined but never used.","'p3' is defined but never used.","'p4' is defined but never used.","'p5' is defined but never used.","'p6' is defined but never used.","'p7' is defined but never used.","'Board' is defined but never used.","'Link' is defined but never used.","'onClickOutside' is defined but never used.","'boardId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'utilService' is defined but never used.","Array.prototype.findIndex() expects a return value from arrow function.","expectedInside","'socketService' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'socketIsReady' is assigned a value but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.","'DragDropContext' is defined but never used.","'HiOutlineMenuAlt4' is defined but never used.","'onUpdate' is assigned a value but never used.","'Provider' is defined but never used.","'UserPreview' is defined but never used.","'duration' is assigned a value but never used.","'index' is assigned a value but never used.","'task' is assigned a value but never used.","'updateBoard' is assigned a value but never used.","'NavLink' is defined but never used.","'MembersBoard' is defined but never used.","'LabelTask' is defined but never used.","'boardService' is defined but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\index.js":"1","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\store.js":"4","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\App.jsx":"5","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js":"6","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js":"7","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js":"8","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js":"9","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\routes.js":"10","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx":"11","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\Chat.jsx":"12","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\Home.jsx":"13","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\UserDetails.jsx":"14","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\LoginSignup.jsx":"15","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\BoardList.jsx":"16","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\Board.jsx":"17","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\TaskDetails.jsx":"18","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js":"19","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\userActions.js":"20","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js":"21","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\boardService.js":"22","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\utilService.js":"23","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx":"24","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\userService.js":"25","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\socketService.js":"26","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\Upload.jsx":"27","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx":"28","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js":"29","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\reviewService.js":"30","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\httpService.js":"31","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js":"32","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\data\\board.js":"33","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx":"34","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx":"35","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx":"36","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx":"37","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx":"38","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\systemActions.js":"39","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\index.js":"40","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\reportWebVitals.js":"41","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\serviceWorkerRegistration.js":"42","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\store.js":"43","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\App.jsx":"44","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js":"45","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js":"46","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js":"47","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js":"48","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\routes.js":"49","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx":"50","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Home.jsx":"51","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\BoardList.jsx":"52","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Board.jsx":"53","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Chat.jsx":"54","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\UserDetails.jsx":"55","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx":"56","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js":"57","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\userActions.js":"58","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\boardService.js":"59","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\socketService.js":"60","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\utilService.js":"61","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx":"62","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\userService.js":"63","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx":"64","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx":"65","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\Upload.jsx":"66","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js":"67","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\httpService.js":"68","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardNavbar.jsx":"69","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\reviewService.js":"70","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx":"71","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\data\\board.js":"72","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js":"73","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx":"74","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx":"75","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskDetails.jsx":"76","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckList.jsx":"77","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckListStatus.jsx":"78","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskTitle.jsx":"79","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\ActionList.jsx":"80","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\LabelModal.jsx":"81","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\ModalAction.jsx":"82","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\OverlayAction.jsx":"83","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MembersModal.jsx":"84","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\systemAction.js":"85","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js":"86","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\LabelTask.jsx":"87","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Login.jsx":"88","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardMembersModal.jsx":"89","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\DueDateModal.jsx":"90","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\CopyModal.jsx":"91","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MoveModal.jsx":"92","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\GroupModal.jsx":"93"},{"size":935,"mtime":1622123976226,"results":"94","hashOfConfig":"95"},{"size":5201,"mtime":1622123976238,"results":"96","hashOfConfig":"95"},{"size":377,"mtime":1622123976235,"results":"97","hashOfConfig":"95"},{"size":752,"mtime":1622123976262,"results":"98","hashOfConfig":"95"},{"size":535,"mtime":1622208637880,"results":"99","hashOfConfig":"95"},{"size":322,"mtime":1622409437820,"results":"100","hashOfConfig":"95"},{"size":868,"mtime":1622403459987,"results":"101","hashOfConfig":"95"},{"size":669,"mtime":1622123976259,"results":"102","hashOfConfig":"95"},{"size":688,"mtime":1622215508185,"results":"103","hashOfConfig":"95"},{"size":778,"mtime":1622380197857,"results":"104","hashOfConfig":"95"},{"size":2703,"mtime":1622405642721,"results":"105","hashOfConfig":"95"},{"size":3395,"mtime":1622125879313,"results":"106","hashOfConfig":"95"},{"size":2963,"mtime":1622405255457,"results":"107","hashOfConfig":"95"},{"size":732,"mtime":1622123976234,"results":"108","hashOfConfig":"95"},{"size":5612,"mtime":1622410473147,"results":"109","hashOfConfig":"95"},{"size":1179,"mtime":1622390262384,"results":"110","hashOfConfig":"95"},{"size":6712,"mtime":1622480146013,"results":"111","hashOfConfig":"95"},{"size":7000,"mtime":1622480146009,"results":"112","hashOfConfig":"95"},{"size":1321,"mtime":1622123976254,"results":"113","hashOfConfig":"95"},{"size":1907,"mtime":1622403677557,"results":"114","hashOfConfig":"95"},{"size":1989,"mtime":1622480146029,"results":"115","hashOfConfig":"95"},{"size":2489,"mtime":1622480146016,"results":"116","hashOfConfig":"95"},{"size":3308,"mtime":1622471057716,"results":"117","hashOfConfig":"95"},{"size":165,"mtime":1622319007035,"results":"118","hashOfConfig":"95"},{"size":2097,"mtime":1622480146024,"results":"119","hashOfConfig":"95"},{"size":2414,"mtime":1622480146020,"results":"120","hashOfConfig":"95"},{"size":1127,"mtime":1622123976222,"results":"121","hashOfConfig":"95"},{"size":5051,"mtime":1622479836916,"results":"122","hashOfConfig":"95"},{"size":2404,"mtime":1622319007044,"results":"123","hashOfConfig":"95"},{"size":1087,"mtime":1622123976248,"results":"124","hashOfConfig":"95"},{"size":1136,"mtime":1622123976244,"results":"125","hashOfConfig":"95"},{"size":587,"mtime":1622123976243,"results":"126","hashOfConfig":"95"},{"size":305529,"mtime":1622477193709,"results":"127","hashOfConfig":"95"},{"size":105,"mtime":1622319007035,"results":"128","hashOfConfig":"95"},{"size":6053,"mtime":1622479624218,"results":"129","hashOfConfig":"95"},{"size":248,"mtime":1622380660729,"results":"130","hashOfConfig":"95"},{"size":473,"mtime":1622407621016,"results":"131","hashOfConfig":"95"},{"size":664,"mtime":1622407022555,"results":"132","hashOfConfig":"95"},{"size":438,"mtime":1622443150607,"results":"133","hashOfConfig":"95"},{"size":935,"mtime":1622540459727,"results":"134","hashOfConfig":"135"},{"size":377,"mtime":1622540459732,"results":"136","hashOfConfig":"135"},{"size":5201,"mtime":1622540459734,"results":"137","hashOfConfig":"135"},{"size":752,"mtime":1622540459748,"results":"138","hashOfConfig":"135"},{"size":535,"mtime":1622540459615,"results":"139","hashOfConfig":"135"},{"size":426,"mtime":1622648499511,"results":"140","hashOfConfig":"135"},{"size":688,"mtime":1622540459745,"results":"141","hashOfConfig":"135"},{"size":868,"mtime":1622540459747,"results":"142","hashOfConfig":"135"},{"size":669,"mtime":1622540459746,"results":"143","hashOfConfig":"135"},{"size":634,"mtime":1622631189362,"results":"144","hashOfConfig":"135"},{"size":2829,"mtime":1622680021145,"results":"145","hashOfConfig":"135"},{"size":3007,"mtime":1622710699681,"results":"146","hashOfConfig":"135"},{"size":4720,"mtime":1622724056390,"results":"147","hashOfConfig":"135"},{"size":7653,"mtime":1622715539323,"results":"148","hashOfConfig":"135"},{"size":3395,"mtime":1622540459729,"results":"149","hashOfConfig":"135"},{"size":1405,"mtime":1622631189360,"results":"150","hashOfConfig":"135"},{"size":533,"mtime":1622640548535,"results":"151","hashOfConfig":"135"},{"size":2193,"mtime":1622659221007,"results":"152","hashOfConfig":"135"},{"size":1966,"mtime":1622640548548,"results":"153","hashOfConfig":"135"},{"size":3211,"mtime":1622659221005,"results":"154","hashOfConfig":"135"},{"size":2414,"mtime":1622540459737,"results":"155","hashOfConfig":"135"},{"size":2832,"mtime":1622724056395,"results":"156","hashOfConfig":"135"},{"size":165,"mtime":1622540459723,"results":"157","hashOfConfig":"135"},{"size":2097,"mtime":1622540459739,"results":"158","hashOfConfig":"135"},{"size":6715,"mtime":1622723845383,"results":"159","hashOfConfig":"135"},{"size":490,"mtime":1622679865721,"results":"160","hashOfConfig":"135"},{"size":1127,"mtime":1622640548530,"results":"161","hashOfConfig":"135"},{"size":2404,"mtime":1622540459735,"results":"162","hashOfConfig":"135"},{"size":1136,"mtime":1622540459737,"results":"163","hashOfConfig":"135"},{"size":3994,"mtime":1622714778494,"results":"164","hashOfConfig":"135"},{"size":1087,"mtime":1622540459738,"results":"165","hashOfConfig":"135"},{"size":117,"mtime":1622688889960,"results":"166","hashOfConfig":"135"},{"size":305529,"mtime":1622540459726,"results":"167","hashOfConfig":"135"},{"size":587,"mtime":1622631189364,"results":"168","hashOfConfig":"135"},{"size":7257,"mtime":1622710699669,"results":"169","hashOfConfig":"135"},{"size":846,"mtime":1622659220979,"results":"170","hashOfConfig":"135"},{"size":15636,"mtime":1622724430877,"results":"171","hashOfConfig":"135"},{"size":4514,"mtime":1622706232535,"results":"172","hashOfConfig":"135"},{"size":715,"mtime":1622648758274,"results":"173","hashOfConfig":"135"},{"size":0,"mtime":1622551135786,"results":"174","hashOfConfig":"135"},{"size":4348,"mtime":1622703637199,"results":"175","hashOfConfig":"135"},{"size":1575,"mtime":1622692419149,"results":"176","hashOfConfig":"135"},{"size":220,"mtime":1622695945231,"results":"177","hashOfConfig":"135"},{"size":129,"mtime":1622695949888,"results":"178","hashOfConfig":"135"},{"size":2305,"mtime":1622711586380,"results":"179","hashOfConfig":"135"},{"size":756,"mtime":1622648563913,"results":"180","hashOfConfig":"135"},{"size":1321,"mtime":1622560933611,"results":"181","hashOfConfig":"135"},{"size":3987,"mtime":1622692397901,"results":"182","hashOfConfig":"135"},{"size":4715,"mtime":1622640548545,"results":"183","hashOfConfig":"135"},{"size":2261,"mtime":1622720511916,"results":"184","hashOfConfig":"135"},{"size":1668,"mtime":1622710699676,"results":"185","hashOfConfig":"135"},{"size":2973,"mtime":1622702719418,"results":"186","hashOfConfig":"135"},{"size":3085,"mtime":1622702732865,"results":"187","hashOfConfig":"135"},{"size":1552,"mtime":1622724001131,"results":"188","hashOfConfig":"135"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},"1q8ycx9",{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"191"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"191"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"191"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"191"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"191"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},"1hkyyjl",{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"275"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"275"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"275"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"275"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"275"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"275"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"275"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"275"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"275"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"275"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"275"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"275"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"275"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"275"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"275"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"275"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\index.js",[],["397","398"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\store.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\App.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js",["399"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\routes.js",["400","401","402","403"],"import { Home } from './pages/Home'\r\nimport { LoginSignup } from './pages/LoginSignup'\r\nimport { Chat } from './pages/Chat'\r\nimport { UserDetails } from './pages/UserDetails'\r\nimport { BoardList } from './pages/BoardList'\r\nimport { Board } from './pages/Board'\r\nimport { TaskDetails } from './cmps/board/TaskDetails'\r\n\r\nexport const routes = [\r\n    /* {\r\n        path: '/board/:boardId/:groupId/:taskId',\r\n        component: TaskDetails,\r\n    }, */\r\n    {\r\n        path: '/board/:boardId',\r\n        component: Board,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: BoardList\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n]\r\n","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\Chat.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\Home.jsx",["404","405","406","407","408","409","410","411","412"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\UserDetails.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\BoardList.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\Board.jsx",["413"],"import { connect } from 'react-redux'\r\nimport { remove, add, loadBoard, update } from '../store/actions/boardsAction.js';\r\nimport { loading } from '../store/actions/systemActions';\r\n\r\nimport React, { Component } from 'react'\r\nimport { TaskList } from '../cmps/board/TaskList'\r\nimport { BoardNavbar } from '../cmps/board/boardNavbar/BoardNavbar'\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Route, Switch } from 'react-router';\r\nimport { TaskDetails } from '../cmps/board/TaskDetails.jsx';\r\nimport { boardService } from '.././services/boardService.js'\r\nimport { utilService } from '../services/generalService/utilService.js'\r\nimport { socketService } from '../services/generalService/socketService.js'\r\nimport { ModalWrapper } from '../cmps/shared/ModalWrapper.jsx';\r\n\r\nconst EMPTY_GROUP = { title: '' }\r\n\r\nclass _Board extends Component {\r\n    state = {\r\n        group: EMPTY_GROUP\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { boardId } = this.props.match.params\r\n        this.props.loadBoard(boardId);\r\n        socketService.setup()\r\n        socketService.on('board updated', ()=>{\r\n            console.log('recieved update')\r\n            this.props.loadBoard()})\r\n        socketService.emit('add member',boardId)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('board updated', this.props.loadBoard)\r\n        socketService.terminate()\r\n    }\r\n\r\n\r\n    onUpdate = (updateBoard) => {\r\n        console.log(updateBoard)\r\n        this.props.update(updateBoard)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({\r\n            group: {\r\n                ...prevState.group,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n\r\n    onAddGroup = () => {\r\n        const copyBoard = { ...this.props.board };\r\n        this.setState({ group: { ...this.state.group, id: utilService.makeId() } })\r\n        copyBoard.groups.push(utilService.formatNewGroup(this.state.group))\r\n        this.props.update(copyBoard)\r\n        this.setState({ group: EMPTY_GROUP })\r\n    }\r\n\r\n    onDragEnd = res => {\r\n        console.log()\r\n        const { destination, source, type } = res\r\n        if (!destination) return\r\n        if (destination.droppableId === source.droppableId &&\r\n            destination.index === source.index) return\r\n        const copyBoard = { ...this.props.board }\r\n        const activity = {}\r\n        if (type === 'task') {\r\n            const sourceListIdx = boardService.getGroupIdxById(copyBoard, source.droppableId)\r\n            const destinationListIdx = boardService.getGroupIdxById(copyBoard, destination.droppableId)\r\n            const task = copyBoard.groups[sourceListIdx].tasks.splice(source.index, 1)\r\n            copyBoard.groups[destinationListIdx].tasks.splice(destination.index, 0, task[0])\r\n            const sourceListName = copyBoard.groups[sourceListIdx].title\r\n            const destinationListName = copyBoard.groups[destinationListIdx].title\r\n            activity.txt = `has moved ${task[0].title} from ${sourceListName} to ${destinationListName}`\r\n        }\r\n        else {\r\n            console.log('before',copyBoard)\r\n            const list = copyBoard.groups.splice(source.index, 1)\r\n            copyBoard.groups.splice(destination.index, 0, list[0])\r\n            activity.txt = `has moved list ${list[0].title}`\r\n            console.log('after',copyBoard)\r\n        }\r\n        this.props.update(copyBoard)\r\n    }\r\n\r\n    onCloseDetails = () => {\r\n        this.props.history.push(`/board/${this.props.board._id}`)\r\n\r\n    }\r\n    render() {\r\n        const { board } = this.props;\r\n        if (!board) {\r\n            return <div className=\"loader w-100 h-100 flex center content-center\">Loading...</div>\r\n        }\r\n        // loading ui\r\n        this.props.loading();\r\n        // if(this.props.isLoading) return <h1 className=\"w-100 h-100 flex center content-center\">Loading...</h1>\r\n        if (this.props.isLoading) return <div className=\"loader w-100 h-100 flex center content-center\">Loading...</div>\r\n\r\n\r\n        return (\r\n            <section className=\"board flex column w-100 animate__animated animate__fadeInRight \">\r\n                <BoardNavbar board={board} />\r\n                <div className=\"board-list flex w-100 \">\r\n                    <DragDropContext\r\n                        onDragEnd={this.onDragEnd}\r\n                    >\r\n                        <Droppable droppableId={'all-columns'}\r\n                            direction=\"horizontal\"\r\n                            type=\"list\"\r\n                        >\r\n                            {provided => (\r\n                                <ul\r\n                                    className=\"groups clean-list flex \"\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}\r\n                                >\r\n                                    {board && board.groups.map((group, idx) => <TaskList index={idx}\r\n                                        key={group.id}\r\n                                        board={board}\r\n                                        group={group}\r\n                                        updateBoard={this.onUpdate} />)}\r\n                                    {provided.placeholder}\r\n\r\n\r\n                                </ul>\r\n                            )}\r\n\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                    <div className=\"group add-group flex\">\r\n                        <form onSubmit={(ev) => {\r\n                            ev.preventDefault()\r\n                            this.onAddGroup()\r\n                        }}>\r\n                            <input className=\"add-group\" value={this.state.group.title} type=\"text\" placeholder=\"+ Add another list\" name=\"title\" onChange={this.handleChange} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <Switch>\r\n                    <Route path={'/board/:boardId/:groupId/:taskId'} render={(props) => <ModalWrapper onClick={this.onCloseDetails}><TaskDetails {...props} /></ModalWrapper>}></Route>\r\n                </Switch>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n// {\r\n//     path: '/board/:boardId/:taskId',\r\n//     component: TaskDetails,\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        isLoading: state.systemModule.isLoading\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    remove,\r\n    add,\r\n    loadBoard,\r\n    update,\r\n    loading\r\n}\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\TaskDetails.jsx",["414","415"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js",["416","417"],"import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../../services/generalService/socketService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n      // socketService.on(SOCKET_EVENT_REVIEW_ADDED, review =>{\r\n      //   dispatch({ type: 'ADD_REVIEW', review })\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\boardService.js",["418"],"import { utilService } from './generalService/utilService.js'\r\nimport { storageService } from './generalService/asyncStorageService.js'\r\n\r\nwindow.storageService = storageService;\r\n\r\nconst STORAGE_KEY = 'board'\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    update,\r\n    add,\r\n    getGroupById,\r\n    getTaskById,\r\n    getGroupIdxById,\r\n    addTask,\r\n    checklistPreview,\r\n    getTaskIdxById\r\n}\r\n\r\n\r\nfunction query() {\r\n    return storageService.query(STORAGE_KEY)\r\n}\r\n\r\nfunction getById(boardId) {\r\n    const board = storageService.get(STORAGE_KEY, boardId);\r\n    return board\r\n}\r\n\r\nfunction remove(boardId) {\r\n    return storageService.remove(STORAGE_KEY, boardId)\r\n}\r\n\r\nfunction add() {\r\n    const newBoard = _createBoard()\r\n    const savedBoard = storageService.post(STORAGE_KEY, newBoard)\r\n    return savedBoard\r\n}\r\n\r\nfunction update(board) {\r\n    console.log('service')\r\n    return storageService.put(STORAGE_KEY, board)\r\n\r\n}\r\n\r\n//task crud\r\nfunction getGroupById(board, groupId) {\r\n    return board.groups.find(group => group.id === groupId);\r\n}\r\n\r\nfunction getGroupIdxById(board, groupId) {\r\n    return board.groups.findIndex(group => group.id === groupId);\r\n}\r\n\r\nfunction getTaskIdxById(group, taskId) {\r\n    return group.tasks.findIndex(task => task.id === taskId);\r\n}\r\n\r\nfunction getTaskById(group, taskId) {\r\n    return group.tasks.find(task => task.id === taskId)\r\n}\r\n\r\nfunction addTask(board, group, title) {\r\n    const newTask = {\r\n        id: utilService.makeId(),\r\n        title: title\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nfunction _createBoard(title = 'New Board', loggedInUser = { fullname: 'some user', _id: 'u101', imgUrl: 'http://some-img.jpg' }) {\r\n    const board = {\r\n        \"_id\": utilService.makeId(),\r\n        title,\r\n        \"createdAt\": Date.now(),\r\n        \"createdBy\": {\r\n            \"_id\": loggedInUser._id,\r\n            \"fullname\": loggedInUser.fullname,\r\n            \"imgUrl\": loggedInUser.imgUrl\r\n        },\r\n        \"style\": {},\r\n        \"labels\": [\r\n            {\r\n                \"id\": \"l101\",\r\n                \"title\": \"Done\",\r\n                \"color\": \"#61bd4f\"\r\n            },\r\n            {\r\n                \"id\": \"l101\",\r\n                \"title\": \"Todo\",\r\n                \"color\": \"green\"\r\n            }\r\n        ],\r\n        \"members\": [\r\n            {\r\n                \"_id\": loggedInUser._id,\r\n                \"fullname\": loggedInUser.fullname,\r\n                \"imgUrl\": loggedInUser.imgUrl\r\n            }\r\n        ],\r\n        \"groups\": [\r\n            {\r\n                \"id\": utilService.makeId(),\r\n                \"title\": \"Group 1\",\r\n                \"tasks\": [\r\n                    {\r\n                        \"id\": \"c101\",\r\n                        \"title\": \"Replace logo\"\r\n                    },\r\n                    {\r\n                        \"id\": \"c102\",\r\n                        \"title\": \"Add Samples\"\r\n                    }\r\n                ],\r\n                \"checklists\": [],\r\n                \"style\": {}\r\n            },\r\n        ],\r\n        \"activities\": []\r\n    }\r\n\r\n    return board;\r\n}\r\n\r\nfunction checklistPreview(task){\r\n    const checklists = task.checklists\r\n    let allTodos = 0;\r\n    let doneTodos = 0;\r\n    checklists.forEach(checkList => {\r\n        allTodos += checkList.todos.length;\r\n        checkList.todos.forEach(todo => {\r\n            if(todo.isDone) doneTodos++\r\n        })\r\n    });\r\n\r\n    const str = `${doneTodos}/${allTodos}`\r\n    return str\r\n} ","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\utilService.js",["419"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\userService.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\socketService.js",["420","421"],"import io from 'socket.io-client'\r\nimport {httpService} from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\nfunction cb(x) {console.log(x)}\r\nsocketService.on('baba', cb)\r\nsocketService.on('mama', cb)\r\nsocketService.on('lala', cb)\r\nsocketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\Upload.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx",["422","423"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\reviewService.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\httpService.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\data\\board.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx",["424","425","426","427","428","429","430","431"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\systemActions.js",["432"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\index.js",[],["433","434"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\store.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\App.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js",["435"],"let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\nconst defUser = {\r\n  \"_id\": \"u101\",\r\n  \"fullname\": \"Abi Abambi\",\r\n  \"username\": \"abi@ababmi.com\",\r\n  \"password\": \"aBambi123\",\r\n  \"imgUrl\": \"http://some-img.jpg\",\r\n  \"mentions\": [{\r\n    \"id\": \"m101\",\r\n    \"boardId\": \"m101\",\r\n    \"taskId\": \"t101\"\r\n  }]\r\n}\r\nconst initialState = {\r\n  loggedInUser: defUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\routes.js",["436"],"import { Home } from './pages/Home'\r\nimport { Chat } from './pages/Chat'\r\nimport { UserDetails } from './pages/UserDetails'\r\nimport { BoardList } from './pages/BoardList'\r\nimport { Board } from './pages/Board'\r\nimport { Login } from './pages/Login'\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/user/:userId',\r\n        component: UserDetails,\r\n    },\r\n    {\r\n        path: '/board/:boardId',\r\n        component: Board,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: BoardList\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n]\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Home.jsx",["437","438","439","440","441","442","443","444","445"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MainImg from '../assets/img/home/main-img.svg'\r\nimport TeamworkImg from '../assets/img/home/teamwork.svg'\r\nimport TimeImg from '../assets/img/home/time.svg'\r\nimport OrganizeImg from '../assets/img/home/organize.svg'\r\nimport { loadReviews, addReview, removeReview } from '../store/actions/reviewActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Home extends Component {\r\n  state = {\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      reviewToEdit: {\r\n        ...prevState.reviewToEdit,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home-page flex column fam-1 \">\r\n        <div className=\"flex row-reverse mt-5 space-evenly \">\r\n          <div className=\"align-center flex column \">\r\n              <div className=\"c-stand  marg-2 ps-2 font-xl\"><span className=\"logo-span\">T</span>askman</div>\r\n              <h1 className=\"fam-1 fs30 bold \">Task management</h1>\r\n              <h2 className=\"fam-1 fs30 bold\">The <span className=\"main-color\">easiest</span> way. </h2>\r\n              <Link to=\"/board/60b3d35bf2ba7731f23403a5\"><button class=\"btn-hover color-3\">Try it now!</button></Link>\r\n          </div>\r\n          <img className=\"main-img w-50\" src={MainImg}/>\r\n        </div>\r\n        <div className=\"features flex row space-between\">\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1 bold\">All the tools your team needs</h3>\r\n            <span>Organize and assign tasks.</span>\r\n            <span>With lists, teams see immediately what they need to do,</span>\r\n            <span>which tasks are a priority, and when work is due.</span>\r\n            </div>\r\n          <img className=\"feature-img w-30\" src={TeamworkImg}/>\r\n          </div>\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1 bold\">Manage your time wisely</h3>\r\n            <span>Instantly see which projects are on track,</span>\r\n            <span>which ones are falling behind,</span>\r\n            <span>and what every team member is working on at a glance.</span>\r\n            </div>\r\n          <img className=\"feature-img w-25\" src={TimeImg}/>\r\n          </div>\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1 bold\">Organize anything with anyone, anywhere</h3>\r\n            <span>Choose the project view that suits your style,</span>\r\n            <span> and collaborate no matter where you are.</span>\r\n            </div>\r\n          <img className=\"feature-img \" src={OrganizeImg}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\BoardList.jsx",["446","447","448","449","450","451","452","453","454"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Board.jsx",["455","456"],"import { connect } from 'react-redux'\r\nimport { remove, add, loadBoard, update, setBoard } from '../store/actions/boardsAction.js';\r\nimport { loading } from '../store/actions/systemAction';\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport React, { Component } from 'react'\r\nimport { TaskList } from '../cmps/board/TaskList'\r\nimport { BoardNavbar } from '../cmps/board/boardNavbar/BoardNavbar'\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Route, Switch } from 'react-router';\r\nimport { TaskDetails } from '../cmps/board/taskDetails/TaskDetails';\r\nimport { boardService } from '.././services/boardService.js'\r\nimport { utilService } from '../services/generalService/utilService.js'\r\nimport { socketService } from '../services/generalService/socketService.js'\r\nimport { ModalWrapper } from '../cmps/shared/ModalWrapper.jsx';\r\n\r\nconst EMPTY_GROUP = { title: '' }\r\n\r\nclass _Board extends Component {\r\n    state = {\r\n        group: EMPTY_GROUP,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { boardId } = this.props.match.params\r\n        this.props.loadBoard(boardId);\r\n        this.props.loadUsers();\r\n        socketService.setup()\r\n        socketService.on('updated board', (board) => {\r\n            if (boardId !== board._id) return\r\n            this.props.setBoard(board)\r\n        })\r\n        socketService.emit('add member', boardId)\r\n        this.removeClassName();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('updated board', this.props.setBoard)\r\n        socketService.terminate()\r\n    }\r\n\r\n\r\n    onUpdate = (updateBoard) => {\r\n        console.log(updateBoard)\r\n        this.props.update(updateBoard)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({\r\n            group: {\r\n                ...prevState.group,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    removeClassName() {\r\n        if (document.querySelector('.board')) {\r\n            document.querySelector('.board').classList.remove('max-screen');\r\n        }\r\n    };\r\n\r\n    onAddGroup = () => {\r\n        const copyBoard = { ...this.props.board };\r\n        this.setState({ group: { ...this.state.group, id: utilService.makeId() } })\r\n        copyBoard.groups.push(utilService.formatNewGroup(this.state.group))\r\n        this.props.update(copyBoard)\r\n        this.setState({ group: EMPTY_GROUP })\r\n    }\r\n\r\n    onDragEnd = res => {\r\n        const { destination, source, type } = res\r\n        if (!destination) return\r\n        if (destination.droppableId === source.droppableId &&\r\n            destination.index === source.index) return\r\n        const copyBoard = JSON.parse(JSON.stringify(this.props.board))\r\n        const activity = {}\r\n        if (type === 'task') {\r\n            const sourceListIdx = boardService.getGroupIdxById(copyBoard, source.droppableId)\r\n            const destinationListIdx = boardService.getGroupIdxById(copyBoard, destination.droppableId)\r\n            const task = copyBoard.groups[sourceListIdx].tasks.splice(source.index, 1)\r\n            copyBoard.groups[destinationListIdx].tasks.splice(destination.index, 0, task[0])\r\n            const sourceListName = copyBoard.groups[sourceListIdx].title\r\n            const destinationListName = copyBoard.groups[destinationListIdx].title\r\n            activity.txt = `has moved ${task[0].title} from ${sourceListName} to ${destinationListName}`\r\n            console.log(activity.txt)\r\n        }\r\n        else {\r\n            const list = copyBoard.groups.splice(source.index, 1)\r\n            copyBoard.groups.splice(destination.index, 0, list[0])\r\n            activity.txt = `has moved list ${list[0].title}`\r\n        }\r\n        this.props.update(copyBoard)\r\n        console.log('Moved and updated!', copyBoard)\r\n    }\r\n\r\n    onCloseDetails = () => {\r\n        this.props.history.push(`/board/${this.props.board._id}`)\r\n\r\n    }\r\n    render() {\r\n        const { board } = this.props;\r\n        if (!board) {\r\n            return <div className=\"loader w-100 h-100 flex center content-center\">Loading...</div>\r\n        }\r\n        // loading ui\r\n        // this.props.loading();\r\n        // if(this.props.isLoading) return <h1 className=\"w-100 h-100 flex center content-center\">Loading...</h1>\r\n        if (this.props.isLoading) return <div className=\"loader w-100 h-100 flex center content-center\">Loading...</div>\r\n\r\n\r\n        return (\r\n            <DragDropContext\r\n                onDragEnd={this.onDragEnd}\r\n            >\r\n                <section style={{ backgroundImage: board.style ? \"url(\" + board.style + \")\" : 'https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2286x1600/24baa6609b89fb8eb0cc0aceb70eaf36/photo-1557682250-33bd709cbe85.jpg' }} className=\"board flex column w-100 animate__animated animate__fadeInRight \">\r\n                    <BoardNavbar users={this.props.users} board={board} updateBoard={this.onUpdate} />\r\n\r\n                    <div className=\"board-list flex w-100 \"\r\n\r\n                    >\r\n                        <Droppable droppableId={board._id}\r\n                            direction=\"horizontal\"\r\n                            type=\"group\"\r\n                        >\r\n                            {provided => (\r\n                                <ul\r\n                                    className=\"groups clean-list flex \"\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}\r\n                                >\r\n                                    {board && board.groups.map((group, idx) =>\r\n                                        <TaskList\r\n                                            index={idx}\r\n                                            key={group.id}\r\n                                            board={board}\r\n                                            group={group}\r\n                                            updateBoard={this.onUpdate} \r\n                                        />)}\r\n                                    {provided.placeholder}\r\n                                </ul>\r\n\r\n                            )}\r\n                        </Droppable>\r\n                        <div className=\"group add-group flex\">\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.onAddGroup()\r\n                            }}>\r\n                                <input className=\"add-group\" value={this.state.group.title} type=\"text\" placeholder=\"+ Add another list\" name=\"title\" onChange={this.handleChange} />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Switch>\r\n                        <Route\r\n                            path={'/board/:boardId/:groupId/:taskId'}\r\n                            render={(props) => <ModalWrapper onClick={this.onCloseDetails}>\r\n                                <TaskDetails {...props} />\r\n                            </ModalWrapper>}>\r\n                        </Route>\r\n                    </Switch>\r\n                </section>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        isLoading: state.systemModule.isLoading,\r\n        users: state.userModule.users\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    remove,\r\n    add,\r\n    loadBoard,\r\n    update,\r\n    loadUsers,\r\n    setBoard\r\n    // loading\r\n}\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Chat.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\UserDetails.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\boardService.js",["457","458"],"import { utilService } from './generalService/utilService.js'\r\nimport { storageService } from './generalService/asyncStorageService.js'\r\nimport {httpService} from '../services/generalService/httpService.js'\r\n\r\nwindow.storageService = storageService;\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    update,\r\n    add,\r\n    getGroupById,\r\n    getTaskById,\r\n    getGroupIdxById,\r\n    checklistPreview,\r\n    getTaskIdxById,\r\n    checklistPrecent,\r\n    updateTaskAtBoard\r\n}\r\n\r\n\r\nfunction query() {\r\n    // return storageService.query(STORAGE_KEY)\r\n    return httpService.get('board')\r\n}\r\n\r\nfunction getById(boardId) {\r\n    // const board = storageService.get(STORAGE_KEY, boardId);\r\n    // return board\r\n    return httpService.get(`board/${boardId}`)\r\n\r\n}\r\n\r\nfunction remove(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function add() {\r\n    // const newBoard = _createBoard()\r\n    // const savedBoard = storageService.post(STORAGE_KEY, newBoard)\r\n    // return savedBoard\r\n    const board = {title: 'new' ,style:{}}\r\n    const res = await httpService.post(`board`, board)\r\n    return res\r\n}\r\n\r\nasync function update(board) {\r\n    // return storageService.put(STORAGE_KEY, board)\r\n    board.activities = []\r\n    \r\n    const res = await httpService.put(`board/${board._id}`, board)\r\n    return res\r\n\r\n}\r\n\r\n//task crud\r\nfunction getGroupById(board, groupId) {\r\n    return board.groups.find(group => group.id === groupId);\r\n}\r\n\r\nfunction getGroupIdxById(board, groupId) {\r\n    return board.groups.findIndex(group => group.id === groupId);\r\n}\r\n\r\nfunction getTaskIdxById(group, taskId) {\r\n    return group.tasks.findIndex(task => task.id === taskId);\r\n}\r\n\r\nfunction getTaskById(group, taskId) {\r\n    return group.tasks.find(task => task.id === taskId)\r\n}\r\n\r\nfunction checklistPreview(task) {\r\n    const checklists = task.checklists\r\n    let isDone = false\r\n    let allTodos = 0;\r\n    let doneTodos = 0;\r\n    checklists.forEach(checkList => {\r\n        allTodos += checkList.todos.length;\r\n        checkList.todos.forEach(todo => {\r\n            if (todo.isDone) doneTodos++\r\n        })\r\n    });\r\n    if (doneTodos === allTodos && allTodos) isDone = true;\r\n    const str = `${doneTodos}/${allTodos}`\r\n    const res = { str, isDone}\r\n    return res\r\n}\r\n\r\nfunction checklistPrecent(checklist){\r\n    let doneTodos = 0;\r\n    checklist.todos.forEach(todo => {\r\n        if(todo.isDone) doneTodos++\r\n    })\r\n    const precent = (doneTodos / checklist.todos.length) * 100 \r\n    \r\n    return precent\r\n}\r\n\r\nfunction _updateTaskAtGroup(group, updateTask){\r\n    const idx = group.tasks.findIndex( task => {\r\n        task.id = updateTask.id;\r\n    })\r\n    group.tasks.splice(idx, 1, updateTask);\r\n    return group;\r\n}\r\n\r\nfunction _updateGroupAtBoard( board ,updateGroup){\r\n    const idx = getGroupIdxById(board, updateGroup.id)\r\n    board.groups[idx] = updateGroup;\r\n    return board;\r\n}\r\n\r\nfunction updateTaskAtBoard(board,group, updateTask){\r\n    const updateGroup =  _updateTaskAtGroup(group, updateTask);\r\n    const updateBoard = _updateGroupAtBoard(board, updateGroup);\r\n    return updateBoard;\r\n}","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\socketService.js",["459"],"import io from 'socket.io-client'\r\nimport {httpService} from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\nfunction cb(x) {console.log(x)}\r\nsocketService.on('baba', cb)\r\nsocketService.on('mama', cb)\r\nsocketService.on('lala', cb)\r\nsocketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\utilService.js",["460","461","462"],"\r\nexport const utilService = {\r\n    delay,\r\n    getRandomInt,\r\n    formatNewTask,\r\n    makeId,\r\n    isFalse,\r\n    formatNewGroup,\r\n    getFormattedDate,\r\n    timeAgo\r\n  }\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction isFalse(el) {\r\n    return Array.isArray(el) ? !!el.length : !!el\r\n}\r\n\r\nfunction formatNewTask(task) {\r\n    return { id: makeId(), description: '', comments: [], checklists: [], members: [], ...task }\r\n}\r\n\r\nfunction formatNewGroup(group) {\r\n    return { id: makeId(), style: {}, tasks: [], ...group }\r\n}\r\n\r\nconst MONTH_NAMES = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n  \r\n  \r\n  function getFormattedDate(date, prefomattedDate = false, hideYear = false) {\r\n    const newDate = new Date(date)\r\n    const month = MONTH_NAMES[newDate.getMonth()];\r\n    const day = newDate.getDay();\r\n    return `${ month.slice(0,3) } ${ day }`;\r\n  }\r\n  \r\n  \r\n  // --- Main function\r\n  function timeAgo(dateParam) {\r\n    if (!dateParam) {\r\n      return null;\r\n    }\r\n  \r\n    const date = typeof dateParam === 'object' ? dateParam : new Date(dateParam);\r\n    const DAY_IN_MS = 86400000; // 24 * 60 * 60 * 1000\r\n    const today = new Date();\r\n    const yesterday = new Date(today - DAY_IN_MS);\r\n    const seconds = Math.round((today - date) / 1000);\r\n    const minutes = Math.round(seconds / 60);\r\n    const isToday = today.toDateString() === date.toDateString();\r\n    const isYesterday = yesterday.toDateString() === date.toDateString();\r\n    const isThisYear = today.getFullYear() === date.getFullYear();\r\n  \r\n  \r\n    if (seconds < 5) {\r\n      return 'now';\r\n    } else if (seconds < 60) {\r\n      return `${ seconds } seconds ago`;\r\n    } else if (seconds < 90) {\r\n      return 'about a minute ago';\r\n    } else if (minutes < 60) {\r\n      return `${ minutes } minutes ago`;\r\n    } else if (isToday) {\r\n      return getFormattedDate(date, 'Today'); // Today at 10:20\r\n    } else if (isYesterday) {\r\n      return getFormattedDate(date, 'Yesterday'); // Yesterday at 10:20\r\n    } else if (isThisYear) {\r\n      return getFormattedDate(date, false, true); // 10. January at 10:20\r\n    }\r\n  \r\n    \r\n    return getFormattedDate(date); // 10. January 2017. at 10:20\r\n  }\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\userService.js",["463"],"// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './generalService/httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx",["464","465"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\Upload.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\httpService.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardNavbar.jsx",["466"],"import { MembersBoard } from '../MembersBoard';\r\nimport { MdKeyboardArrowDown } from 'react-icons/md'\r\nimport { RiDashboardLine } from 'react-icons/ri'\r\nimport { AiOutlineStar } from 'react-icons/ai'\r\nimport { Component } from 'react';\r\nimport { BoardMembersModal } from './BoardMembersModal'\r\n\r\n\r\n\r\nexport class BoardNavbar extends Component {\r\n    state = {\r\n        title: this.props.board.title,\r\n        members: this.props.board.members\r\n    }\r\n\r\n\r\n    onAddMemberToBoard = (addedMember) => {\r\n        const { members } = this.state\r\n        const memberIdx = members.findIndex(member => member._id === addedMember._id)\r\n        if (memberIdx !== -1) {\r\n            members.splice(memberIdx, 1)\r\n        }\r\n        else members.push(addedMember)\r\n        const copyBoard = { ...this.props.board }\r\n        copyBoard.members = members\r\n        console.log(members)\r\n        this.props.updateBoard(copyBoard)\r\n    }\r\n\r\n    isMemberChecked = (memberCheck) => {\r\n        const memberIdx = this.state.members.findIndex(member => member._id === memberCheck._id)\r\n        if (memberIdx !== -1) {\r\n            return 'checked'\r\n        }\r\n        else return ''\r\n    }\r\n\r\n    toggleModal = (className) => {\r\n        const modals = document.querySelectorAll('.action-modal');\r\n        const currModal = document.querySelector(`.${className}`);\r\n        if (modals) {\r\n            modals.forEach(\r\n                el => el.classList.add('d-none'));\r\n        }\r\n        if (currModal) {\r\n            currModal.classList.remove('d-none');\r\n        }\r\n    }\r\n    onChangeBoardName = () => {\r\n        const board = this.props.board\r\n        board.title = this.state.title\r\n        this.props.updateBoard(board)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState({ [field]: value })\r\n    }\r\n    render() {\r\n        const { board, onUpdate } = this.props\r\n        if (!board) return <div>Loading...</div>\r\n        return (\r\n            <nav className=\"board-navbar flex space-between font-1 c-white fam-1 mb-03\">\r\n                <ul className=\"left-bar flex center space-evenly \">\r\n                    <li className=\"btn-board\"><RiDashboardLine />Board<MdKeyboardArrowDown /></li>\r\n                    <li className=\"btn-board \"><AiOutlineStar /></li>\r\n                    <li className=\"btn-board bold\"><form onSubmit={(ev) => {\r\n                        ev.preventDefault()\r\n                        this.onChangeBoardName(ev)\r\n                    }}>\r\n                        <input type=\"text\"\r\n                            className=\"app-input nav-board-input bold font-m lh-20 c-white\"\r\n                            name=\"title\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.title}\r\n                            onBlur={this.onChangeBoardName}\r\n                            maxLength = {13}\r\n                        />\r\n                    </form></li>\r\n                    <li className=\"btn-board\">Visiblity</li>\r\n                    <ul className=\"members-wrap\">\r\n                        <li\r\n                            className=\"btn-board \"\r\n                            onClick={() => { this.toggleModal('board-members-wrap-modal') }}>\r\n                            Invite\r\n                        </li>\r\n                        <BoardMembersModal\r\n                            users={this.props.users}\r\n                            isMemberChecked={this.isMemberChecked}\r\n                            onAddMemberToBoard={this.onAddMemberToBoard}\r\n                            toggleModal={() => { this.toggleModal() }}\r\n                        />\r\n                    </ul>\r\n                    <li className=\"btn-board\" ><MembersBoard /></li>\r\n                </ul>\r\n                <ul className=\"right-bar flex center\">\r\n                    <li className=\"btn-board\">Show-menu</li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\reviewService.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\data\\board.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx",["467","468","469","470","471","472","473"],"import { Link } from 'react-router-dom'\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Provider } from 'react-redux';\r\nimport { boardService } from '../../services/boardService.js'\r\nimport { BsCheckBox } from 'react-icons/bs'\r\nimport { FaRegCommentDots } from 'react-icons/fa'\r\nimport { AiOutlineClockCircle, AiOutlineClose } from 'react-icons/ai'\r\nimport { GrTextAlignFull } from 'react-icons/gr'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/generalService/utilService'\r\nimport React, { Component } from 'react'\r\nimport { UserPreview } from './UserPreview.jsx';\r\n\r\nimport { toggleLabel } from '../../store/actions/systemAction.js';\r\n\r\n\r\n\r\n// export function TaskPreview({ board, index, task, updateBoard, groupId }) {\r\nclass _TaskPreview extends Component {\r\n\r\n    getStyle = (style, snapshot) => {\r\n        if (!snapshot.isDropAnimating) {\r\n            return style;\r\n        }\r\n        const { moveTo, curve, duration } = snapshot.dropAnimation;\r\n        // move to the right spot\r\n        const translate = `translate(${moveTo.x}px, ${moveTo.y}px)`;\r\n        // add a bit of turn for fun\r\n        const rotate = 'rotate(0.01turn)';\r\n\r\n        // patching the existing style\r\n        return {\r\n            ...style,\r\n            background: '#fff',\r\n            transform: `${translate} ${rotate}`,\r\n            // slowing down the drop because we can\r\n            transition: `all ${curve} 0.2s`,\r\n        };\r\n    }\r\n\r\n    onRemoveTask = (taskId) => {\r\n        const { board, index, task, updateBoard, groupId } = this.props\r\n        const group = board.groups[boardService.getGroupIdxById(board, groupId)]\r\n        board.groups[boardService.getGroupIdxById(board, groupId)].tasks.splice(boardService.getTaskIdxById(group, taskId), 1)\r\n        updateBoard({ ...board })\r\n    }\r\n\r\n    dueDateDonePreview = (task) => {\r\n        if(task.isDone) return 'done-preview'\r\n        else return ''\r\n     }\r\n    render() {\r\n        const { board, index, task, updateBoard, groupId } = this.props\r\n        const isLabelOpen = this.props.isLabelOpen;\r\n        return <Draggable\r\n            draggableId={task.id}\r\n            index={index}\r\n        // isDragDisabled={false}\r\n        >\r\n            {(provided, snapshot) => {\r\n                return (\r\n                    <div\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                        isdragging={snapshot.isDragging && !snapshot.isDropAnimating ? 'true' : 'false'}\r\n                        style={this.getStyle(provided.draggableProps.style, snapshot)}\r\n                    >\r\n                        <div className=\"wrap-list-task br-3\">\r\n                            <div className=\"wrap-task-prev\">\r\n                                <div className=\"task-preview flex column\">\r\n                                    {/* <Link to={`/board/${board._id}/${task.id}`}> */}\r\n                                    <span className=\"cur-pointer fam-1 font-s bold flex d-none \" onClick={() => { this.onRemoveTask(task.id) }}><AiOutlineClose /></span>\r\n                                    {utilService.isFalse(task.labelIds) &&\r\n                                                <div className=\"labels-container flex  wrap\" onClick={(ev) => {\r\n                                                    ev.stopPropagation();\r\n                                                }}>\r\n                                                    {\r\n                                                        task.labelIds.map(labelId => {\r\n                                                            const label = board.labels.find(label => {\r\n                                                                return label.id === labelId;\r\n                                                            })\r\n\r\n                                                            if (label) {\r\n                                                                return <div\r\n                                                                    key={label.id}\r\n                                                                    className={`preview-label flex  ${isLabelOpen && \"label-open\"}`}\r\n                                                                    onClick={() => this.props.toggleLabel(!isLabelOpen)}\r\n                                                                    style={{ backgroundColor: label.color }}\r\n                                                                >\r\n                                                                    {this.props.isLabelOpen && label.title}\r\n                                                                </div>\r\n                                                            }\r\n                                                        })}\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <Link to={`/board/${board._id}/${groupId}/${task.id}`}>\r\n\r\n\r\n                                        <h1 className=\"task-title fam-1 font-m\">{task.title}</h1>\r\n                                        <div className=\"task-mini-details flex w-100 content-start  gap-xs fam-1 c-stand\">\r\n                                            {/* {utilService.isFalse(task.members) && <small className=\"flex center\">{task.members.map(member => { return <UserPreview key={member._id} user={member} /> }).splice(0, 3)}</small>} */}\r\n                                            {utilService.isFalse(task.comments) && <small className=\"flex center\"><FaRegCommentDots /></small>}\r\n                                            {utilService.isFalse(task.checklists) && <div className={`flex row center ${boardService.checklistPreview(task).isDone && \"done-preview\"}`}>\r\n                                                <BsCheckBox />\r\n                                                <small>{boardService.checklistPreview(task).str}</small>\r\n                                            </div>}\r\n                                            {task.dueDate && <div className={`flex row center ${this.dueDateDonePreview(task)}`}>\r\n                                                <AiOutlineClockCircle />\r\n                                                <small>\r\n                                                    { utilService.getFormattedDate(task.dueDate) }\r\n                                                </small>\r\n                                            </div>}\r\n                                            {task.description && <small className=\"flex center\"><GrTextAlignFull /></small>}\r\n                                        </div>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            }\r\n        </Draggable>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        isLabelOpen : state.systemModule.isLabelsOpen\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    toggleLabel\r\n}\r\nexport const TaskPreview = connect(mapStateToProps, mapDispatchToProps)(_TaskPreview)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskDetails.jsx",["474","475","476","477"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckList.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckListStatus.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskTitle.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\ActionList.jsx",["478","479"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { MdLabelOutline } from 'react-icons/md'\r\nimport { AiOutlineClockCircle, AiOutlineCheckSquare, AiOutlineDelete } from 'react-icons/ai'\r\nimport { BiCopy } from 'react-icons/bi'\r\nimport { FiUsers } from 'react-icons/fi'\r\nimport { BsImage, BsArrowRight } from 'react-icons/bs'\r\nimport { LabelModal } from './actionModal/LabelModal';\r\nimport { MembersModal } from './actionModal/MembersModal'\r\nimport { DueDateModal } from './actionModal/DueDateModal'\r\nimport { MoveMdodal } from './actionModal/MoveModal'\r\nimport { CopyModal } from './actionModal/CopyModal'\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\n\r\nclass _ActionList extends Component {\r\n    state = {\r\n        task: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState({\r\n            task: this.props.task\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n    }\r\n\r\n    closeDetails = () =>{\r\n        const boardId = this.props.match.params.boradId;\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n    render() {\r\n        const { task } = this.state\r\n        if (!task) return <h1>Loading...</h1>\r\n        return (\r\n            <div className=\"menu-task flex column w-40 content-start right\">\r\n                <div className=\"close-details fam-2 font-1 bold pad-1 cur-pointer\" onClick={() => this.closeDetails()}>X</div>\r\n                <div className=\"details-action flex column center pad-1 w-80\">\r\n                    <label htmlFor=\"actions\" className=\"font-m pb-3\">ACTIONS</label>\r\n                    <ul className=\"action-menu flex column w-100 clean-list font-m pad-0 fw-2\">\r\n\r\n                        <li className=\"label-wrap\" onClick={() => this.props.openOverlay('label-wrap-modal')}>\r\n                            <div className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('label-wrap-modal') }}><MdLabelOutline />Labels</div>\r\n                            <LabelModal toggleModal={() => { this.props.toggleModal() }} />\r\n                        </li>\r\n\r\n                        <ul className=\"members-wrap\">\r\n                            <li className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('members-wrap-modal') }}><FiUsers />Members</li>\r\n                            <MembersModal isMemberChecked={this.props.isMemberChecked} onAddMemberToTask={this.props.onAddMemberToTask} toggleModal={() => { this.props.toggleModal() }} />\r\n                        </ul>\r\n\r\n                        <li className=\"duedate-wrap\">\r\n                            <div className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('duedate-wrap-modal') }}><AiOutlineClockCircle />DueDate</div>\r\n                            <DueDateModal onSaveDueDate={this.props.onSaveDueDate} toggleModal={() => { this.props.toggleModal() }} />\r\n                        </li>\r\n\r\n                        <li onClick={() => { this.props.onAddCheckList(task) }} className=\"btn-action\"><AiOutlineCheckSquare />Checklist</li>\r\n                        <li className=\"btn-action\"><BsImage />Image</li>\r\n                        <li className=\"move-wrap\">\r\n                            <div className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('move-wrap-modal') }}><BsArrowRight />Move</div>\r\n                            <MoveMdodal group={this.props.group} task={task} toggleModal={() => { this.props.toggleModal() }} />\r\n                        </li>\r\n                        <li className=\"copy-wrap\">\r\n                            <div className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('copy-wrap-modal') }}><BiCopy />Copy</div>\r\n                            <CopyModal group={this.props.group} task={task} toggleModal={() => { this.props.toggleModal() }} />\r\n                        </li>\r\n                        <li onClick={() => { this.props.onDeleteTask() }} className=\"btn-action btn-delete\"><AiOutlineDelete />Delete</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const ActionList = connect(mapStateToProps, mapDispatchToProps)(withRouter(_ActionList));\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\LabelModal.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\ModalAction.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\OverlayAction.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MembersModal.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\systemAction.js",["480"],"import { utilService } from '../../services/generalService/utilService';\r\n\r\nexport function loading() { // Action Creator\r\n    return async dispatch => {\r\n        try {\r\n            dispatch('LOADING_DONE');\r\n            dispatch('LOADING_START');\r\n            setTimeout(() => {\r\n                dispatch('LOADING_DONE');\r\n            }, 1500);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function toggleLabel(toggleValue) {\r\n    return async dispatch => {\r\n        try {\r\n            const action = {\r\n                type: 'TOGGLE_LABEL',\r\n                value: toggleValue\r\n            }\r\n            dispatch(action)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js",["481","482"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\LabelTask.jsx",["483","484","485"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { FiEdit2 } from 'react-icons/fi'\r\nimport { withRouter } from \"react-router\";\r\nimport { update } from '../../../../store/actions/boardsAction';\r\nimport { boardService } from '../../../../services/boardService';\r\n\r\nclass _LabelTask extends Component {\r\n    state = {\r\n        isDisable: true,\r\n        title: this.props.label.title ? this.props.label.title:'',\r\n        task: null,\r\n        group: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { taskId, groupId } = this.props.match.params;\r\n        const board = this.props.board;\r\n        const group = boardService.getGroupById(board, groupId);\r\n        const task = boardService.getTaskById(group, taskId);\r\n        this.setState({ ...this.state, task: task, group: group });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props !== prevProps) {\r\n            const { boardId, taskId, groupId } = this.props.match.params;\r\n            const board = { ...this.props.board };\r\n            const group = boardService.getGroupById(board, groupId);\r\n            const task = boardService.getTaskById(group, taskId);\r\n            this.setState({ ...this.state, task: task, group: group });\r\n        }\r\n\r\n    }\r\n\r\n    toggleLabel(labelId) {\r\n        const { task, group } = this.state;\r\n        const board = { ...this.props.board };\r\n        if (!task.labelIds) {\r\n            task.labelIds = []\r\n        }\r\n        const labelIdx = task.labelIds.findIndex(currLabelId => currLabelId === labelId);\r\n        if (labelIdx > -1) {\r\n            task.labelIds.splice(labelIdx, 1)\r\n        } else task.labelIds.push(labelId)\r\n        const updateBoard = boardService.updateTaskAtBoard(board, group, task);\r\n        this.props.update(updateBoard)\r\n    }\r\n\r\n    toggleDisable() {\r\n        console.log(this.state.isDisable);\r\n        this.setState({\r\n            isDisable: !this.state.isDisable\r\n        })\r\n    }\r\n\r\n    borderLabel = (task, labelId) => {\r\n        if (task.labelIds) {\r\n            if (task.labelIds.includes(labelId))\r\n                return 'border';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const value = target.value;\r\n        this.setState({...this.state,\r\n            title: value\r\n        });\r\n        const label = this.props.label;\r\n        label.title = this.state.title;\r\n        this.updateLabelBoard(label);\r\n    }\r\n\r\n    updateLabelBoard = () => {\r\n        const { board, label } = this.props;\r\n        const idx = board.labels.findIndex(currLabel => currLabel.id === label.id);\r\n        board.labels.splice(idx,1, label);\r\n        this.props.update(board);\r\n    };\r\n\r\n    render() {\r\n        const { label } = this.props;\r\n        const { task } = this.state;\r\n        let className;\r\n        if (task) {\r\n            className = this.borderLabel(task, label.id);\r\n        }\r\n\r\n        return (\r\n            <div className=\"label flex gap-2\" data-label={label.id}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={this.state.title}\r\n                    style={{ background: `${label.color}` }}\r\n                    className={`label-input label-${label.id} ${this.state.isDisable} ${className} cur-pointer`}\r\n                    onChange={this.handleChange}\r\n                    onClick={() => this.toggleLabel(label.id)}\r\n                    maxLength = {13}\r\n                />\r\n                <span onClick={() => { this.toggleDisable() }} className=\"edit-label\"><FiEdit2 /> </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const LabelTask = connect(mapStateToProps, mapDispatchToProps)(withRouter(_LabelTask))","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Login.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardMembersModal.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\DueDateModal.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\CopyModal.jsx",["486","487"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { LabelTask } from '../LabelTask'\r\nimport { update } from '../../../../../store/actions/boardsAction';\r\nimport { boardService } from '../../../../../services/boardService'\r\nimport { utilService } from '../../../../../services/generalService/utilService';\r\n\r\n\r\nclass _CopyModal extends Component {\r\n    state = {\r\n        copyTo: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    copyTask = () => {\r\n        if (this.state.copyTo !== this.props.group.id) {\r\n            const copyBoard = { ...this.props.board }\r\n            const task = { ...this.props.task }\r\n            task.id = utilService.makeId()\r\n            copyBoard.groups[this.state.copyTo].tasks.push(task)\r\n            this.props.update(copyBoard)\r\n        }\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log(target.value)\r\n        this.setState({ copyTo: target.value })\r\n    }\r\n    render() {\r\n        return <div className=\"action-modal copy-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"copy-modal p-abs flex column pad-1\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center space-between gap-5 w-100 mb-1\">\r\n                        <h1 className=\"fam-1 font-1\">Copy</h1>\r\n                        <span className=\"cur-pointer fam-1 font-1 bold\" onClick={() => { this.props.toggleModal('duedate-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content\">\r\n                        <form onSubmit={(ev) => {\r\n                            this.copyTask()\r\n                            ev.preventDefault()\r\n                        }}>\r\n                            <select onChange={this.handleChange}>\r\n                                {this.props.board.groups.map((group) => {\r\n                                    return group.id === this.props.group.id && <option key={group.id} value={group.id}>{group.title}</option>\r\n                                })}\r\n                                {this.props.board.groups.map((group, idx) => {\r\n                                    return group.id !== this.props.group.id && <option value={idx} key={group.id}>{group.title}</option>\r\n                                })}\r\n                            </select>\r\n                            <button className=\"btn-copy-move\">Copy</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const CopyModal = connect(mapStateToProps, mapDispatchToProps)(_CopyModal)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MoveModal.jsx",["488"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { LabelTask } from '../LabelTask'\r\nimport { update } from '../../../../../store/actions/boardsAction';\r\nimport { boardService } from '../../../../../services/boardService'\r\n\r\n\r\nclass _MoveMdodal extends Component {\r\n    state = {\r\n        moveTo: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    moveTask = () => {\r\n        if (this.state.moveTo !== this.props.group.id) {\r\n            const copyBoard = { ...this.props.board }\r\n            copyBoard.groups[boardService.getGroupIdxById(copyBoard, this.props.group.id)].tasks.splice(\r\n                boardService.getTaskIdxById(this.props.group, this.props.task.id), 1)\r\n            copyBoard.groups[this.state.moveTo].tasks.push(this.props.task)\r\n            this.props.update(copyBoard)\r\n        }\r\n        // this.props.history.push(`/board/${copyBoard._id}`)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log(target.value)\r\n        this.setState({ moveTo: target.value })\r\n    }\r\n    render() {\r\n        return <div className=\"action-modal move-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"move-modal w-100 p-abs flex column pad-1\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center space-between gap-5 w-100 mb-1\">\r\n                        <h1 className=\"fam-1 font-1 \">Move to</h1>\r\n                        <span className=\"cur-pointer fam-1 font-s bold\" onClick={() => { this.props.toggleModal('move-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content w-100\">\r\n                        <form onSubmit={(ev) => {\r\n                            this.moveTask()\r\n                            ev.preventDefault()\r\n                        }}>\r\n                            <select onChange={this.handleChange}>\r\n                                {this.props.board.groups.map((group, idx) => {\r\n                                    return group.id === this.props.group.id && <option key={group.id} value={group.id}>{group.title}</option>\r\n                                })}\r\n                                {this.props.board.groups.map((group, idx) => {\r\n                                    return group.id !== this.props.group.id && <option value={idx} key={group.id}>{group.title}</option>\r\n                                })}\r\n                            </select>\r\n                            <button className=\"btn-copy-move\">Move</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const MoveMdodal = connect(mapStateToProps, mapDispatchToProps)(_MoveMdodal)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\GroupModal.jsx",[],{"ruleId":"489","replacedBy":"490"},{"ruleId":"491","replacedBy":"492"},{"ruleId":"493","severity":1,"message":"494","line":2,"column":34,"nodeType":"495","messageId":"496","endLine":2,"endColumn":51},{"ruleId":"493","severity":1,"message":"497","line":2,"column":10,"nodeType":"495","messageId":"496","endLine":2,"endColumn":21},{"ruleId":"493","severity":1,"message":"498","line":3,"column":10,"nodeType":"495","messageId":"496","endLine":3,"endColumn":14},{"ruleId":"493","severity":1,"message":"499","line":4,"column":10,"nodeType":"495","messageId":"496","endLine":4,"endColumn":21},{"ruleId":"493","severity":1,"message":"500","line":7,"column":10,"nodeType":"495","messageId":"496","endLine":7,"endColumn":21},{"ruleId":"493","severity":1,"message":"501","line":2,"column":10,"nodeType":"495","messageId":"496","endLine":2,"endColumn":17},{"ruleId":"493","severity":1,"message":"502","line":7,"column":10,"nodeType":"495","messageId":"496","endLine":7,"endColumn":21},{"ruleId":"493","severity":1,"message":"503","line":7,"column":23,"nodeType":"495","messageId":"496","endLine":7,"endColumn":32},{"ruleId":"493","severity":1,"message":"504","line":7,"column":34,"nodeType":"495","messageId":"496","endLine":7,"endColumn":46},{"ruleId":"493","severity":1,"message":"505","line":8,"column":10,"nodeType":"495","messageId":"496","endLine":8,"endColumn":19},{"ruleId":"506","severity":1,"message":"507","line":41,"column":11,"nodeType":"508","endLine":41,"endColumn":57},{"ruleId":"506","severity":1,"message":"507","line":51,"column":11,"nodeType":"508","endLine":51,"endColumn":64},{"ruleId":"506","severity":1,"message":"507","line":60,"column":11,"nodeType":"508","endLine":60,"endColumn":60},{"ruleId":"506","severity":1,"message":"507","line":68,"column":11,"nodeType":"508","endLine":68,"endColumn":60},{"ruleId":"493","severity":1,"message":"509","line":8,"column":27,"nodeType":"495","messageId":"496","endLine":8,"endColumn":36},{"ruleId":"493","severity":1,"message":"510","line":3,"column":10,"nodeType":"495","messageId":"496","endLine":3,"endColumn":14},{"ruleId":"506","severity":1,"message":"507","line":107,"column":33,"nodeType":"508","endLine":107,"endColumn":89},{"ruleId":"493","severity":1,"message":"511","line":3,"column":10,"nodeType":"495","messageId":"496","endLine":3,"endColumn":23},{"ruleId":"493","severity":1,"message":"512","line":3,"column":25,"nodeType":"495","messageId":"496","endLine":3,"endColumn":50},{"ruleId":"493","severity":1,"message":"513","line":66,"column":11,"nodeType":"495","messageId":"496","endLine":66,"endColumn":18},{"ruleId":"493","severity":1,"message":"514","line":54,"column":11,"nodeType":"495","messageId":"496","endLine":54,"endColumn":15},{"ruleId":"493","severity":1,"message":"515","line":19,"column":10,"nodeType":"495","messageId":"496","endLine":19,"endColumn":29},{"ruleId":"493","severity":1,"message":"516","line":43,"column":7,"nodeType":"495","messageId":"496","endLine":43,"endColumn":20},{"ruleId":"493","severity":1,"message":"517","line":2,"column":10,"nodeType":"495","messageId":"496","endLine":2,"endColumn":25},{"ruleId":"493","severity":1,"message":"518","line":6,"column":10,"nodeType":"495","messageId":"496","endLine":6,"endColumn":27},{"ruleId":"493","severity":1,"message":"517","line":2,"column":10,"nodeType":"495","messageId":"496","endLine":2,"endColumn":25},{"ruleId":"493","severity":1,"message":"519","line":2,"column":38,"nodeType":"495","messageId":"496","endLine":2,"endColumn":47},{"ruleId":"493","severity":1,"message":"520","line":3,"column":10,"nodeType":"495","messageId":"496","endLine":3,"endColumn":18},{"ruleId":"493","severity":1,"message":"521","line":32,"column":32,"nodeType":"495","messageId":"496","endLine":32,"endColumn":40},{"ruleId":"493","severity":1,"message":"522","line":49,"column":24,"nodeType":"495","messageId":"496","endLine":49,"endColumn":29},{"ruleId":"493","severity":1,"message":"523","line":49,"column":31,"nodeType":"495","messageId":"496","endLine":49,"endColumn":35},{"ruleId":"493","severity":1,"message":"524","line":55,"column":37,"nodeType":"495","messageId":"496","endLine":55,"endColumn":48},{"ruleId":"525","severity":1,"message":"526","line":79,"column":76,"nodeType":"527","messageId":"528","endLine":79,"endColumn":78},{"ruleId":"493","severity":1,"message":"529","line":1,"column":10,"nodeType":"495","messageId":"496","endLine":1,"endColumn":21},{"ruleId":"489","replacedBy":"530"},{"ruleId":"491","replacedBy":"531"},{"ruleId":"493","severity":1,"message":"494","line":2,"column":34,"nodeType":"495","messageId":"496","endLine":2,"endColumn":51},{"ruleId":"493","severity":1,"message":"498","line":2,"column":10,"nodeType":"495","messageId":"496","endLine":2,"endColumn":14},{"ruleId":"493","severity":1,"message":"501","line":2,"column":10,"nodeType":"495","messageId":"496","endLine":2,"endColumn":17},{"ruleId":"493","severity":1,"message":"502","line":7,"column":10,"nodeType":"495","messageId":"496","endLine":7,"endColumn":21},{"ruleId":"493","severity":1,"message":"503","line":7,"column":23,"nodeType":"495","messageId":"496","endLine":7,"endColumn":32},{"ruleId":"493","severity":1,"message":"504","line":7,"column":34,"nodeType":"495","messageId":"496","endLine":7,"endColumn":46},{"ruleId":"493","severity":1,"message":"505","line":8,"column":10,"nodeType":"495","messageId":"496","endLine":8,"endColumn":19},{"ruleId":"506","severity":1,"message":"507","line":41,"column":11,"nodeType":"508","endLine":41,"endColumn":57},{"ruleId":"506","severity":1,"message":"507","line":51,"column":11,"nodeType":"508","endLine":51,"endColumn":64},{"ruleId":"506","severity":1,"message":"507","line":60,"column":11,"nodeType":"508","endLine":60,"endColumn":60},{"ruleId":"506","severity":1,"message":"507","line":68,"column":11,"nodeType":"508","endLine":68,"endColumn":60},{"ruleId":"493","severity":1,"message":"532","line":6,"column":8,"nodeType":"495","messageId":"496","endLine":6,"endColumn":10},{"ruleId":"493","severity":1,"message":"533","line":7,"column":8,"nodeType":"495","messageId":"496","endLine":7,"endColumn":10},{"ruleId":"493","severity":1,"message":"534","line":8,"column":8,"nodeType":"495","messageId":"496","endLine":8,"endColumn":10},{"ruleId":"493","severity":1,"message":"535","line":9,"column":8,"nodeType":"495","messageId":"496","endLine":9,"endColumn":10},{"ruleId":"493","severity":1,"message":"536","line":10,"column":8,"nodeType":"495","messageId":"496","endLine":10,"endColumn":10},{"ruleId":"493","severity":1,"message":"537","line":11,"column":8,"nodeType":"495","messageId":"496","endLine":11,"endColumn":10},{"ruleId":"493","severity":1,"message":"538","line":12,"column":8,"nodeType":"495","messageId":"496","endLine":12,"endColumn":10},{"ruleId":"493","severity":1,"message":"539","line":13,"column":8,"nodeType":"495","messageId":"496","endLine":13,"endColumn":10},{"ruleId":"493","severity":1,"message":"540","line":14,"column":10,"nodeType":"495","messageId":"496","endLine":14,"endColumn":15},{"ruleId":"493","severity":1,"message":"541","line":3,"column":10,"nodeType":"495","messageId":"496","endLine":3,"endColumn":17},{"ruleId":"493","severity":1,"message":"509","line":8,"column":27,"nodeType":"495","messageId":"496","endLine":8,"endColumn":36},{"ruleId":"493","severity":1,"message":"529","line":1,"column":10,"nodeType":"495","messageId":"496","endLine":1,"endColumn":21},{"ruleId":"525","severity":1,"message":"542","line":102,"column":45,"nodeType":"527","messageId":"543","endLine":102,"endColumn":47},{"ruleId":"493","severity":1,"message":"516","line":43,"column":7,"nodeType":"495","messageId":"496","endLine":43,"endColumn":20},{"ruleId":"493","severity":1,"message":"514","line":56,"column":11,"nodeType":"495","messageId":"496","endLine":56,"endColumn":15},{"ruleId":"493","severity":1,"message":"544","line":57,"column":11,"nodeType":"495","messageId":"496","endLine":57,"endColumn":16},{"ruleId":"493","severity":1,"message":"545","line":58,"column":9,"nodeType":"495","messageId":"496","endLine":58,"endColumn":16},{"ruleId":"493","severity":1,"message":"546","line":3,"column":7,"nodeType":"495","messageId":"496","endLine":3,"endColumn":23},{"ruleId":"493","severity":1,"message":"517","line":2,"column":10,"nodeType":"495","messageId":"496","endLine":2,"endColumn":25},{"ruleId":"547","severity":1,"message":"548","line":102,"column":58,"nodeType":"549","messageId":"550","endLine":102,"endColumn":60},{"ruleId":"493","severity":1,"message":"551","line":61,"column":24,"nodeType":"495","messageId":"496","endLine":61,"endColumn":32},{"ruleId":"493","severity":1,"message":"520","line":3,"column":10,"nodeType":"495","messageId":"496","endLine":3,"endColumn":18},{"ruleId":"493","severity":1,"message":"552","line":12,"column":10,"nodeType":"495","messageId":"496","endLine":12,"endColumn":21},{"ruleId":"493","severity":1,"message":"521","line":25,"column":32,"nodeType":"495","messageId":"496","endLine":25,"endColumn":40},{"ruleId":"493","severity":1,"message":"522","line":42,"column":24,"nodeType":"495","messageId":"496","endLine":42,"endColumn":29},{"ruleId":"493","severity":1,"message":"523","line":42,"column":31,"nodeType":"495","messageId":"496","endLine":42,"endColumn":35},{"ruleId":"493","severity":1,"message":"524","line":53,"column":37,"nodeType":"495","messageId":"496","endLine":53,"endColumn":48},{"ruleId":"525","severity":1,"message":"526","line":79,"column":83,"nodeType":"527","messageId":"528","endLine":79,"endColumn":85},{"ruleId":"493","severity":1,"message":"510","line":3,"column":10,"nodeType":"495","messageId":"496","endLine":3,"endColumn":14},{"ruleId":"493","severity":1,"message":"553","line":6,"column":8,"nodeType":"495","messageId":"496","endLine":6,"endColumn":22},{"ruleId":"493","severity":1,"message":"554","line":29,"column":17,"nodeType":"495","messageId":"496","endLine":29,"endColumn":24},{"ruleId":"525","severity":1,"message":"526","line":240,"column":77,"nodeType":"527","messageId":"528","endLine":240,"endColumn":79},{"ruleId":"493","severity":1,"message":"510","line":2,"column":10,"nodeType":"495","messageId":"496","endLine":2,"endColumn":14},{"ruleId":"493","severity":1,"message":"555","line":2,"column":16,"nodeType":"495","messageId":"496","endLine":2,"endColumn":23},{"ruleId":"493","severity":1,"message":"529","line":1,"column":10,"nodeType":"495","messageId":"496","endLine":1,"endColumn":21},{"ruleId":"493","severity":1,"message":"511","line":3,"column":10,"nodeType":"495","messageId":"496","endLine":3,"endColumn":23},{"ruleId":"493","severity":1,"message":"512","line":3,"column":25,"nodeType":"495","messageId":"496","endLine":3,"endColumn":50},{"ruleId":"493","severity":1,"message":"510","line":2,"column":10,"nodeType":"495","messageId":"496","endLine":2,"endColumn":14},{"ruleId":"493","severity":1,"message":"555","line":2,"column":16,"nodeType":"495","messageId":"496","endLine":2,"endColumn":23},{"ruleId":"493","severity":1,"message":"554","line":27,"column":21,"nodeType":"495","messageId":"496","endLine":27,"endColumn":28},{"ruleId":"493","severity":1,"message":"556","line":5,"column":10,"nodeType":"495","messageId":"496","endLine":5,"endColumn":19},{"ruleId":"493","severity":1,"message":"557","line":7,"column":10,"nodeType":"495","messageId":"496","endLine":7,"endColumn":22},{"ruleId":"493","severity":1,"message":"556","line":5,"column":10,"nodeType":"495","messageId":"496","endLine":5,"endColumn":19},"no-native-reassign",["558"],"no-negated-in-lhs",["559"],"no-unused-vars","'localLoggedinUser' is assigned a value but never used.","Identifier","unusedVar","'LoginSignup' is defined but never used.","'Chat' is defined but never used.","'UserDetails' is defined but never used.","'TaskDetails' is defined but never used.","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Draggable' is defined but never used.","'Link' is defined but never used.","'socketService' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'newTask' is assigned a value but never used.","'year' is assigned a value but never used.","'createSocketService' is defined but never used.","'socketIsReady' is assigned a value but never used.","'DragDropContext' is defined but never used.","'HiOutlineMenuAlt4' is defined but never used.","'Droppable' is defined but never used.","'Provider' is defined but never used.","'duration' is assigned a value but never used.","'index' is assigned a value but never used.","'task' is assigned a value but never used.","'updateBoard' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'utilService' is defined but never used.",["558"],["559"],"'p0' is defined but never used.","'p1' is defined but never used.","'p2' is defined but never used.","'p3' is defined but never used.","'p4' is defined but never used.","'p5' is defined but never used.","'p6' is defined but never used.","'p7' is defined but never used.","'Board' is defined but never used.","'loading' is defined but never used.","Array.prototype.findIndex() expects a return value from arrow function.","expectedInside","'hours' is assigned a value but never used.","'minutes' is assigned a value but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onUpdate' is assigned a value but never used.","'UserPreview' is defined but never used.","'onClickOutside' is defined but never used.","'boardId' is assigned a value but never used.","'NavLink' is defined but never used.","'LabelTask' is defined but never used.","'boardService' is defined but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> 6733567c7bdca73c92ddf4dcd974c526ece2abdc
