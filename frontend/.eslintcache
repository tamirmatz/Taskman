[{"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\index.js":"1","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\store.js":"4","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\App.jsx":"5","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js":"6","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js":"7","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js":"8","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js":"9","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\routes.js":"10","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx":"11","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\LoginSignup.jsx":"12","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Chat.jsx":"13","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\UserDetails.jsx":"14","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Board.jsx":"15","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\BoardList.jsx":"16","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Home.jsx":"17","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskDetails.jsx":"18","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js":"19","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\userActions.js":"20","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js":"21","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\socketService.js":"22","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\userService.js":"23","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\Upload.jsx":"24","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx":"25","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\reviewService.js":"26","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\boardService.js":"27","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\httpService.js":"28","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js":"29","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\utilService.js":"30","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js":"31","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx":"32"},{"size":935,"mtime":1622098926959,"results":"33","hashOfConfig":"34"},{"size":5201,"mtime":1622098926966,"results":"35","hashOfConfig":"34"},{"size":377,"mtime":1622098926965,"results":"36","hashOfConfig":"34"},{"size":752,"mtime":1622112896615,"results":"37","hashOfConfig":"34"},{"size":570,"mtime":1622203743581,"results":"38","hashOfConfig":"34"},{"size":737,"mtime":1622098926983,"results":"39","hashOfConfig":"34"},{"size":322,"mtime":1622098926982,"results":"40","hashOfConfig":"34"},{"size":669,"mtime":1622098926981,"results":"41","hashOfConfig":"34"},{"size":687,"mtime":1622121036161,"results":"42","hashOfConfig":"34"},{"size":555,"mtime":1622203743586,"results":"43","hashOfConfig":"34"},{"size":915,"mtime":1622205881867,"results":"44","hashOfConfig":"34"},{"size":5395,"mtime":1622098926963,"results":"45","hashOfConfig":"34"},{"size":3395,"mtime":1622115436998,"results":"46","hashOfConfig":"34"},{"size":732,"mtime":1622098926964,"results":"47","hashOfConfig":"34"},{"size":3894,"mtime":1622206536774,"results":"48","hashOfConfig":"34"},{"size":917,"mtime":1622208691502,"results":"49","hashOfConfig":"34"},{"size":733,"mtime":1622134276757,"results":"50","hashOfConfig":"34"},{"size":1386,"mtime":1622208691498,"results":"51","hashOfConfig":"34"},{"size":1839,"mtime":1622206623459,"results":"52","hashOfConfig":"34"},{"size":1574,"mtime":1622098926978,"results":"53","hashOfConfig":"34"},{"size":1321,"mtime":1622115440359,"results":"54","hashOfConfig":"34"},{"size":2419,"mtime":1622115444535,"results":"55","hashOfConfig":"34"},{"size":2300,"mtime":1622115443280,"results":"56","hashOfConfig":"34"},{"size":1127,"mtime":1622115446261,"results":"57","hashOfConfig":"34"},{"size":1747,"mtime":1622205217109,"results":"58","hashOfConfig":"34"},{"size":1087,"mtime":1622115441879,"results":"59","hashOfConfig":"34"},{"size":2893,"mtime":1622207365174,"results":"60","hashOfConfig":"34"},{"size":1136,"mtime":1622115365941,"results":"61","hashOfConfig":"34"},{"size":587,"mtime":1622115356033,"results":"62","hashOfConfig":"34"},{"size":681,"mtime":1622115397286,"results":"63","hashOfConfig":"34"},{"size":2563,"mtime":1622208486300,"results":"64","hashOfConfig":"34"},{"size":877,"mtime":1622205881869,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1prlnqd",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"68"},"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\index.js",[],["139","140"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\store.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\App.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\routes.js",["141","142","143"],"import { Home } from './pages/Home'\r\nimport { LoginSignup } from './pages/LoginSignup'\r\nimport { Chat } from './pages/Chat'\r\nimport { UserDetails } from './pages/UserDetails'\r\nimport { BoardList } from './pages/BoardList'\r\nimport { Board } from './pages/Board'\r\nimport { TaskDetails } from './cmps/board/TaskDetails'\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/board/:boardId/:taskId',\r\n        component: TaskDetails,\r\n    },\r\n    {\r\n        path: '/board/:boardId',\r\n        component: Board,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: BoardList\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n]\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Chat.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\UserDetails.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Board.jsx",["144"],"import { connect } from 'react-redux'\r\nimport { remove, add, loadBoard, update } from '../store/actions/boardsAction.js';\r\nimport React, { Component } from 'react'\r\nimport { TaskList } from '../cmps/board/TaskList'\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Route, Switch } from 'react-router';\r\nimport { TaskDetails } from '../cmps/board/TaskDetails.jsx';\r\nimport { boardService } from '.././services/boardService.js'\r\n\r\nclass _Board extends Component {\r\n    componentDidMount() {\r\n        const { boardId } = this.props.match.params\r\n        this.props.loadBoard(boardId);\r\n    }\r\n\r\n    onUpdate = (updateBoard) => {\r\n        this.props.update(updateBoard)\r\n    }\r\n\r\n    onDragEnd = res => {\r\n        console.log('ended', res)\r\n        const { destination, source, type } = res\r\n        if (!destination) return\r\n        if (destination.droppableId === source.droppableId &&\r\n            destination.index === source.index) return\r\n        const copyBoard = { ...this.props.board }\r\n        const activity = {}\r\n        if (type === 'task') {\r\n            const sourceListIdx = boardService.getGroupIdxById(copyBoard, source.droppableId)\r\n            const destinationListIdx = boardService.getGroupIdxById(copyBoard, destination.droppableId)\r\n            const task = copyBoard.groups[sourceListIdx].tasks.splice(source.index, 1)\r\n\r\n            const sourceListName = copyBoard.groups[sourceListIdx].title\r\n            const destinationListName = copyBoard.groups[destinationListIdx].title\r\n            activity.txt=`has moved ${task[0].title} from ${sourceListName} to ${destinationListName}`\r\n        }\r\n        else{\r\n\r\n            const list =copyBoard.lists.splice(source.index,1)\r\n            copyBoard.lists.splice(destination.index,0,list[0])\r\n            activity.txt=`has moved list ${list[0].title}`\r\n        }\r\n        this.props.update(copyBoard)\r\n    }\r\n\r\n    render() {\r\n        const board = this.props.board;\r\n        if (!board) {\r\n            return <h1>loading...</h1>\r\n        }\r\n        return (\r\n            <section className=\"board\">\r\n                <section className=\"groups flex\">\r\n                    <DragDropContext\r\n                        onDragEnd={this.onDragEnd}\r\n                    >\r\n                        <Droppable droppableId={'all-columns'}\r\n                            direction=\"horizontal\"\r\n                            type=\"list\"\r\n                        >\r\n                            {provided => (\r\n                                <ul\r\n                                    className=\"clear-list flex\"\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}\r\n                                >\r\n                                    {board && board.groups.map((group, idx) => <TaskList index={idx}\r\n                                        key={group.id}\r\n                                        board={board}\r\n                                        group={group}\r\n                                        updateBoard={this.onUpdate} />)}\r\n                                    {provided.placeholder}\r\n                                </ul>\r\n\r\n                            )}\r\n\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                </section>\r\n                <Switch>\r\n                    <Route path={'/board/:boardId/:groupId/:taskId'} component={TaskDetails}></Route>\r\n                </Switch>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n// {\r\n//     path: '/board/:boardId/:taskId',\r\n//     component: TaskDetails,\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    remove,\r\n    add,\r\n    loadBoard,\r\n    update\r\n}\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\BoardList.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Home.jsx",["145","146","147","148","149"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { loadReviews, addReview, removeReview } from '../store/actions/reviewActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Home extends Component {\r\n  state = {\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      reviewToEdit: {\r\n        ...prevState.reviewToEdit,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n       Welcome Home!\r\n       <Link to=\"/board\">Boards</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskDetails.jsx",["150","151"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { remove, add, query } from '../../store/actions/boardsAction.js';\r\n\r\n\r\nclass _TaskDetails extends Component {\r\n    render() {\r\n        const task = {\r\n            \"id\": \"c104\",\r\n            \"title\": \"Help me\",\r\n            \"description\": \"description\",\r\n            \"comments\": [\r\n                {\r\n                    \"id\": \"ZdPnm\",\r\n                    \"txt\": \"also @yaronb please CR this\",\r\n                    \"createdAt\": 1590999817436.0,\r\n                    \"byMember\": {\r\n                        \"_id\": \"u101\",\r\n                        \"fullname\": \"Tal Tarablus\",\r\n                        \"imgUrl\": \"http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg\"\r\n                    }\r\n                }\r\n            ],\r\n            \"checklists\": [\r\n                {\r\n                    \"id\": \"YEhmF\",\r\n                    \"title\": \"Checklist\",\r\n                    \"todos\": [\r\n                        {\r\n                            \"id\": \"212jX\",\r\n                            \"title\": \"To Do 1\",\r\n                            \"isDone\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"members\": [\r\n                {\r\n                    \"_id\": \"u101\",\r\n                    \"username\": \"Tal\",\r\n                    \"fullname\": \"Tal Tarablus\",\r\n                    \"imgUrl\": \"http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg\"\r\n                }\r\n            ],\r\n            \"labelIds\": [\"101\"],\r\n            \"createdAt\": 1590999730348,\r\n            \"dueDate\": 16156215211,\r\n            \"byMember\": {\r\n                \"_id\": \"u101\",\r\n                \"username\": \"Tal\",\r\n                \"fullname\": \"Tal Tarablus\",\r\n                \"imgUrl\": \"http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg\"\r\n            },\r\n            \"style\": {\r\n                \"bgColor\": \"#26de81\"\r\n            }\r\n        }\r\n        const { taskId } = this.props.match.params;\r\n        console.log(taskId)\r\n        return (\r\n            <section className=\"task-details\">\r\n                <h1>Task details</h1>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    remove,\r\n    add,\r\n    query\r\n}\r\nexport const TaskDetails = connect(mapStateToProps, mapDispatchToProps)(_TaskDetails)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js",["152","153"],"import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../../services/generalService/socketService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n      // socketService.on(SOCKET_EVENT_REVIEW_ADDED, review =>{\r\n      //   dispatch({ type: 'ADD_REVIEW', review })\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\socketService.js",["154","155"],"import io from 'socket.io-client'\r\nimport {httpService} from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\nfunction cb(x) {console.log(x)}\r\nsocketService.on('baba', cb)\r\nsocketService.on('mama', cb)\r\nsocketService.on('lala', cb)\r\nsocketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\userService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\Upload.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx",["156"],"import { TaskPreview } from '../board/TaskPreview'\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\n\r\nexport function TaskList({ board, group, updateBoard, index }) {\r\n\r\n    return/*  <div className=\"group-container\"> */(\r\n    <Draggable index={index} isDragDisabled={false} draggableId={group.id}>\r\n            {(provided, snapshot) => {\r\n\r\n                return <div className=\"task-list group-container\"\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                    style={{\r\n                        backgroundColor: snapshot.isDraggingOver ? 'lightblue' : '#ebecf0'\r\n                    }}\r\n                >\r\n                    <h1>{group.title}</h1>\r\n                    <Droppable key={index} droppableId={group.id} type='task'>\r\n                        {(provided) => (\r\n                            <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                                {group.tasks.map((task, idx) => (\r\n                                    <TaskPreview key={task.id}\r\n                                        board={board}\r\n                                        index={idx}\r\n                                        group={group.id} \r\n                                        updateBoard={updateBoard}\r\n                                        task={task}\r\n                                    />\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n\r\n                </div>\r\n            }}\r\n        </Draggable>)\r\n /*    </div> */\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\reviewService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\boardService.js",["157"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\httpService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\utilService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx",["158","159","160"],"import { Link } from 'react-router-dom'\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Provider } from 'react-redux';\r\nexport function TaskPreview({ board, index, task, updateBoard }) {\r\n\r\n    return <Draggable\r\n        draggableId={task.id}\r\n        index={index}\r\n        isDragDisabled={false}\r\n    >\r\n        {(provided, snapshot) => (\r\n            <div\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                ref={provided.innerRef}\r\n\r\n            >\r\n\r\n                <div className=\"task-preview font-s pad-20\">\r\n                    <Link to={`/board/${board._id}/${task.id}`}>\r\n                        <h1>{task.title}</h1>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n    </Draggable>\r\n}\r\n",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":21},{"ruleId":"165","severity":1,"message":"169","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":14},{"ruleId":"165","severity":1,"message":"170","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":21},{"ruleId":"165","severity":1,"message":"171","line":5,"column":27,"nodeType":"167","messageId":"168","endLine":5,"endColumn":36},{"ruleId":"165","severity":1,"message":"172","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":17},{"ruleId":"165","severity":1,"message":"173","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":21},{"ruleId":"165","severity":1,"message":"174","line":4,"column":23,"nodeType":"167","messageId":"168","endLine":4,"endColumn":32},{"ruleId":"165","severity":1,"message":"175","line":4,"column":34,"nodeType":"167","messageId":"168","endLine":4,"endColumn":46},{"ruleId":"165","severity":1,"message":"176","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":19},{"ruleId":"165","severity":1,"message":"177","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":14},{"ruleId":"165","severity":1,"message":"178","line":9,"column":15,"nodeType":"167","messageId":"168","endLine":9,"endColumn":19},{"ruleId":"165","severity":1,"message":"179","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":23},{"ruleId":"165","severity":1,"message":"180","line":3,"column":25,"nodeType":"167","messageId":"168","endLine":3,"endColumn":50},{"ruleId":"165","severity":1,"message":"181","line":19,"column":10,"nodeType":"167","messageId":"168","endLine":19,"endColumn":29},{"ruleId":"165","severity":1,"message":"182","line":43,"column":7,"nodeType":"167","messageId":"168","endLine":43,"endColumn":20},{"ruleId":"165","severity":1,"message":"183","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":25},{"ruleId":"165","severity":1,"message":"184","line":59,"column":11,"nodeType":"167","messageId":"168","endLine":59,"endColumn":18},{"ruleId":"165","severity":1,"message":"183","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":25},{"ruleId":"165","severity":1,"message":"185","line":2,"column":38,"nodeType":"167","messageId":"168","endLine":2,"endColumn":47},{"ruleId":"165","severity":1,"message":"186","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":18},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'LoginSignup' is defined but never used.","Identifier","unusedVar","'Chat' is defined but never used.","'UserDetails' is defined but never used.","'Draggable' is defined but never used.","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","'Link' is defined but never used.","'task' is assigned a value but never used.","'socketService' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'createSocketService' is defined but never used.","'socketIsReady' is assigned a value but never used.","'DragDropContext' is defined but never used.","'newTask' is assigned a value but never used.","'Droppable' is defined but never used.","'Provider' is defined but never used.","no-global-assign","no-unsafe-negation"]