[{"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/index.js":"1","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/serviceWorkerRegistration.js":"2","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/reportWebVitals.js":"3","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/App.jsx":"4","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/store.js":"5","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/routes.js":"6","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/systemReducer.js":"7","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/userReducer.js":"8","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/reviewReducer.js":"9","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/boardReducer.js":"10","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/AppHeader.jsx":"11","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/UserDetails.jsx":"12","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/LoginSignup.jsx":"13","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Board.jsx":"14","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Chat.jsx":"15","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Home.jsx":"16","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/BoardList.jsx":"17","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskDetails.jsx":"18","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/userActions.js":"19","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/reviewActions.js":"20","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/boardsAction.js":"21","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/userService.js":"22","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/socketService.js":"23","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/Upload.jsx":"24","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskList.jsx":"25","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/reviewService.js":"26","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/boardService.js":"27","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/httpService.js":"28","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/cloudinaryService.js":"29","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/utilService.js":"30","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/asyncStorageService.js":"31","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskPreview.jsx":"32","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/data/board.js":"33","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalWrapper.jsx":"34","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/Overlay.jsx":"35"},{"size":910,"mtime":1610189396000,"results":"36","hashOfConfig":"37"},{"size":5064,"mtime":499155300000,"results":"38","hashOfConfig":"37"},{"size":364,"mtime":499155300000,"results":"39","hashOfConfig":"37"},{"size":515,"mtime":1622208933114,"results":"40","hashOfConfig":"37"},{"size":752,"mtime":1622123464533,"results":"41","hashOfConfig":"37"},{"size":634,"mtime":1622289361292,"results":"42","hashOfConfig":"37"},{"size":322,"mtime":1609063804000,"results":"43","hashOfConfig":"37"},{"size":737,"mtime":1609752012000,"results":"44","hashOfConfig":"37"},{"size":669,"mtime":1609949674000,"results":"45","hashOfConfig":"37"},{"size":668,"mtime":1622215305163,"results":"46","hashOfConfig":"37"},{"size":934,"mtime":1622209218930,"results":"47","hashOfConfig":"37"},{"size":732,"mtime":1621836072000,"results":"48","hashOfConfig":"37"},{"size":5395,"mtime":1609949478000,"results":"49","hashOfConfig":"37"},{"size":5320,"mtime":1622295511544,"results":"50","hashOfConfig":"37"},{"size":3395,"mtime":1622123464523,"results":"51","hashOfConfig":"37"},{"size":733,"mtime":1622134238076,"results":"52","hashOfConfig":"37"},{"size":883,"mtime":1622206336666,"results":"53","hashOfConfig":"37"},{"size":3835,"mtime":1622291616420,"results":"54","hashOfConfig":"37"},{"size":1574,"mtime":1609834088000,"results":"55","hashOfConfig":"37"},{"size":1321,"mtime":1622123464531,"results":"56","hashOfConfig":"37"},{"size":1855,"mtime":1622274219320,"results":"57","hashOfConfig":"37"},{"size":2300,"mtime":1622123464529,"results":"58","hashOfConfig":"37"},{"size":2329,"mtime":1622123464527,"results":"59","hashOfConfig":"37"},{"size":1127,"mtime":1622123464522,"results":"60","hashOfConfig":"37"},{"size":3084,"mtime":1622296389441,"results":"61","hashOfConfig":"37"},{"size":1087,"mtime":1622123464528,"results":"62","hashOfConfig":"37"},{"size":3437,"mtime":1622275051249,"results":"63","hashOfConfig":"37"},{"size":1093,"mtime":1622123464527,"results":"64","hashOfConfig":"37"},{"size":563,"mtime":1622123464526,"results":"65","hashOfConfig":"37"},{"size":964,"mtime":1622295511545,"results":"66","hashOfConfig":"37"},{"size":2319,"mtime":1622289086771,"results":"67","hashOfConfig":"37"},{"size":2423,"mtime":1622299291201,"results":"68","hashOfConfig":"37"},{"size":3755,"mtime":1622219530654,"results":"69","hashOfConfig":"37"},{"size":158,"mtime":1622292625069,"results":"70","hashOfConfig":"37"},{"size":103,"mtime":1622291834024,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1wsars6",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/index.js",[],["150","151"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/serviceWorkerRegistration.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/reportWebVitals.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/App.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/store.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/routes.js",["152","153","154","155"],"import { Home } from './pages/Home'\nimport { LoginSignup } from './pages/LoginSignup'\nimport { Chat } from './pages/Chat'\nimport { UserDetails } from './pages/UserDetails'\nimport { BoardList } from './pages/BoardList'\nimport { Board } from './pages/Board'\nimport { TaskDetails } from './cmps/board/TaskDetails'\n\nexport const routes = [\n    /* {\n        path: '/board/:boardId/:groupId/:taskId',\n        component: TaskDetails,\n    }, */\n    {\n        path: '/board/:boardId',\n        component: Board,\n    },\n    {\n        path: '/board',\n        component: BoardList\n    },\n    {\n        path: '/',\n        component: Home,\n    },\n]\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/systemReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/userReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/reviewReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/boardReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/AppHeader.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/UserDetails.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/LoginSignup.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Board.jsx",["156"],"import { connect } from 'react-redux'\nimport { remove, add, loadBoard, update } from '../store/actions/boardsAction.js';\nimport React, { Component } from 'react'\nimport { TaskList } from '../cmps/board/TaskList'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Route, Switch } from 'react-router';\nimport { TaskDetails } from '../cmps/board/TaskDetails.jsx';\nimport { boardService } from '.././services/boardService.js'\nimport { utilService } from '../services/generalService/utilService.js'\nimport { ModalWrapper } from '../cmps/shared/ModalWrapper.jsx';\n\nconst EMPTY_GROUP = {title: ''}\n\nclass _Board extends Component {\n    state = {\n        group: EMPTY_GROUP\n    }\n\n\n    componentDidMount() {\n        const { boardId } = this.props.match.params\n        this.props.loadBoard(boardId);\n    }\n\n    onUpdate = (updateBoard) => {\n        this.props.update(updateBoard)\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            group: {\n                ...prevState.group,\n                [field]: value,\n            }\n        }))\n    }\n\n    onAddGroup = () => {\n        const copyBoard = { ...this.props.board };\n        this.setState({ group: { ...this.state.group, id: utilService.makeId() } })\n            copyBoard.groups.push(utilService.formatNewGroup(this.state.group))\n            this.props.update(copyBoard)\n            this.setState({ group: EMPTY_GROUP })\n    }\n\n    onDragEnd = res => {\n        const { destination, source, type } = res\n        if (!destination) return\n        if (destination.droppableId === source.droppableId &&\n            destination.index === source.index) return\n        const copyBoard = { ...this.props.board }\n        const activity = {}\n        if (type === 'task') {\n            const sourceListIdx = boardService.getGroupIdxById(copyBoard, source.droppableId)\n            const destinationListIdx = boardService.getGroupIdxById(copyBoard, destination.droppableId)\n            const task = copyBoard.groups[sourceListIdx].tasks.splice(source.index, 1)\n            copyBoard.groups[destinationListIdx].tasks.splice(destination.index, 0, task[0])\n            const sourceListName = copyBoard.groups[sourceListIdx].title\n            const destinationListName = copyBoard.groups[destinationListIdx].title\n            activity.txt = `has moved ${task[0].title} from ${sourceListName} to ${destinationListName}`\n        }\n        else {\n\n            const list = copyBoard.groups.splice(source.index, 1)\n            copyBoard.groups.splice(destination.index, 0, list[0])\n            activity.txt = `has moved list ${list[0].title}`\n        }\n        this.props.update(copyBoard)\n    }\n\n    onCloseDetails=()=>{\n        this.props.history.push(`/board/${this.props.board._id}`)\n\n    }\n    render() {\n        const { board } = this.props;\n        console.log('from Board, before render:',board)\n        if (!board) {\n            return <h1>loading...{board}</h1>\n        }\n        return (\n            <section className=\"board\">\n                <section className=\"flex\">\n                    <DragDropContext\n                        onDragEnd={this.onDragEnd}\n                    >\n                        <Droppable droppableId={'all-columns'}\n                            direction=\"horizontal\"\n                            type=\"list\"\n                        >\n                            {provided => (\n                                <ul\n                                    className=\"groups clean-list flex\"\n                                    {...provided.droppableProps}\n                                    ref={provided.innerRef}\n                                >\n                                    {board && board.groups.map((group, idx) => <TaskList index={idx}\n                                        key={group.id}\n                                        board={board}\n                                        group={group}\n                                        updateBoard={this.onUpdate} />)}\n                                    {provided.placeholder}\n                                </ul>\n\n                            )}\n\n                        </Droppable>\n                    </DragDropContext>\n                    <div className=\"task-list\">\n                        <form onSubmit={(ev) => {\n                            ev.preventDefault()\n                            this.onAddGroup()\n                        }}>\n                            <input type=\"text\" placeholder=\"+ Add a group\" name=\"title\" onChange={this.handleChange} />\n                        </form>\n                    </div>\n                </section>\n                <Switch>\n                    <Route path={'/board/:boardId/:groupId/:taskId'} render={(props)=><ModalWrapper onClick={this.onCloseDetails}><TaskDetails {...props}/></ModalWrapper>}></Route>\n                </Switch>\n            </section>\n        )\n    }\n}\n\n// {\n//     path: '/board/:boardId/:taskId',\n//     component: TaskDetails,\n// }\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n    remove,\n    add,\n    loadBoard,\n    update\n}\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Chat.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Home.jsx",["157","158","159","160","161"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { loadReviews, addReview, removeReview } from '../store/actions/reviewActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Home extends Component {\r\n  state = {\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      reviewToEdit: {\r\n        ...prevState.reviewToEdit,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n       Welcome Home!\r\n       <Link to=\"/board\">Boards</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/BoardList.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskDetails.jsx",["162","163"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { boardService } from '../../services/boardService.js'\nimport { remove, add, loadBoard, update } from '../../store/actions/boardsAction.js';\nimport onClickOutside from \"react-onclickoutside\";\n\n\nclass _TaskDetails extends Component {\n    state = {\n        group: null,\n        task: null,\n        onFocus: false,\n    }\n\n    async componentDidMount() {\n        const { boardId, taskId, groupId } = this.props.match.params;\n        console.log(boardId)\n        await this.props.loadBoard(boardId);\n        const copyBoard = { ...this.props.board };\n        const group = boardService.getGroupById(copyBoard, groupId);\n        const task = boardService.getTaskById(group, taskId);\n        this.setState({ ...this.state, group, task })\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            task: {\n                ...prevState.task,\n                [field]: value,\n            }\n        }))\n    }\n\n    handleClickOutside = evt => {\n        // ..handling code goes here...\n        console.log('clicked outsidee biatch')\n      };\n\n    updateTask = () => {\n        const copyBoard = { ...this.props.board };\n        const groupIdx = boardService.getGroupIdxById(copyBoard, this.state.group.id)\n        const taskIdx = boardService.getTaskIdxById(this.state.group, this.state.task.id)\n        copyBoard.groups[groupIdx].tasks[taskIdx] = this.state.task\n        console.log('updatedTask')\n        this.props.update(copyBoard)\n    }\n\n\n    render() {\n        const { task } = this.state;\n        if (!task) return <h1>Loading...</h1>\n        return (\n            \n            <section className=\"task-details w-70 h-70 flex column bg-modal pos-fixed c-stand\">\n               \n                <form className=\"form-details\" onSubmit={(ev) => {\n                    ev.preventDefault()\n                    this.updateTask()\n                }}>\n                    <div className=\"input-details\">\n                        <label htmlFor=\"title\"><i class=\"fas fa-tasks-alt font-2 c-info\"></i></label>\n                        <input onBlur={this.updateTask} type=\"text\" value={task.title} name=\"title\" className=\"w-50 input-details fas fa-tasks-alt\" onChange={this.handleChange} />\n                    </div>\n                </form>\n                <form onSubmit={(ev) => {\n                    ev.preventDefault()\n                    this.updateTask()\n                }}>\n                    <label htmlFor=\"description\">Description</label>\n                    <input onBlur={this.updateTask} type=\"text\" value={task.description} name=\"description\" className=\"w-50 input-details fas fa-tasks-alt\" onChange={this.handleChange} />\n                </form>\n                {task.comments && <ul className=\"comments clean-list\">\n                    {task.comments.map(comment => {\n                        return <li className=\"flex column\">\n                            <div className=\"commenter flex\">\n                                <img className=\"avatar\" src={comment.byMember.imgUrl} />\n                                <h1 className=\"commenter-name\">{comment.byMember.fullname}</h1>\n                            </div>\n                            {comment.txt}\n                            <small>{comment.createdAt}</small>\n                        </li>\n                    })}\n                </ul>}\n\n\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n    remove,\n    add,\n    loadBoard,\n    update\n}\nexport const TaskDetails = connect(mapStateToProps, mapDispatchToProps)(onClickOutside(_TaskDetails))","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/userActions.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/reviewActions.js",["164","165"],"import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../../services/generalService/socketService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n      // socketService.on(SOCKET_EVENT_REVIEW_ADDED, review =>{\r\n      //   dispatch({ type: 'ADD_REVIEW', review })\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/boardsAction.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/userService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/socketService.js",["166","167"],"import io from 'socket.io-client'\nimport {httpService} from './httpService'\n\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\n\n\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\n// export const socketService = createSocketService()\nexport const socketService = createDummySocketService()\n\nwindow.socketService = socketService\n\nvar socketIsReady = false;\n// socketService.setup()\n\n\nfunction createSocketService() {\n  var socket = null;\n  const socketService = {\n    async setup() {\n      if (socket) return\n      await httpService.get('setup-session')\n      socket = io(baseUrl, { reconnection: false})\n      socketIsReady = true;\n    },\n    async on(eventName, cb) {\n      if (!socket) await socketService.setup()\n      socket.on(eventName, cb)\n    },\n    async off(eventName, cb=null) {\n      if (!socket) await socketService.setup()\n      if (!cb) socket.removeAllListeners(eventName)\n      else socket.off(eventName, cb)\n    },\n    async emit(eventName, data) {\n      if (!socket) await socketService.setup()\n      socket.emit(eventName, data)\n    },\n    terminate() {\n      socket = null\n      socketIsReady = false\n    }\n  }\n  return socketService\n}\n\n// eslint-disable-next-line\nfunction createDummySocketService() {\n  var listenersMap = {}\n  const socketService = {\n    listenersMap,\n    setup() {\n      listenersMap = {}\n    },\n    terminate() {\n      this.setup()\n    },\n    on(eventName, cb) {\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\n    },\n    off(eventName, cb) {\n      if (!listenersMap[eventName]) return\n      if (!cb) delete listenersMap[eventName]\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\n    },\n    emit(eventName, data) {\n      if (!listenersMap[eventName]) return\n      listenersMap[eventName].forEach(listener => {\n        listener(data)\n      })\n    },\n    debugMsg() {\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\n    },\n  }\n  return socketService\n}\n\n\n// Basic Tests\nfunction cb(x) {console.log(x)}\nsocketService.on('baba', cb)\nsocketService.on('mama', cb)\nsocketService.on('lala', cb)\nsocketService.emit('baba', 'DATA')\n// socketService.off('baba', cb)\n\n\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/Upload.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskList.jsx",["168"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/reviewService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/boardService.js",["169"],"import { utilService } from './generalService/utilService.js'\r\nimport { storageService } from './generalService/asyncStorageService.js'\r\n\r\nwindow.storageService = storageService;\r\n\r\nconst STORAGE_KEY = 'board'\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    update,\r\n    add,\r\n    getGroupById,\r\n    getTaskById,\r\n    getGroupIdxById,\r\n    addTask,\r\n    checklistPreview,\r\n    getTaskIdxById\r\n}\r\n\r\n\r\nfunction query() {\r\n    return storageService.query(STORAGE_KEY)\r\n}\r\n\r\nfunction getById(boardId) {\r\n    const board = storageService.get(STORAGE_KEY, boardId);\r\n    return board\r\n}\r\n\r\nfunction remove(boardId) {\r\n    return storageService.remove(STORAGE_KEY, boardId)\r\n}\r\n\r\nfunction add() {\r\n    const newBoard = _createBoard()\r\n    const savedBoard = storageService.post(STORAGE_KEY, newBoard)\r\n    return savedBoard\r\n}\r\n\r\nfunction update(board) {\r\n    console.log('service')\r\n    return storageService.put(STORAGE_KEY, board)\r\n\r\n}\r\n\r\n//task crud\r\nfunction getGroupById(board, groupId) {\r\n    return board.groups.find(group => group.id === groupId);\r\n}\r\n\r\nfunction getGroupIdxById(board, groupId) {\r\n    return board.groups.findIndex(group => group.id === groupId);\r\n}\r\n\r\nfunction getTaskIdxById(group, taskId) {\r\n    return group.tasks.findIndex(task => task.id === taskId);\r\n}\r\n\r\nfunction getTaskById(group, taskId) {\r\n    return group.tasks.find(task => task.id === taskId)\r\n}\r\n\r\nfunction addTask(board, group, title) {\r\n    const newTask = {\r\n        id: utilService.makeId(),\r\n        title: title\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nfunction _createBoard(title = 'New Board', loggedInUser = { fullname: 'some user', _id: 'u101', imgUrl: 'http://some-img.jpg' }) {\r\n    const board = {\r\n        \"_id\": utilService.makeId(),\r\n        title,\r\n        \"createdAt\": Date.now(),\r\n        \"createdBy\": {\r\n            \"_id\": loggedInUser._id,\r\n            \"fullname\": loggedInUser.fullname,\r\n            \"imgUrl\": loggedInUser.imgUrl\r\n        },\r\n        \"style\": {},\r\n        \"labels\": [\r\n            {\r\n                \"id\": \"l101\",\r\n                \"title\": \"Done\",\r\n                \"color\": \"#61bd4f\"\r\n            },\r\n            {\r\n                \"id\": \"l101\",\r\n                \"title\": \"Todo\",\r\n                \"color\": \"green\"\r\n            }\r\n        ],\r\n        \"members\": [\r\n            {\r\n                \"_id\": loggedInUser._id,\r\n                \"fullname\": loggedInUser.fullname,\r\n                \"imgUrl\": loggedInUser.imgUrl\r\n            }\r\n        ],\r\n        \"groups\": [\r\n            {\r\n                \"id\": utilService.makeId(),\r\n                \"title\": \"Group 1\",\r\n                \"tasks\": [\r\n                    {\r\n                        \"id\": \"c101\",\r\n                        \"title\": \"Replace logo\"\r\n                    },\r\n                    {\r\n                        \"id\": \"c102\",\r\n                        \"title\": \"Add Samples\"\r\n                    }\r\n                ],\r\n                \"checklists\": [],\r\n                \"style\": {}\r\n            },\r\n        ],\r\n        \"activities\": []\r\n    }\r\n\r\n    return board;\r\n}\r\n\r\nfunction checklistPreview(task){\r\n    const checklists = task.checklists\r\n    let allTodos = 0;\r\n    let doneTodos = 0;\r\n    checklists.forEach(checkList => {\r\n        allTodos += checkList.todos.length;\r\n        checkList.todos.forEach(todo => {\r\n            if(todo.isDone) doneTodos++\r\n        })\r\n    });\r\n\r\n    const str = `${doneTodos}/${allTodos}`\r\n    return str\r\n} ","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/httpService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/cloudinaryService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/utilService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/asyncStorageService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskPreview.jsx",["170","171","172"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/data/board.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalWrapper.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/Overlay.jsx",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":21},{"ruleId":"177","severity":1,"message":"181","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":14},{"ruleId":"177","severity":1,"message":"182","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":21},{"ruleId":"177","severity":1,"message":"183","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":21},{"ruleId":"177","severity":1,"message":"184","line":5,"column":27,"nodeType":"179","messageId":"180","endLine":5,"endColumn":36},{"ruleId":"177","severity":1,"message":"185","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"186","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":21},{"ruleId":"177","severity":1,"message":"187","line":4,"column":23,"nodeType":"179","messageId":"180","endLine":4,"endColumn":32},{"ruleId":"177","severity":1,"message":"188","line":4,"column":34,"nodeType":"179","messageId":"180","endLine":4,"endColumn":46},{"ruleId":"177","severity":1,"message":"189","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":19},{"ruleId":"177","severity":1,"message":"190","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":14},{"ruleId":"191","severity":1,"message":"192","line":80,"column":33,"nodeType":"193","endLine":80,"endColumn":89},{"ruleId":"177","severity":1,"message":"194","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":23},{"ruleId":"177","severity":1,"message":"195","line":3,"column":25,"nodeType":"179","messageId":"180","endLine":3,"endColumn":50},{"ruleId":"177","severity":1,"message":"196","line":19,"column":10,"nodeType":"179","messageId":"180","endLine":19,"endColumn":29},{"ruleId":"177","severity":1,"message":"197","line":43,"column":7,"nodeType":"179","messageId":"180","endLine":43,"endColumn":20},{"ruleId":"177","severity":1,"message":"198","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":25},{"ruleId":"177","severity":1,"message":"199","line":66,"column":11,"nodeType":"179","messageId":"180","endLine":66,"endColumn":18},{"ruleId":"177","severity":1,"message":"198","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":25},{"ruleId":"177","severity":1,"message":"200","line":2,"column":38,"nodeType":"179","messageId":"180","endLine":2,"endColumn":47},{"ruleId":"177","severity":1,"message":"201","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":18},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'LoginSignup' is defined but never used.","Identifier","unusedVar","'Chat' is defined but never used.","'UserDetails' is defined but never used.","'TaskDetails' is defined but never used.","'Draggable' is defined but never used.","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'socketService' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'createSocketService' is defined but never used.","'socketIsReady' is assigned a value but never used.","'DragDropContext' is defined but never used.","'newTask' is assigned a value but never used.","'Droppable' is defined but never used.","'Provider' is defined but never used.","no-global-assign","no-unsafe-negation"]