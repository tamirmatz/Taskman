[{"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/index.js":"1","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/serviceWorkerRegistration.js":"2","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/reportWebVitals.js":"3","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/App.jsx":"4","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/store.js":"5","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/routes.js":"6","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/systemReducer.js":"7","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/userReducer.js":"8","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/reviewReducer.js":"9","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/boardReducer.js":"10","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/AppHeader.jsx":"11","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/UserDetails.jsx":"12","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/LoginSignup.jsx":"13","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Board.jsx":"14","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Chat.jsx":"15","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Home.jsx":"16","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/BoardList.jsx":"17","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/userActions.js":"18","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/reviewActions.js":"19","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/boardsAction.js":"20","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/userService.js":"21","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/socketService.js":"22","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/Upload.jsx":"23","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskList.jsx":"24","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/reviewService.js":"25","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/boardService.js":"26","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/httpService.js":"27","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/cloudinaryService.js":"28","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/utilService.js":"29","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/asyncStorageService.js":"30","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskPreview.jsx":"31","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/data/board.js":"32","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalWrapper.jsx":"33","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/Overlay.jsx":"34","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MiniBoard.jsx":"35","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/UserPreview.jsx":"36","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MembersBoard.jsx":"37","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/boardNavbar/BoardNavbar.jsx":"38","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/TaskDetails.jsx":"39","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/CheckList.jsx":"40","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/CheckListStatus.jsx":"41","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/ActionList.jsx":"42","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/LabelModal.jsx":"43","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/MembersModal.jsx":"44","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalAction.jsx":"45","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/OverlayAction.jsx":"46","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/systemAction.js":"47"},{"size":910,"mtime":1610189396000,"results":"48","hashOfConfig":"49"},{"size":5064,"mtime":499155300000,"results":"50","hashOfConfig":"49"},{"size":364,"mtime":499155300000,"results":"51","hashOfConfig":"49"},{"size":515,"mtime":1622208933114,"results":"52","hashOfConfig":"49"},{"size":752,"mtime":1622123464533,"results":"53","hashOfConfig":"49"},{"size":759,"mtime":1622551124075,"results":"54","hashOfConfig":"49"},{"size":322,"mtime":1609063804000,"results":"55","hashOfConfig":"49"},{"size":868,"mtime":1622452229862,"results":"56","hashOfConfig":"49"},{"size":669,"mtime":1609949674000,"results":"57","hashOfConfig":"49"},{"size":668,"mtime":1622215305163,"results":"58","hashOfConfig":"49"},{"size":2631,"mtime":1622452229853,"results":"59","hashOfConfig":"49"},{"size":732,"mtime":1621836072000,"results":"60","hashOfConfig":"49"},{"size":5612,"mtime":1622452229859,"results":"61","hashOfConfig":"49"},{"size":6648,"mtime":1622561767099,"results":"62","hashOfConfig":"49"},{"size":3395,"mtime":1622123464523,"results":"63","hashOfConfig":"49"},{"size":2963,"mtime":1622548245289,"results":"64","hashOfConfig":"49"},{"size":1141,"mtime":1622390182440,"results":"65","hashOfConfig":"49"},{"size":1907,"mtime":1622452229860,"results":"66","hashOfConfig":"49"},{"size":1321,"mtime":1622123464531,"results":"67","hashOfConfig":"49"},{"size":1914,"mtime":1622476476083,"results":"68","hashOfConfig":"49"},{"size":2097,"mtime":1622445084281,"results":"69","hashOfConfig":"49"},{"size":2324,"mtime":1622477414605,"results":"70","hashOfConfig":"49"},{"size":1127,"mtime":1622123464522,"results":"71","hashOfConfig":"49"},{"size":4947,"mtime":1622561767097,"results":"72","hashOfConfig":"49"},{"size":1087,"mtime":1622123464528,"results":"73","hashOfConfig":"49"},{"size":2567,"mtime":1622551124076,"results":"74","hashOfConfig":"49"},{"size":1093,"mtime":1622401206514,"results":"75","hashOfConfig":"49"},{"size":563,"mtime":1622123464526,"results":"76","hashOfConfig":"49"},{"size":3195,"mtime":1622473191343,"results":"77","hashOfConfig":"49"},{"size":2319,"mtime":1622289086771,"results":"78","hashOfConfig":"49"},{"size":5980,"mtime":1622556930156,"results":"79","hashOfConfig":"49"},{"size":298329,"mtime":1622473341850,"results":"80","hashOfConfig":"49"},{"size":158,"mtime":1622292625069,"results":"81","hashOfConfig":"49"},{"size":104,"mtime":1622559883756,"results":"82","hashOfConfig":"49"},{"size":239,"mtime":1622381347337,"results":"83","hashOfConfig":"49"},{"size":456,"mtime":1622452229855,"results":"84","hashOfConfig":"49"},{"size":658,"mtime":1622561767096,"results":"85","hashOfConfig":"49"},{"size":1903,"mtime":1622473341847,"results":"86","hashOfConfig":"49"},{"size":6526,"mtime":1622563475426,"results":"87","hashOfConfig":"49"},{"size":4347,"mtime":1622556090474,"results":"88","hashOfConfig":"49"},{"size":695,"mtime":1622551124099,"results":"89","hashOfConfig":"49"},{"size":2857,"mtime":1622563521986,"results":"90","hashOfConfig":"49"},{"size":1838,"mtime":1622559883754,"results":"91","hashOfConfig":"49"},{"size":2116,"mtime":1622562741595,"results":"92","hashOfConfig":"49"},{"size":213,"mtime":1622559883755,"results":"93","hashOfConfig":"49"},{"size":114,"mtime":1622559883755,"results":"94","hashOfConfig":"49"},{"size":424,"mtime":1622561767108,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1wsars6",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/index.js",[],["196","197"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/serviceWorkerRegistration.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/reportWebVitals.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/App.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/store.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/routes.js",["198","199","200","201"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/systemReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/userReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/reviewReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/boardReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/AppHeader.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/UserDetails.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/LoginSignup.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Board.jsx",["202"],"import { connect } from 'react-redux'\nimport { remove, add, loadBoard, update } from '../store/actions/boardsAction.js';\nimport { loading } from '../store/actions/systemAction';\n\nimport React, { Component } from 'react'\nimport { TaskList } from '../cmps/board/TaskList'\nimport { BoardNavbar } from '../cmps/board/boardNavbar/BoardNavbar'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Route, Switch } from 'react-router';\nimport { TaskDetails } from '../cmps/board/taskDetails/TaskDetails';\nimport { boardService } from '.././services/boardService.js'\nimport { utilService } from '../services/generalService/utilService.js'\nimport { socketService } from '../services/generalService/socketService.js'\nimport { ModalWrapper } from '../cmps/shared/ModalWrapper.jsx';\n\nconst EMPTY_GROUP = { title: '' }\n\nclass _Board extends Component {\n    state = {\n        group: EMPTY_GROUP\n    }\n\n\n    componentDidMount() {\n        const { boardId } = this.props.match.params\n        this.props.loadBoard(boardId);\n        socketService.setup()\n        socketService.on('board updated', () => {\n            console.log('recieved update')\n            this.props.loadBoard()\n        })\n        socketService.emit('add member', boardId)\n    }\n\n    componentWillUnmount() {\n        socketService.off('board updated', this.props.loadBoard)\n        socketService.terminate()\n    }\n\n\n    onUpdate = (updateBoard) => {\n        console.log(updateBoard)\n        this.props.update(updateBoard)\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            group: {\n                ...prevState.group,\n                [field]: value,\n            }\n        }))\n    }\n\n\n    onAddGroup = () => {\n        const copyBoard = { ...this.props.board };\n        this.setState({ group: { ...this.state.group, id: utilService.makeId() } })\n        copyBoard.groups.push(utilService.formatNewGroup(this.state.group))\n        this.props.update(copyBoard)\n        this.setState({ group: EMPTY_GROUP })\n    }\n\n    onDragEnd = res => {\n        console.log()\n        const { destination, source, type } = res\n        if (!destination) return\n        if (destination.droppableId === source.droppableId &&\n            destination.index === source.index) return\n        const copyBoard = { ...this.props.board }\n        const activity = {}\n        if (type === 'task') {\n            const sourceListIdx = boardService.getGroupIdxById(copyBoard, source.droppableId)\n            const destinationListIdx = boardService.getGroupIdxById(copyBoard, destination.droppableId)\n            const task = copyBoard.groups[sourceListIdx].tasks.splice(source.index, 1)\n            copyBoard.groups[destinationListIdx].tasks.splice(destination.index, 0, task[0])\n            const sourceListName = copyBoard.groups[sourceListIdx].title\n            const destinationListName = copyBoard.groups[destinationListIdx].title\n            activity.txt = `has moved ${task[0].title} from ${sourceListName} to ${destinationListName}`\n        }\n        else {\n            console.log('before', copyBoard)\n            const list = copyBoard.groups.splice(source.index, 1)\n            copyBoard.groups.splice(destination.index, 0, list[0])\n            activity.txt = `has moved list ${list[0].title}`\n            console.log('after', copyBoard)\n        }\n        this.props.update(copyBoard)\n    }\n\n    onCloseDetails = () => {\n        this.props.history.push(`/board/${this.props.board._id}`)\n\n    }\n    render() {\n        const { board } = this.props;\n        if (!board) {\n            return <div className=\"loader w-100 h-100 flex center content-center\">Loading...</div>\n        }\n        // loading ui\n        // this.props.loading();\n        // if(this.props.isLoading) return <h1 className=\"w-100 h-100 flex center content-center\">Loading...</h1>\n        if (this.props.isLoading) return <div className=\"loader w-100 h-100 flex center content-center\">Loading...</div>\n\n\n        return (\n            <DragDropContext\n                onDragEnd={this.onDragEnd}\n            >\n                <section className=\"board flex column w-100 animate__animated animate__fadeInRight \">\n                    <BoardNavbar board={board} updateBoard={this.onUpdate} />\n\n                    <div className=\"board-list flex w-100 \"\n\n                    >\n                        <Droppable droppableId=\"all-groups\"\n                            direction=\"horizontal\"\n                            type=\"TaskList\"\n                        >\n                            {provided => (\n                                <ul\n                                    className=\"groups clean-list flex \"\n                                    {...provided.droppableProps}\n                                    ref={provided.innerRef}\n                                >\n                                    {board && board.groups.map((group, idx) => <TaskList index={idx}\n                                        key={group.id}\n                                        board={board}\n                                        group={group}\n                                        updateBoard={this.onUpdate} />)}\n                                    {provided.placeholder}\n                                </ul>\n\n                            )}\n                        </Droppable>\n                        <div className=\"group add-group flex\">\n                            <form onSubmit={(ev) => {\n                                ev.preventDefault()\n                                this.onAddGroup()\n                            }}>\n                                <input className=\"add-group\" value={this.state.group.title} type=\"text\" placeholder=\"+ Add another list\" name=\"title\" onChange={this.handleChange} />\n                            </form>\n                        </div>\n                    </div>\n\n                    <Switch>\n                        <Route path={'/board/:boardId/:groupId/:taskId'} render={(props) => <ModalWrapper onClick={this.onCloseDetails}><TaskDetails {...props} /></ModalWrapper>}></Route>\n                    </Switch>\n                </section>\n            </DragDropContext>\n        )\n    }\n}\n\n// {\n//     path: '/board/:boardId/:taskId',\n//     component: TaskDetails,\n// }\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.board,\n        isLoading: state.systemModule.isLoading\n    }\n}\nconst mapDispatchToProps = {\n    remove,\n    add,\n    loadBoard,\n    update,\n    // loading\n}\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Chat.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Home.jsx",["203","204","205","206","207","208","209","210","211"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/BoardList.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/userActions.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/reviewActions.js",["212","213"],"import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../../services/generalService/socketService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n      // socketService.on(SOCKET_EVENT_REVIEW_ADDED, review =>{\r\n      //   dispatch({ type: 'ADD_REVIEW', review })\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/boardsAction.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/userService.js",["214"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/socketService.js",["215"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/Upload.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskList.jsx",["216"],"import { TaskPreview } from '../board/TaskPreview'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Component } from 'react';\nimport { boardService } from '../../services/boardService.js'\nimport { utilService } from '../../services/generalService/utilService.js'\n\nconst EMPTY_TASK = { title: '' }\nconst EMPTY_GROUP = { title: '' }\nexport class TaskList extends Component {\n    state = {\n        group: EMPTY_GROUP,\n        task: EMPTY_TASK\n    }\n    componentDidMount() {\n        this.setState({ group: this.props.group })\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            task: {\n                ...prevState.task,\n                [field]: value,\n            }\n        }))\n    }\n\n    updateGroup = () => {\n        if (!this.state.group.title) return;\n        const copyBoard = { ...this.props.board };\n        const groupIdx = boardService.getGroupIdxById(copyBoard, this.state.group.id)\n        copyBoard.groups[groupIdx] = this.state.group\n        this.props.updateBoard(copyBoard)\n    }\n\n    handleChangeGroup = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            group: {\n                ...prevState.group,\n                [field]: value,\n            }\n        }))\n    }\n\n    onAddTask = () => {\n        if (!this.state.task.title) return;\n        const { group } = this.props\n        const copyBoard = { ...this.props.board };\n        const groupIdx = boardService.getGroupIdxById(copyBoard, group.id)\n        copyBoard.groups[groupIdx].tasks.push(utilService.formatNewTask(this.state.task))\n        this.props.updateBoard(copyBoard)\n        this.setState({ task: EMPTY_TASK })\n    }\n\n    render() {\n        const { board, group, updateBoard, index } = this.props\n\n        return/*  <div className=\"group-container\"> */(\n            <Draggable index={index} isDragDisabled={false} draggableId={group.id}>\n                {(provided, snapshot) => {\n                    return <li className=\"group pad-4\"\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                        style={{\n                            backgroundColor: snapshot.isDraggingOver ? 'lightblue' : '#EBECF0'\n                        }}\n                    >\n                        <form className=\"mb-06\" onSubmit={(ev) => {\n                            ev.preventDefault()\n                            this.updateGroup()\n\n                        }}>   <input className=\"group-title add-task\" onBlur={this.updateGroup} type=\"text\" value={this.state.group.title} name=\"title\" onChange={this.handleChangeGroup} /></form>\n                        <div className=\"task-list\">\n                            <Droppable key={index} droppableId={group.id} type='task'>\n                                {(provided) => (\n                                    <div ref={provided.innerRef} {...provided.droppableProps}>\n                                        {group.tasks.map((task, idx) => (\n                                            <TaskPreview key={task.id}\n                                                board={board}\n                                                index={idx}\n                                                groupId={group.id}\n                                                updateBoard={updateBoard}\n                                                task={task}\n                                            />\n                                        ))}\n                                        {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n                            <form onSubmit={(ev) => {\n                                ev.preventDefault()\n                                this.onAddTask()\n                                console.log(ev)\n                            }}>\n                                <input className=\"add-task\" value={this.state.task.title} type=\"text\" placeholder=\"+ Add a task\" name=\"title\" onChange={this.handleChange} />\n                            </form>\n                        </div>\n                    </li>\n                }}\n            </Draggable>)\n        /*    </div> */\n    }\n}","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/reviewService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/boardService.js",["217"],"import { utilService } from './generalService/utilService.js'\r\nimport { storageService } from './generalService/asyncStorageService.js'\r\nimport {httpService} from '../services/generalService/httpService.js'\r\n\r\nwindow.storageService = storageService;\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    update,\r\n    add,\r\n    getGroupById,\r\n    getTaskById,\r\n    getGroupIdxById,\r\n    checklistPreview,\r\n    getTaskIdxById,\r\n    checklistPrecent\r\n}\r\n\r\n\r\nfunction query() {\r\n    // return storageService.query(STORAGE_KEY)\r\n    return httpService.get('board')\r\n}\r\n\r\nfunction getById(boardId) {\r\n    // const board = storageService.get(STORAGE_KEY, boardId);\r\n    // return board\r\n    return httpService.get(`board/${boardId}`)\r\n\r\n}\r\n\r\nfunction remove(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function add() {\r\n    // const newBoard = _createBoard()\r\n    // const savedBoard = storageService.post(STORAGE_KEY, newBoard)\r\n    // return savedBoard\r\n    const board = {title: 'new' ,style:{}}\r\n    const res = await httpService.post(`board`, board)\r\n    return res\r\n}\r\n\r\nasync function update(board) {\r\n    // return storageService.put(STORAGE_KEY, board)\r\n    board.activities = []\r\n    \r\n    const res = await httpService.put(`board/${board._id}`, board)\r\n    return res\r\n\r\n}\r\n\r\n//task crud\r\nfunction getGroupById(board, groupId) {\r\n    return board.groups.find(group => group.id === groupId);\r\n}\r\n\r\nfunction getGroupIdxById(board, groupId) {\r\n    return board.groups.findIndex(group => group.id === groupId);\r\n}\r\n\r\nfunction getTaskIdxById(group, taskId) {\r\n    return group.tasks.findIndex(task => task.id === taskId);\r\n}\r\n\r\nfunction getTaskById(group, taskId) {\r\n    return group.tasks.find(task => task.id === taskId)\r\n}\r\n\r\nfunction checklistPreview(task) {\r\n    const checklists = task.checklists\r\n    let isDone = false\r\n    let allTodos = 0;\r\n    let doneTodos = 0;\r\n    checklists.forEach(checkList => {\r\n        allTodos += checkList.todos.length;\r\n        checkList.todos.forEach(todo => {\r\n            if (todo.isDone) doneTodos++\r\n        })\r\n    });\r\n    if (doneTodos === allTodos && allTodos) isDone = true;\r\n    const str = `${doneTodos}/${allTodos}`\r\n    const res = { str, isDone}\r\n    return res\r\n}\r\n\r\nfunction checklistPrecent(checklist){\r\n    let doneTodos = 0;\r\n    checklist.todos.forEach(todo => {\r\n        if(todo.isDone) doneTodos++\r\n    })\r\n    const precent = (doneTodos / checklist.todos.length) * 100 \r\n    console.log('doneTodos',checklist.todos.length);\r\n    \r\n    return precent\r\n}","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/httpService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/cloudinaryService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/utilService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/asyncStorageService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskPreview.jsx",["218","219","220","221","222","223","224","225"],"import { Link } from 'react-router-dom'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Provider } from 'react-redux';\nimport { boardService } from '../../services/boardService.js'\nimport { BsCheckBox } from 'react-icons/bs'\nimport { FaRegCommentDots } from 'react-icons/fa'\nimport { AiOutlineClockCircle } from 'react-icons/ai'\nimport { GrTextAlignFull } from 'react-icons/gr'\nimport { utilService } from '../../services/generalService/utilService'\nimport React, { Component } from 'react'\n\n\n\n// export function TaskPreview({ board, index, task, updateBoard, groupId }) {\nexport class TaskPreview extends Component {\n    state = {\n        isLabelOpen: false\n    }\n\n    toggleLabels = () => {\n        document.querySelectorAll('.preview-label').forEach(label => {\n            label.classList.toggle('label-open');\n        });;\n        this.setState({ isLabelOpen: !this.state.isLabelOpen })\n    }\n\n    getStyle = (style, snapshot) => {\n        if (!snapshot.isDropAnimating) {\n            return style;\n        }\n        const { moveTo, curve, duration } = snapshot.dropAnimation;\n        // move to the right spot\n        const translate = `translate(${moveTo.x}px, ${moveTo.y}px)`;\n        // add a bit of turn for fun\n        const rotate = 'rotate(0.01turn)';\n\n        // patching the existing style\n        return {\n            ...style,\n            background: '#fff',\n            transform: `${translate} ${rotate}`,\n            // slowing down the drop because we can\n            transition: `all ${curve} 0.2s`,\n        };\n    }\n\n    onRemoveTask = (taskId) => {\n        const { board, index, task, updateBoard, groupId } = this.props\n        const group = board.groups[boardService.getGroupIdxById(board, groupId)]\n        board.groups[boardService.getGroupIdxById(board, groupId)].tasks.splice(boardService.getTaskIdxById(group, taskId), 1)\n        updateBoard({ ...board })\n    }\n    render() {\n        const { board, index, task, updateBoard, groupId } = this.props\n        return <Draggable\n            draggableId={task.id}\n            index={index}\n            isDragDisabled={false}\n        >\n            {(provided, snapshot) => (\n                <div\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                    isDragging={snapshot.isDragging && !snapshot.isDropAnimating}\n                    style={this.getStyle(provided.draggableProps.style, snapshot)}\n                >\n                    <div className=\"wrap-list-task br-3\">\n                        <div className=\"wrap-task-prev\">\n                            <div className=\"task-preview flex column\">\n                                {/* <Link to={`/board/${board._id}/${task.id}`}> */}\n                                <div className=\"flex row space-between center w-100\">\n                                    <div className=\"label-task-prev\">\n                                        {utilService.isFalse(task.labelIds) &&\n                                            <div className=\"labels-container wrap flex\" onClick={(ev) => {\n                                                ev.stopPropagation();\n                                            }}>\n                                                {task.labelIds.map(labelId => {\n\n                                                    const label = board.labels.find(label => {\n                                                        return label.id === labelId;\n                                                    })\n\n                                                    if (label)\n                                                        return <div className={`preview-label ${this.state.isLabelOpen && \"label-open\"}`} onClick={this.toggleLabels} style={{ backgroundColor: label.color }}>\n                                                            {this.state.isLabelOpen && label.title}\n                                                        </div>\n                                                })}</div>}\n                                    </div>\n                                    <span className=\"cur-pointer fam-1 bold\" onClick={() => { this.onRemoveTask(task.id) }}>X</span>\n                                </div>\n\n                                <Link to={`/board/${board._id}/${groupId}/${task.id}`}>\n\n\n                                    <h1 className=\"task-title fam-1 font-m\">{task.title}</h1>\n                                    <div className=\"flex w-100 content-start  gap-xs font-s fam-1 c-stand\">\n                                        {utilService.isFalse(task.comments) && <small className=\"flex center\"><FaRegCommentDots /></small>}\n                                        {utilService.isFalse(task.checklists) && <div className={`flex row center ${boardService.checklistPreview(task).isDone && \"check-list-done-prev\"}`}>\n                                            <BsCheckBox />\n                                            <small>{boardService.checklistPreview(task).str}</small>\n                                        </div>}\n                                        {task.dueDate && <div className=\"flex row center\">\n                                            <AiOutlineClockCircle />\n                                            <small>\n                                                {utilService.timeAgo(task.dueDate)}\n                                            </small>\n                                        </div>}\n                                        {task.description && <small className=\"flex center\"><GrTextAlignFull /></small>}\n                                    </div>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n            }\n        </Draggable>\n    }\n}","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/data/board.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalWrapper.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/Overlay.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MiniBoard.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/UserPreview.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MembersBoard.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/boardNavbar/BoardNavbar.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/TaskDetails.jsx",["226","227","228"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/CheckList.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/CheckListStatus.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/ActionList.jsx",["229","230"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/LabelModal.jsx",["231"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/MembersModal.jsx",["232"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalAction.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/OverlayAction.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/systemAction.js",["233"],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":14},{"ruleId":"238","severity":1,"message":"242","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":21},{"ruleId":"238","severity":1,"message":"243","line":7,"column":10,"nodeType":"240","messageId":"241","endLine":7,"endColumn":15},{"ruleId":"238","severity":1,"message":"244","line":8,"column":10,"nodeType":"240","messageId":"241","endLine":8,"endColumn":21},{"ruleId":"238","severity":1,"message":"245","line":8,"column":27,"nodeType":"240","messageId":"241","endLine":8,"endColumn":36},{"ruleId":"238","severity":1,"message":"246","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":17},{"ruleId":"238","severity":1,"message":"247","line":7,"column":10,"nodeType":"240","messageId":"241","endLine":7,"endColumn":21},{"ruleId":"238","severity":1,"message":"248","line":7,"column":23,"nodeType":"240","messageId":"241","endLine":7,"endColumn":32},{"ruleId":"238","severity":1,"message":"249","line":7,"column":34,"nodeType":"240","messageId":"241","endLine":7,"endColumn":46},{"ruleId":"238","severity":1,"message":"250","line":8,"column":10,"nodeType":"240","messageId":"241","endLine":8,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":41,"column":11,"nodeType":"253","endLine":41,"endColumn":57},{"ruleId":"251","severity":1,"message":"252","line":51,"column":11,"nodeType":"253","endLine":51,"endColumn":64},{"ruleId":"251","severity":1,"message":"252","line":60,"column":11,"nodeType":"253","endLine":60,"endColumn":60},{"ruleId":"251","severity":1,"message":"252","line":68,"column":11,"nodeType":"253","endLine":68,"endColumn":60},{"ruleId":"238","severity":1,"message":"254","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":23},{"ruleId":"238","severity":1,"message":"255","line":3,"column":25,"nodeType":"240","messageId":"241","endLine":3,"endColumn":50},{"ruleId":"238","severity":1,"message":"256","line":3,"column":7,"nodeType":"240","messageId":"241","endLine":3,"endColumn":23},{"ruleId":"238","severity":1,"message":"257","line":43,"column":7,"nodeType":"240","messageId":"241","endLine":43,"endColumn":20},{"ruleId":"238","severity":1,"message":"258","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":25},{"ruleId":"238","severity":1,"message":"259","line":1,"column":10,"nodeType":"240","messageId":"241","endLine":1,"endColumn":21},{"ruleId":"238","severity":1,"message":"258","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":25},{"ruleId":"238","severity":1,"message":"260","line":2,"column":38,"nodeType":"240","messageId":"241","endLine":2,"endColumn":47},{"ruleId":"238","severity":1,"message":"261","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":18},{"ruleId":"238","severity":1,"message":"262","line":31,"column":32,"nodeType":"240","messageId":"241","endLine":31,"endColumn":40},{"ruleId":"238","severity":1,"message":"263","line":48,"column":24,"nodeType":"240","messageId":"241","endLine":48,"endColumn":29},{"ruleId":"238","severity":1,"message":"264","line":48,"column":31,"nodeType":"240","messageId":"241","endLine":48,"endColumn":35},{"ruleId":"238","severity":1,"message":"265","line":54,"column":37,"nodeType":"240","messageId":"241","endLine":54,"endColumn":48},{"ruleId":"266","severity":1,"message":"267","line":78,"column":76,"nodeType":"268","messageId":"269","endLine":78,"endColumn":78},{"ruleId":"238","severity":1,"message":"270","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":14},{"ruleId":"238","severity":1,"message":"271","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":129,"column":33,"nodeType":"253","endLine":129,"endColumn":89},{"ruleId":"238","severity":1,"message":"270","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"272","line":2,"column":16,"nodeType":"240","messageId":"241","endLine":2,"endColumn":23},{"ruleId":"238","severity":1,"message":"271","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":40,"column":37,"nodeType":"253","endLine":40,"endColumn":82},{"ruleId":"238","severity":1,"message":"259","line":1,"column":10,"nodeType":"240","messageId":"241","endLine":1,"endColumn":21},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-unused-vars","'Chat' is defined but never used.","Identifier","unusedVar","'UserDetails' is defined but never used.","'Login' is defined but never used.","'TaskDetails' is defined but never used.","'Draggable' is defined but never used.","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'socketService' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.","'socketIsReady' is assigned a value but never used.","'DragDropContext' is defined but never used.","'utilService' is defined but never used.","'Droppable' is defined but never used.","'Provider' is defined but never used.","'duration' is assigned a value but never used.","'index' is assigned a value but never used.","'task' is assigned a value but never used.","'updateBoard' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Link' is defined but never used.","'onClickOutside' is defined but never used.","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation"]