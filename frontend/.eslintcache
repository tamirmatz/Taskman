[{"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/index.js":"1","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/serviceWorkerRegistration.js":"2","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/reportWebVitals.js":"3","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/store.js":"4","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/App.jsx":"5","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/reducers/userReducer.js":"6","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/reducers/systemReducer.js":"7","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/reducers/reviewReducer.js":"8","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/reducers/boardReducer.js":"9","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/routes.js":"10","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/AppHeader.jsx":"11","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/Login.jsx":"12","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/Home.jsx":"13","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/UserDetails.jsx":"14","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/Board.jsx":"15","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/Chat.jsx":"16","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/BoardList.jsx":"17","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/actions/reviewActions.js":"18","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/actions/boardsAction.js":"19","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/actions/userActions.js":"20","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/userService.js":"21","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/boardService.js":"22","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/shared/ModalWrapper.jsx":"23","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/generalService/utilService.js":"24","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/generalService/socketService.js":"25","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/UserPreview.jsx":"26","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/actions/systemAction.js":"27","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/Upload.jsx":"28","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/TaskList.jsx":"29","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/Dashboard.jsx":"30","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/MiniBoard.jsx":"31","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/calendar.jsx":"32","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/generalService/httpService.js":"33","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/generalService/asyncStorageService.js":"34","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/boardNavbar/BoardNavbar.jsx":"35","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/TaskDetails.jsx":"36","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/reviewService.js":"37","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/shared/Overlay.jsx":"38","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/data/board.js":"39","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/generalService/cloudinaryService.js":"40","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/TaskPreview.jsx":"41","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/boardNavbar/InfoBoardModal.jsx":"42","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/MembersBoard.jsx":"43","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/boardNavbar/BoardMembersModal.jsx":"44","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/dashboard/ChartLabelsTasks.jsx":"45","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/dashboard/ChartGroupsTasks.jsx":"46","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/dashboard/ChartMembersTasks.jsx":"47","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/CheckList.jsx":"48","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/ActionList.jsx":"49","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/GroupModal.jsx":"50","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/shared/ModalAction.jsx":"51","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/LabelModal.jsx":"52","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/DueDateModal.jsx":"53","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/CheckListStatus.jsx":"54","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/MembersModal.jsx":"55","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/CopyModal.jsx":"56","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/MoveModal.jsx":"57","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/OverlayAction.jsx":"58","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/LabelTask.jsx":"59"},{"size":910,"mtime":1623055307903,"results":"60","hashOfConfig":"61"},{"size":5064,"mtime":1623055307907,"results":"62","hashOfConfig":"61"},{"size":364,"mtime":1623055307905,"results":"63","hashOfConfig":"61"},{"size":752,"mtime":1623055307912,"results":"64","hashOfConfig":"61"},{"size":515,"mtime":1623055307783,"results":"65","hashOfConfig":"61"},{"size":900,"mtime":1623062518503,"results":"66","hashOfConfig":"61"},{"size":426,"mtime":1623055307912,"results":"67","hashOfConfig":"61"},{"size":669,"mtime":1623055307912,"results":"68","hashOfConfig":"61"},{"size":668,"mtime":1623055307911,"results":"69","hashOfConfig":"61"},{"size":605,"mtime":1623055307906,"results":"70","hashOfConfig":"61"},{"size":6463,"mtime":1623055307891,"results":"71","hashOfConfig":"61"},{"size":5447,"mtime":1623055307905,"results":"72","hashOfConfig":"61"},{"size":3024,"mtime":1623055307904,"results":"73","hashOfConfig":"61"},{"size":1405,"mtime":1623055307905,"results":"74","hashOfConfig":"61"},{"size":9292,"mtime":1623063758218,"results":"75","hashOfConfig":"61"},{"size":3395,"mtime":1623055307903,"results":"76","hashOfConfig":"61"},{"size":5493,"mtime":1623055307903,"results":"77","hashOfConfig":"61"},{"size":1321,"mtime":1623055307910,"results":"78","hashOfConfig":"61"},{"size":2863,"mtime":1623063758221,"results":"79","hashOfConfig":"61"},{"size":1966,"mtime":1623055307911,"results":"80","hashOfConfig":"61"},{"size":2097,"mtime":1623055307910,"results":"81","hashOfConfig":"61"},{"size":3439,"mtime":1623055307908,"results":"82","hashOfConfig":"61"},{"size":193,"mtime":1623055307899,"results":"83","hashOfConfig":"61"},{"size":4394,"mtime":1623066831275,"results":"84","hashOfConfig":"61"},{"size":2324,"mtime":1623055307909,"results":"85","hashOfConfig":"61"},{"size":515,"mtime":1623055307893,"results":"86","hashOfConfig":"61"},{"size":725,"mtime":1623055307911,"results":"87","hashOfConfig":"61"},{"size":1709,"mtime":1623055307891,"results":"88","hashOfConfig":"61"},{"size":6663,"mtime":1623062518500,"results":"89","hashOfConfig":"61"},{"size":2900,"mtime":1623066831274,"results":"90","hashOfConfig":"61"},{"size":530,"mtime":1623055307892,"results":"91","hashOfConfig":"61"},{"size":671,"mtime":1623055307905,"results":"92","hashOfConfig":"61"},{"size":1093,"mtime":1623055307908,"results":"93","hashOfConfig":"61"},{"size":2286,"mtime":1623055307908,"results":"94","hashOfConfig":"61"},{"size":13321,"mtime":1623055307893,"results":"95","hashOfConfig":"61"},{"size":21197,"mtime":1623055307895,"results":"96","hashOfConfig":"61"},{"size":1087,"mtime":1623055307909,"results":"97","hashOfConfig":"61"},{"size":313,"mtime":1623055307899,"results":"98","hashOfConfig":"61"},{"size":298329,"mtime":1623055307902,"results":"99","hashOfConfig":"61"},{"size":634,"mtime":1623055307908,"results":"100","hashOfConfig":"61"},{"size":7634,"mtime":1623055307892,"results":"101","hashOfConfig":"61"},{"size":1991,"mtime":1623062518501,"results":"102","hashOfConfig":"61"},{"size":820,"mtime":1623055307892,"results":"103","hashOfConfig":"61"},{"size":2193,"mtime":1623055307893,"results":"104","hashOfConfig":"61"},{"size":2391,"mtime":1623066831273,"results":"105","hashOfConfig":"61"},{"size":2004,"mtime":1623066831272,"results":"106","hashOfConfig":"61"},{"size":2520,"mtime":1623066831273,"results":"107","hashOfConfig":"61"},{"size":5340,"mtime":1623061155150,"results":"108","hashOfConfig":"61"},{"size":4553,"mtime":1623062518502,"results":"109","hashOfConfig":"61"},{"size":3033,"mtime":1623055307896,"results":"110","hashOfConfig":"61"},{"size":213,"mtime":1623055307899,"results":"111","hashOfConfig":"61"},{"size":1671,"mtime":1623055307897,"results":"112","hashOfConfig":"61"},{"size":1617,"mtime":1623055307896,"results":"113","hashOfConfig":"61"},{"size":647,"mtime":1623055307895,"results":"114","hashOfConfig":"61"},{"size":2244,"mtime":1623055307897,"results":"115","hashOfConfig":"61"},{"size":2896,"mtime":1623055307896,"results":"116","hashOfConfig":"61"},{"size":3090,"mtime":1623055307897,"results":"117","hashOfConfig":"61"},{"size":127,"mtime":1623055307897,"results":"118","hashOfConfig":"61"},{"size":4324,"mtime":1623062518502,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5e33ms",{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"133"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"133"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"133"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"133"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"133"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"133"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"133"},"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/index.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/serviceWorkerRegistration.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/reportWebVitals.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/store.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/App.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/reducers/userReducer.js",["247"],"let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\nconst defUser = {\r\n  \"_id\": \"60b8a7f7f2ba7731f277d924\",\r\n  \"username\": \"abi@ababmi.com\",\r\n  \"fullname\": \"Tamir Matz\",\r\n  \"email\" : \"tamirmatz@gmail.com\",\r\n  \"password\": \"aBambi123\",\r\n  \"imgUrl\":\"https://res.cloudinary.com/dxsv4c229/image/upload/v1622708295/download_rjc2b5.jpg\",\r\n}\r\n\r\n\r\nconst initialState = {\r\n  loggedInUser: defUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n",["248","249"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/reducers/systemReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/reducers/reviewReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/reducers/boardReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/routes.js",["250"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/AppHeader.jsx",["251"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/Login.jsx",["252"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/Home.jsx",["253","254","255","256","257","258","259","260","261"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/UserDetails.jsx",["262","263","264"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/Board.jsx",["265","266"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/Chat.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/BoardList.jsx",["267","268","269"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/actions/reviewActions.js",["270","271"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/actions/boardsAction.js",["272"],"import { boardService } from '../../services/boardService'\nimport { socketService } from '../../services/generalService/socketService'\nimport { utilService } from '../../services/generalService/utilService'\n\nexport function query() { // Action Creator\n    return async dispatch => {\n        const boards = await boardService.query()\n        const action = {\n            type: 'SET_BOARDS',\n            boards\n        }\n        dispatch(action)\n    }\n}\n\nexport function loadBoard(boardId) { // Action Creator\n\n    return async dispatch => {\n        const board = await boardService.getById(boardId);\n        board.labels = [\n            {id: \"l101\", title: \"Tamir\", color: \"#fc5c65\"},\n            {id: \"l102\", title: \"Nadav\", color: \"#fd9644\"},\n            {id: \"l103\", title: \"Harel\", color: \"#fed330\"},\n            {id: \"l104\", title: \"Done\", color: \"#26de81\"},\n            {id: \"l105\", title: \"Help\", color: \"#45aaf2\"},\n            {id: \"l106\", title: \"QA\", color: \"#4b7bec\"},\n            {id: \"l107\", title: \"UI\", color: \"#a55eea\"},\n            {id: \"l108\", title: \"Dev\", color: \"#778ca3\"},\n            ]\n        const action = {\n            type: 'SET_BOARD',\n            board\n        }\n        dispatch(action)\n    }\n}\n\nexport function setBoard(board) { \n    return async dispatch => {\n        const action = {\n            type: 'SET_BOARD',\n            board\n        }\n        dispatch(action)\n    }\n}\n\n\n\n\nexport function remove(boardId) {\n    return async dispatch => {\n        try {\n            await boardService.remove(boardId)\n            const action = {\n                type: 'REMOVE_BOARD',\n                boardId\n            }\n            dispatch(action)\n        } catch (err) {\n            console.log('BoardActions: err in removeBoard', err)\n        }\n    }\n}\n\n\nexport function update(board,activity) {\n    // Action Creator\n    return async dispatch => {\n        try {      \n            const copyBoard = utilService.deepClone(board)\n            copyBoard.activities.unshift(activity)\n            const action = {\n                type: 'UPDATE_BOARD',\n                updatedBoard: copyBoard\n            }\n            dispatch(action)\n\n            delete board.activities\n            socketService.emit('update board',copyBoard)\n            const updatedBoard = await boardService.update(board,activity)\n        } catch (err){\n            console.log('BoardActions: err in update board', err)\n        }\n    }\n}\n\nexport function add(title, background) {\n    // Action Creator\n    return async dispatch => {\n        try {\n            const newBoard = await boardService.add(title,background)          \n            const action = {\n                type: 'ADD_BOARD',\n                board: newBoard\n            }\n            dispatch(action)\n        } catch (err){\n            console.log('BoardActions: err in addBoard', err)\n        }\n    }\n}\n","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/actions/userActions.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/userService.js",["273"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/boardService.js",["274","275","276","277"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/shared/ModalWrapper.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/generalService/utilService.js",["278","279"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/generalService/socketService.js",["280"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/UserPreview.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/store/actions/systemAction.js",["281"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/Upload.jsx",["282","283"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/TaskList.jsx",["284","285"],"import { TaskPreview } from '../board/TaskPreview'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Component } from 'react';\nimport { boardService } from '../../services/boardService.js'\nimport { utilService } from '../../services/generalService/utilService.js'\nimport { GroupModal } from './taskDetails/action/actionModal/GroupModal'\nconst EMPTY_TASK = { title: '' }\nconst EMPTY_GROUP = { title: '' }\n\nexport class TaskList extends Component {\n    state = {\n        group: EMPTY_GROUP,\n        task: EMPTY_TASK\n    }\n    componentDidMount() {\n        this.setState({ group: this.props.group })\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            task: {\n                ...prevState.task,\n                [field]: value,\n            }\n        }))\n    }\n\n    updateGroup = () => {\n        if (!this.state.group.title) return;\n        const copyBoard = { ...this.props.board };\n        this.props.updateBoard(copyBoard)\n        const groupIdx = boardService.getGroupIdxById(copyBoard, this.state.group.id)\n        copyBoard.groups[groupIdx] = this.state.group\n        console.log(copyBoard)\n    }\n\n    handleChangeGroup = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            group: {\n                ...prevState.group,\n                [field]: value,\n            }\n        }))\n    }\n\n    onAddTask = () => {\n        if (!this.state.task.title) return;\n        const { group } = this.props\n        const copyBoard = { ...this.props.board };\n        const groupIdx = boardService.getGroupIdxById(copyBoard, group.id)\n        copyBoard.groups[groupIdx].tasks.push(utilService.formatNewTask(this.state.task))\n        console.log(this.state.task)\n        this.setState({ task: EMPTY_TASK })\n        this.props.updateBoard(copyBoard)\n    }\n\n    toggleModal = (className) => {\n        const modals = document.querySelectorAll('.action-modal');\n        const currModal = document.querySelector(`.${className}`);\n        if (modals) {\n            modals.forEach(\n                el => el.classList.add('d-none'));\n        }\n        if (currModal) {\n            currModal.classList.remove('d-none');\n        }\n    }\n\n    render() {\n        const { board, group, updateBoard, index } = this.props\n\n        return (\n            <Draggable index={index} draggableId={group.id} >\n                {(provided, snapshot) => {\n                    return <li className=\"group br-3\"\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                    >\n                        <form className=\"\" onSubmit={(ev) => {\n                            ev.preventDefault()\n                            this.updateGroup()\n\n                        }}>\n                            <div style={{ backgroundColor: group.color ? group.color : 'transparent' }} className=\"group-title w-100 flex center space-between pb-2\">\n                                <input\n                                    autoComplete=\"off\"\n                                    className=\"app-input font-w2 font-m lh-20 \"\n                                    onBlur={this.updateGroup}\n                                    type=\"text\"\n                                    value={this.state.group.title}\n                                    name=\"title\"\n                                    onChange={this.handleChangeGroup}\n                                />\n                                <div className=\"group-menu\" >\n                                    <div className=\"btn\" onMouseDown={(ev) => {\n                                        if (ev.button == 0) {\n                                            this.toggleModal(`g-${this.state.group.id}`)\n                                        }\n                                    }\n                                    }\n                                    >...</div>\n                                    <GroupModal\n                                        toggleModal={() => { this.toggleModal() }}\n                                        group={group}\n                                    />\n                                </div>\n                            </div>\n                        </form>\n                        <div className=\"wrap-task-list pad-001\">\n\n                            <div className=\"task-list flex column center \">\n                                <Droppable\n                                    droppableId={group.id}\n                                    type='task'>\n                                    {(provided) => (\n                                        <div className=\"task-list-droppable\"\n                                            ref={provided.innerRef}\n                                            {...provided.droppableProps}\n                                        >\n                                            {group.tasks.map((task, idx) => (\n                                                <TaskPreview key={task.id}\n                                                    board={board}\n                                                    index={idx}\n                                                    groupId={group.id}\n                                                    updateBoard={updateBoard}\n                                                    task={task}\n                                                    group={group}\n                                                />\n                                            ))}\n                                            {!utilService.isFalse(group.tasks) && <h1 className=\"task-title fam-1 font-m\">No tasks to show</h1>}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                            </div>\n                            <form onSubmit={(ev) => {\n                                ev.preventDefault()\n                                this.onAddTask()\n                                console.log(ev)\n                            }}>\n                                <input autoComplete=\"off\" className=\"add-task\" value={this.state.task.title} type=\"text\" placeholder=\"+ Add a card\" name=\"title\" onChange={this.handleChange} />\n                            </form>\n                        </div>\n                    </li>\n                }}\n            </Draggable>)\n        /*    </div> */\n    }\n}","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/Dashboard.jsx",["286","287","288"],"import React, { Component } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { ChartMembersTasks } from '../cmps/dashboard/ChartMembersTasks';\nimport { ChartLabelsTasks } from '../cmps/dashboard/ChartLabelsTasks';\nimport { ChartGroupsTasks } from '../cmps/dashboard/ChartGroupsTasks';\nimport { withRouter } from \"react-router\";\nimport { boardService } from '../services/boardService'\n\n\n\nclass _Dashboard extends Component {\n    state = {\n        board: null,\n        tasks: null,\n        groups: null,\n        membersBoard: null,\n        labelsBoard: null\n    }\n\n    componentDidMount() {\n        const board = this.props.board;\n        console.log(board);\n        const tasks = boardService.getTasks(board.groups);\n        const groups = board.groups;\n        const membersBoard = board.members;\n        const labelsBoard = board.labels;\n\n        this.setState({\n            ...this.state,\n            board: board,\n            groups: groups,\n            tasks: tasks,\n            membersBoard: membersBoard,\n            labelsBoard: labelsBoard\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n\n    }\n    checkDataExist() {\n        const { board, groups, tasks, membersBoard, labelsBoard } = this.state;\n        return board && groups && tasks && membersBoard && labelsBoard;\n    }\n\n    render() {\n        const { board, groups, tasks, membersBoard, labelsBoard } = this.state;\n        if (!this.checkDataExist()) return <h1>Loading...</h1>\n        return <div className=\"dashboard w-100 h-100 flex column center space-between pb-1\">\n            <div className=\"w-100 flex space-evenly \">\n                <div className=\"dashboard flex column center content-center\">\n                    <p className=\"font-1 fam-1 c-white\">Tasks Per Staff</p>\n                    <ChartMembersTasks membersBoard={membersBoard} tasks={tasks} />\n                </div>\n                <div className=\"dashboard flex column center content-center\">\n                    <p className=\"font-1 fam-1 c-white\">Tasks Per Label</p>\n                    <ChartLabelsTasks labelsBoard={labelsBoard} tasks={tasks} />\n                </div>\n                <div className=\"dashboard flex column center content-center\">\n                    <p className=\"font-1 fam-1 c-white\">Tasks Per Groups</p>\n                    <ChartGroupsTasks groups={groups} tasks={tasks} />\n                </div>\n            </div>\n            <div className=\"w-100 flex space-evenly\">\n\n            </div>\n            <div className=\"w-100 flex space-evenly\">\n\n            </div>\n        </div>\n    }\n\n}\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n\n}\n\n\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Dashboard))","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/MiniBoard.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/pages/calendar.jsx",["289","290"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/generalService/httpService.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/generalService/asyncStorageService.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/boardNavbar/BoardNavbar.jsx",["291","292"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/TaskDetails.jsx",["293","294","295","296","297","298","299","300"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/reviewService.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/shared/Overlay.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/data/board.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/services/generalService/cloudinaryService.js",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/TaskPreview.jsx",["301","302","303","304","305","306"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/boardNavbar/InfoBoardModal.jsx",["307","308"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { ModalAction } from '../../shared/ModalAction';\nimport { AiOutlineClose } from 'react-icons/ai'\nimport { Link } from 'react-router-dom';\nimport { BsCalendar } from 'react-icons/bs'\nimport { BiBarChartAlt2 } from 'react-icons/bi'\nimport { RiDashboardLine } from 'react-icons/ri'\n\n\n\n\n\nclass _InfoBoardModal extends Component {\n\n    render() {\n        const { board } = this.props;\n        return <div className=\"action-modal info-board-wrap-modal d-none p-abs flex\">\n            <ModalAction>\n                <div className=\"info-board-modal p-abs flex column center bg-white c-stand z-1 br-3 h-50\">\n                    <span className=\"cur-pointer fam-1 font-m bold flex w-100 content-end\" onClick={() => { this.props.toggleModal() }}><AiOutlineClose /></span>\n                    <div className=\"action-content font-m \">\n                        <ul className=\"flex column h-100 w-100\">\n                            <li\n                                onClick={() => { this.props.changeDisplay('board') }}>\n                                <RiDashboardLine />Board\n                            </li>\n                            <li \n                                onClick={() => { this.props.changeDisplay('dashboard') }}>\n                                <BiBarChartAlt2 />Dashboard\n                            </li>\n                            <li\n                                onClick={() => { this.props.changeDisplay('calendar') }}>\n                                 <BsCalendar /> Calender</li>\n                        </ul>\n                    </div>\n                </div>\n            </ModalAction>\n        </div>\n    }\n\n\n}\nconst mapStateToProps = state => {\n    return {\n        loggedInUser: state.userModule.loggedInUser,\n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n\n}\n\n\nexport const InfoBoardModal = connect(mapStateToProps, mapDispatchToProps)(_InfoBoardModal)","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/MembersBoard.jsx",["309"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/boardNavbar/BoardMembersModal.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/dashboard/ChartLabelsTasks.jsx",["310","311"],"import { Component } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { connect } from 'react-redux';\nimport { utilService } from '../../services/generalService/utilService'\n\n// import { add, loadBoard, update, setBoard, remove } from '../store/actions/boardsAction.js';\n\n\n\nclass _ChartLabelsTasks extends Component {\n    state = {\n        tasks: null,\n        labels: null\n    }\n\n    componentDidMount() {\n        this.setState({\n            ...this.state,\n            tasks: this.props.tasks,\n            labels: this.props.labelsBoard\n        })\n    }\n\n    mapLabelsTask = (labels, tasks) => {\n\n        const mapObj = {};\n        if (labels && tasks) {\n            labels.forEach(label => {\n                mapObj[`${label.title}`] = 0;\n                console.log(mapObj);\n                tasks.forEach(task => {\n                    if (task.labelIds) {\n                        task.labelIds.forEach(labelId => {\n                            if (labelId === label.id) {\n                                mapObj[`${label.title}`]++;\n                            }\n                        })\n                    }\n                })\n            });\n            return mapObj;\n        }\n\n    }\n\n    render() {\n        const { tasks, labels } = this.state;\n        if (!tasks || !labels) return <h1>Loading...</h1>\n        const mapLabelsTask = this.mapLabelsTask(labels, tasks);\n        const backgroundColorDashboard = [];\n        const backgroundColorBorder = [];\n\n        labels.forEach( label => {\n            backgroundColorDashboard.push(label.color);\n        })\n        const data = {\n            labels: Object.keys(mapLabelsTask),\n            datasets: [\n                {\n                    label: 'Task per Member',\n                    data: Object.values(mapLabelsTask),\n\n                    backgroundColor: backgroundColorDashboard,\n                    borderColor: [\n                        '#95a5a6',\n                    ],\n                    borderWidth: 0.5,\n                },\n            ],\n        };\n        return (\n            <div className=\"category-chart\">\n                <Pie data={data} />\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n\n}\nexport const ChartLabelsTasks = connect(mapStateToProps, mapDispatchToProps)(_ChartLabelsTasks)","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/dashboard/ChartGroupsTasks.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/dashboard/ChartMembersTasks.jsx",["312"],"import { Component } from 'react';\nimport { Bar     } from 'react-chartjs-2';\nimport { connect } from 'react-redux';\nimport {utilService} from '../../services/generalService/utilService'\n\n// import { add, loadBoard, update, setBoard, remove } from '../store/actions/boardsAction.js';\n\n\n\nclass _ChartMembersTasks extends Component {\n    state = {\n        tasks: null,\n        members: null\n    }\n\n    componentDidMount() {\n        this.setState({\n            ...this.state,\n            tasks: this.props.tasks,\n            members: this.props.membersBoard\n        })\n    }\n\n    mapMembersTask = (members,tasks) => {\n\n        const mapObj = {};\n        members.forEach( member => {\n            mapObj[`${member.fullname}`] = 0;\n            console.log(mapObj);\n            tasks.forEach( task => {\n                task.members.forEach( currMember => {\n                    if(currMember.fullname === member.fullname){\n                        mapObj[`${member.fullname}`]++;\n                    }\n                })\n            })\n        });\n        return mapObj;\n        \n    }\n    \n\n    render() {\n        const {tasks, members} = this.state;\n        if(!tasks || !members) return <h1>Loading...</h1>\n        const mapMembersTask = this.mapMembersTask(members,tasks);\n        const backgroundColor = [];\n        const borderColor = [];\n\n        utilService.randColor(Object.keys(mapMembersTask).length).forEach( color => {\n            backgroundColor.push(color[0]);\n            borderColor.push(color[1]);\n        });\n\n        const data = {\n            labels: Object.keys(mapMembersTask),\n            datasets: [\n                {\n                    label: '',\n                    data: Object.values(mapMembersTask),\n                    backgroundColor: backgroundColor,\n                    borderColor: borderColor,\n                    borderWidth: 0.5,\n                },\n            ],\n        };\n\n        const options = {\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              ],\n            },\n          };\n\n          \n\n        return (\n            <div className=\"category-chart\">\n                <Bar data={data} />\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n\n}\nexport const ChartMembersTasks = connect(mapStateToProps, mapDispatchToProps)(_ChartMembersTasks)","/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/CheckList.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/ActionList.jsx",["313","314","315"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/GroupModal.jsx",["316","317","318","319"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/shared/ModalAction.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/LabelModal.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/DueDateModal.jsx",["320"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/CheckListStatus.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/MembersModal.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/CopyModal.jsx",["321","322"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/MoveModal.jsx",["323","324"],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/actionModal/OverlayAction.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4 new/Taskman/frontend/src/cmps/board/taskDetails/action/LabelTask.jsx",["325","326","327","328","329"],"import React, { Component } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { FiEdit2 } from 'react-icons/fi'\nimport { withRouter } from \"react-router\";\nimport { update } from '../../../../store/actions/boardsAction';\nimport { boardService } from '../../../../services/boardService';\n\nclass _LabelTask extends Component {\n    state = {\n        isDisable: true,\n        titleLabel: this.props.label.title ? this.props.label.title : '',\n        task: null,\n        group: null\n    }\n\n    componentDidMount() {\n        const { taskId, groupId } = this.props.match.params;\n        const board = this.props.board;\n        const group = boardService.getGroupById(board, groupId);\n        const task = boardService.getTaskById(group, taskId);\n        this.setState({ ...this.state, task: task, group: group });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props !== prevProps) {\n            const { boardId, taskId, groupId } = this.props.match.params;\n            const board = { ...this.props.board };\n            const group = boardService.getGroupById(board, groupId);\n            const task = boardService.getTaskById(group, taskId);\n            this.setState({ ...this.state, task: task, group: group });\n        }\n\n    }\n\n    toggleLabel(labelId, nameInput) {\n        const { task, group } = this.state;\n        const board = { ...this.props.board };\n        if (!task.labelIds) {\n            task.labelIds = []\n        }\n        const labelIdx = task.labelIds.findIndex(currLabelId => currLabelId === labelId);\n        if (labelIdx > -1) {\n            task.labelIds.splice(labelIdx, 1)\n        } else task.labelIds.push(labelId)\n        this.props.updateTaskLabel(task)\n        // const updateBoard = boardService.updateTaskAtBoard(board, group, task);\n        // this.props.update(updateBoard)\n    }\n\n    toggleDisable(nameInput) {\n        document.querySelector(`.${nameInput}`).disabled = !(document.querySelector(`.${nameInput}`).disabled); \n        this.setState({\n            isDisable: !this.state.isDisable\n        })\n    }\n\n    borderLabel = (task, labelId) => {\n        if (task.labelIds) {\n            if (task.labelIds.includes(labelId))\n                return 'border';\n        }\n        return '';\n    }\n\n    handleChange = ({ target }) => {\n        const value = target.value;\n        this.setState({\n            ...this.state,\n            titleLabel: value\n        });\n        const label = this.props.label;\n        label.title = target.value;\n        this.updateLabelBoard(label);\n    }\n\n    updateLabelBoard = (label) => {\n        const { board } = this.props;\n        const idx = board.labels.findIndex(currLabel => currLabel.id === label.id);\n        board.labels.splice(idx, 1, label);\n        this.props.update(board);\n    };\n\n    render() {\n        const task = this.props.task;\n        if(!task) return <h1>lodaing...</h1>\n        const { label } = this.props;\n        let className;\n        if (task) {\n            className = this.borderLabel(task, label.id);\n        }\n        const nameInput = `label-${label.id}`;\n        return (\n            <div className=\"label flex center space-between w-100 pad-s h-20\" data-label={label.id}>\n                <div className={`wrap-label ${className} w-90`} onClick={() => this.toggleLabel(label.id, nameInput)}\n                >\n                    <input\n                        type=\"text\"\n                        name={nameInput}\n                        value={this.state.titleLabel}\n                        style={{ background: `${label.color}` }}\n                        className={`label-input ${nameInput} ${this.state.isDisable}  cur-pointer`}\n                        onChange={this.handleChange}\n                        maxLength={13}\n                        disabled\n                    />\n                </div>\n                    <span onClick={() => { this.toggleDisable(nameInput) }} className=\"edit-label ps-1\"><FiEdit2 /> </span>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        loggedInUser: state.userModule.loggedInUser,\n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n    update\n}\n\n\nexport const LabelTask = connect(mapStateToProps, mapDispatchToProps)(withRouter(_LabelTask))",{"ruleId":"330","severity":1,"message":"331","line":2,"column":34,"nodeType":"332","messageId":"333","endLine":2,"endColumn":51},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","replacedBy":"337"},{"ruleId":"330","severity":1,"message":"338","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":14},{"ruleId":"330","severity":1,"message":"339","line":6,"column":37,"nodeType":"332","messageId":"333","endLine":6,"endColumn":48},{"ruleId":"330","severity":1,"message":"340","line":4,"column":8,"nodeType":"332","messageId":"333","endLine":4,"endColumn":16},{"ruleId":"330","severity":1,"message":"341","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":17},{"ruleId":"330","severity":1,"message":"342","line":7,"column":10,"nodeType":"332","messageId":"333","endLine":7,"endColumn":21},{"ruleId":"330","severity":1,"message":"343","line":7,"column":23,"nodeType":"332","messageId":"333","endLine":7,"endColumn":32},{"ruleId":"330","severity":1,"message":"344","line":7,"column":34,"nodeType":"332","messageId":"333","endLine":7,"endColumn":46},{"ruleId":"330","severity":1,"message":"345","line":8,"column":10,"nodeType":"332","messageId":"333","endLine":8,"endColumn":19},{"ruleId":"346","severity":1,"message":"347","line":41,"column":11,"nodeType":"348","endLine":41,"endColumn":57},{"ruleId":"346","severity":1,"message":"347","line":51,"column":11,"nodeType":"348","endLine":51,"endColumn":64},{"ruleId":"346","severity":1,"message":"347","line":60,"column":11,"nodeType":"348","endLine":60,"endColumn":60},{"ruleId":"346","severity":1,"message":"347","line":68,"column":11,"nodeType":"348","endLine":68,"endColumn":60},{"ruleId":"330","severity":1,"message":"349","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":16},{"ruleId":"330","severity":1,"message":"350","line":25,"column":13,"nodeType":"332","messageId":"333","endLine":25,"endColumn":16},{"ruleId":"346","severity":1,"message":"347","line":30,"column":11,"nodeType":"348","endLine":30,"endColumn":28},{"ruleId":"330","severity":1,"message":"351","line":3,"column":10,"nodeType":"332","messageId":"333","endLine":3,"endColumn":17},{"ruleId":"330","severity":1,"message":"352","line":8,"column":27,"nodeType":"332","messageId":"333","endLine":8,"endColumn":36},{"ruleId":"330","severity":1,"message":"353","line":6,"column":10,"nodeType":"332","messageId":"333","endLine":6,"endColumn":21},{"ruleId":"354","severity":1,"message":"355","line":80,"column":49,"nodeType":"356","messageId":"357","endLine":80,"endColumn":51},{"ruleId":"354","severity":1,"message":"355","line":84,"column":49,"nodeType":"356","messageId":"357","endLine":84,"endColumn":51},{"ruleId":"330","severity":1,"message":"358","line":3,"column":10,"nodeType":"332","messageId":"333","endLine":3,"endColumn":23},{"ruleId":"330","severity":1,"message":"359","line":3,"column":25,"nodeType":"332","messageId":"333","endLine":3,"endColumn":50},{"ruleId":"330","severity":1,"message":"360","line":70,"column":19,"nodeType":"332","messageId":"333","endLine":70,"endColumn":31},{"ruleId":"330","severity":1,"message":"361","line":3,"column":7,"nodeType":"332","messageId":"333","endLine":3,"endColumn":23},{"ruleId":"330","severity":1,"message":"353","line":1,"column":10,"nodeType":"332","messageId":"333","endLine":1,"endColumn":21},{"ruleId":"330","severity":1,"message":"362","line":4,"column":10,"nodeType":"332","messageId":"333","endLine":4,"endColumn":24},{"ruleId":"330","severity":1,"message":"363","line":5,"column":10,"nodeType":"332","messageId":"333","endLine":5,"endColumn":15},{"ruleId":"354","severity":1,"message":"364","line":103,"column":44,"nodeType":"356","messageId":"365","endLine":103,"endColumn":46},{"ruleId":"366","severity":1,"message":"367","line":121,"column":16,"nodeType":"368","messageId":"369","endLine":121,"endColumn":18},{"ruleId":"366","severity":1,"message":"367","line":126,"column":23,"nodeType":"368","messageId":"369","endLine":126,"endColumn":25},{"ruleId":"330","severity":1,"message":"370","line":43,"column":7,"nodeType":"332","messageId":"333","endLine":43,"endColumn":20},{"ruleId":"330","severity":1,"message":"353","line":1,"column":10,"nodeType":"332","messageId":"333","endLine":1,"endColumn":21},{"ruleId":"330","severity":1,"message":"371","line":6,"column":9,"nodeType":"332","messageId":"333","endLine":6,"endColumn":21},{"ruleId":"330","severity":1,"message":"372","line":31,"column":11,"nodeType":"332","messageId":"333","endLine":31,"endColumn":23},{"ruleId":"330","severity":1,"message":"373","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":25},{"ruleId":"366","severity":1,"message":"367","line":103,"column":55,"nodeType":"368","messageId":"369","endLine":103,"endColumn":57},{"ruleId":"330","severity":1,"message":"374","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":14},{"ruleId":"330","severity":1,"message":"375","line":2,"column":16,"nodeType":"332","messageId":"333","endLine":2,"endColumn":23},{"ruleId":"330","severity":1,"message":"376","line":48,"column":16,"nodeType":"332","messageId":"333","endLine":48,"endColumn":21},{"ruleId":"330","severity":1,"message":"374","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":14},{"ruleId":"330","severity":1,"message":"375","line":2,"column":16,"nodeType":"332","messageId":"333","endLine":2,"endColumn":23},{"ruleId":"330","severity":1,"message":"377","line":112,"column":24,"nodeType":"332","messageId":"333","endLine":112,"endColumn":32},{"ruleId":"354","severity":1,"message":"378","line":221,"column":52,"nodeType":"379","messageId":"380","endLine":221,"endColumn":58},{"ruleId":"330","severity":1,"message":"374","line":3,"column":10,"nodeType":"332","messageId":"333","endLine":3,"endColumn":14},{"ruleId":"330","severity":1,"message":"381","line":6,"column":8,"nodeType":"332","messageId":"333","endLine":6,"endColumn":22},{"ruleId":"330","severity":1,"message":"382","line":30,"column":17,"nodeType":"332","messageId":"333","endLine":30,"endColumn":24},{"ruleId":"383","severity":1,"message":"384","line":144,"column":9,"nodeType":"385","endLine":144,"endColumn":24},{"ruleId":"354","severity":1,"message":"355","line":326,"column":81,"nodeType":"356","messageId":"357","endLine":326,"endColumn":83},{"ruleId":"346","severity":1,"message":"347","line":366,"column":41,"nodeType":"348","endLine":366,"endColumn":90},{"ruleId":"354","severity":1,"message":"355","line":416,"column":67,"nodeType":"356","messageId":"357","endLine":416,"endColumn":69},{"ruleId":"354","severity":1,"message":"378","line":417,"column":55,"nodeType":"379","messageId":"380","endLine":417,"endColumn":61},{"ruleId":"330","severity":1,"message":"386","line":3,"column":10,"nodeType":"332","messageId":"333","endLine":3,"endColumn":18},{"ruleId":"330","severity":1,"message":"387","line":25,"column":32,"nodeType":"332","messageId":"333","endLine":25,"endColumn":40},{"ruleId":"330","severity":1,"message":"388","line":42,"column":24,"nodeType":"332","messageId":"333","endLine":42,"endColumn":29},{"ruleId":"330","severity":1,"message":"389","line":42,"column":31,"nodeType":"332","messageId":"333","endLine":42,"endColumn":35},{"ruleId":"346","severity":1,"message":"347","line":71,"column":45,"nodeType":"348","endLine":71,"endColumn":93},{"ruleId":"354","severity":1,"message":"355","line":80,"column":83,"nodeType":"356","messageId":"357","endLine":80,"endColumn":85},{"ruleId":"330","severity":1,"message":"374","line":5,"column":10,"nodeType":"332","messageId":"333","endLine":5,"endColumn":14},{"ruleId":"330","severity":1,"message":"376","line":17,"column":17,"nodeType":"332","messageId":"333","endLine":17,"endColumn":22},{"ruleId":"330","severity":1,"message":"374","line":4,"column":10,"nodeType":"332","messageId":"333","endLine":4,"endColumn":14},{"ruleId":"330","severity":1,"message":"353","line":4,"column":10,"nodeType":"332","messageId":"333","endLine":4,"endColumn":21},{"ruleId":"330","severity":1,"message":"390","line":51,"column":15,"nodeType":"332","messageId":"333","endLine":51,"endColumn":36},{"ruleId":"330","severity":1,"message":"353","line":4,"column":9,"nodeType":"332","messageId":"333","endLine":4,"endColumn":20},{"ruleId":"330","severity":1,"message":"374","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":14},{"ruleId":"330","severity":1,"message":"375","line":2,"column":16,"nodeType":"332","messageId":"333","endLine":2,"endColumn":23},{"ruleId":"330","severity":1,"message":"391","line":8,"column":10,"nodeType":"332","messageId":"333","endLine":8,"endColumn":17},{"ruleId":"330","severity":1,"message":"392","line":5,"column":10,"nodeType":"332","messageId":"333","endLine":5,"endColumn":16},{"ruleId":"330","severity":1,"message":"393","line":5,"column":18,"nodeType":"332","messageId":"333","endLine":5,"endColumn":21},{"ruleId":"330","severity":1,"message":"394","line":5,"column":23,"nodeType":"332","messageId":"333","endLine":5,"endColumn":32},{"ruleId":"330","severity":1,"message":"395","line":5,"column":42,"nodeType":"332","messageId":"333","endLine":5,"endColumn":50},{"ruleId":"330","severity":1,"message":"353","line":5,"column":9,"nodeType":"332","messageId":"333","endLine":5,"endColumn":20},{"ruleId":"330","severity":1,"message":"396","line":5,"column":10,"nodeType":"332","messageId":"333","endLine":5,"endColumn":19},{"ruleId":"330","severity":1,"message":"371","line":7,"column":10,"nodeType":"332","messageId":"333","endLine":7,"endColumn":22},{"ruleId":"330","severity":1,"message":"396","line":5,"column":10,"nodeType":"332","messageId":"333","endLine":5,"endColumn":19},{"ruleId":"330","severity":1,"message":"371","line":7,"column":10,"nodeType":"332","messageId":"333","endLine":7,"endColumn":22},{"ruleId":"330","severity":1,"message":"374","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":14},{"ruleId":"330","severity":1,"message":"375","line":2,"column":16,"nodeType":"332","messageId":"333","endLine":2,"endColumn":23},{"ruleId":"330","severity":1,"message":"382","line":27,"column":21,"nodeType":"332","messageId":"333","endLine":27,"endColumn":28},{"ruleId":"330","severity":1,"message":"397","line":37,"column":23,"nodeType":"332","messageId":"333","endLine":37,"endColumn":28},{"ruleId":"330","severity":1,"message":"376","line":38,"column":15,"nodeType":"332","messageId":"333","endLine":38,"endColumn":20},"no-unused-vars","'localLoggedinUser' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["398"],"no-negated-in-lhs",["399"],"'Chat' is defined but never used.","'IoAppsSharp' is defined but never used.","'LoginPic' is defined but never used.","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Upload' is defined but never used.","'_id' is assigned a value but never used.","'loading' is defined but never used.","'Draggable' is defined but never used.","'utilService' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'socketService' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'updatedBoard' is assigned a value but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.","'BsBookmarkDash' is defined but never used.","'Board' is defined but never used.","Array.prototype.findIndex() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'socketIsReady' is assigned a value but never used.","'boardService' is defined but never used.","'previewStyle' is assigned a value but never used.","'DragDropContext' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'board' is assigned a value but never used.","'onUpdate' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'onClickOutside' is defined but never used.","'boardId' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Provider' is defined but never used.","'duration' is assigned a value but never used.","'index' is assigned a value but never used.","'task' is assigned a value but never used.","'backgroundColorBorder' is assigned a value but never used.","'BsImage' is defined but never used.","'remove' is defined but never used.","'add' is defined but never used.","'loadBoard' is defined but never used.","'setBoard' is defined but never used.","'LabelTask' is defined but never used.","'group' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]