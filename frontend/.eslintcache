[{"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\index.js":"1","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\store.js":"4","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\App.jsx":"5","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js":"6","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js":"7","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js":"8","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js":"9","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\routes.js":"10","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx":"11","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\Chat.jsx":"12","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\Home.jsx":"13","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\UserDetails.jsx":"14","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\LoginSignup.jsx":"15","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\BoardList.jsx":"16","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\Board.jsx":"17","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\TaskDetails.jsx":"18","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js":"19","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\userActions.js":"20","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js":"21","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\boardService.js":"22","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\utilService.js":"23","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx":"24","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\userService.js":"25","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\socketService.js":"26","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\Upload.jsx":"27","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx":"28","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js":"29","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\reviewService.js":"30","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\httpService.js":"31","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js":"32","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\data\\board.js":"33","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx":"34","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx":"35","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx":"36","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx":"37","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx":"38","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\systemActions.js":"39","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\index.js":"40","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\reportWebVitals.js":"41","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\serviceWorkerRegistration.js":"42","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\store.js":"43","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\App.jsx":"44","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js":"45","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js":"46","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js":"47","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js":"48","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\routes.js":"49","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx":"50","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Home.jsx":"51","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\BoardList.jsx":"52","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Board.jsx":"53","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Chat.jsx":"54","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\UserDetails.jsx":"55","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx":"56","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js":"57","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\userActions.js":"58","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\boardService.js":"59","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\socketService.js":"60","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\utilService.js":"61","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx":"62","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\userService.js":"63","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx":"64","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx":"65","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\Upload.jsx":"66","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js":"67","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\httpService.js":"68","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardNavbar.jsx":"69","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\reviewService.js":"70","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx":"71","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\data\\board.js":"72","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js":"73","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx":"74","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx":"75","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskDetails.jsx":"76","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckList.jsx":"77","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckListStatus.jsx":"78","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskTitle.jsx":"79","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\ActionList.jsx":"80","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\LabelModal.jsx":"81","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\ModalAction.jsx":"82","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\OverlayAction.jsx":"83","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MembersModal.jsx":"84","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\systemAction.js":"85","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js":"86","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\LabelTask.jsx":"87","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Login.jsx":"88","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardMembersModal.jsx":"89","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\DueDateModal.jsx":"90","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\CopyModal.jsx":"91","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MoveModal.jsx":"92"},{"size":935,"mtime":1622123976226,"results":"93","hashOfConfig":"94"},{"size":5201,"mtime":1622123976238,"results":"95","hashOfConfig":"94"},{"size":377,"mtime":1622123976235,"results":"96","hashOfConfig":"94"},{"size":752,"mtime":1622123976262,"results":"97","hashOfConfig":"94"},{"size":535,"mtime":1622208637880,"results":"98","hashOfConfig":"94"},{"size":322,"mtime":1622409437820,"results":"99","hashOfConfig":"94"},{"size":868,"mtime":1622403459987,"results":"100","hashOfConfig":"94"},{"size":669,"mtime":1622123976259,"results":"101","hashOfConfig":"94"},{"size":688,"mtime":1622215508185,"results":"102","hashOfConfig":"94"},{"size":778,"mtime":1622380197857,"results":"103","hashOfConfig":"94"},{"size":2703,"mtime":1622405642721,"results":"104","hashOfConfig":"94"},{"size":3395,"mtime":1622125879313,"results":"105","hashOfConfig":"94"},{"size":2963,"mtime":1622405255457,"results":"106","hashOfConfig":"94"},{"size":732,"mtime":1622123976234,"results":"107","hashOfConfig":"94"},{"size":5612,"mtime":1622410473147,"results":"108","hashOfConfig":"94"},{"size":1179,"mtime":1622390262384,"results":"109","hashOfConfig":"94"},{"size":6712,"mtime":1622480146013,"results":"110","hashOfConfig":"94"},{"size":7000,"mtime":1622480146009,"results":"111","hashOfConfig":"94"},{"size":1321,"mtime":1622123976254,"results":"112","hashOfConfig":"94"},{"size":1907,"mtime":1622403677557,"results":"113","hashOfConfig":"94"},{"size":1989,"mtime":1622480146029,"results":"114","hashOfConfig":"94"},{"size":2489,"mtime":1622480146016,"results":"115","hashOfConfig":"94"},{"size":3308,"mtime":1622471057716,"results":"116","hashOfConfig":"94"},{"size":165,"mtime":1622319007035,"results":"117","hashOfConfig":"94"},{"size":2097,"mtime":1622480146024,"results":"118","hashOfConfig":"94"},{"size":2414,"mtime":1622480146020,"results":"119","hashOfConfig":"94"},{"size":1127,"mtime":1622123976222,"results":"120","hashOfConfig":"94"},{"size":5051,"mtime":1622479836916,"results":"121","hashOfConfig":"94"},{"size":2404,"mtime":1622319007044,"results":"122","hashOfConfig":"94"},{"size":1087,"mtime":1622123976248,"results":"123","hashOfConfig":"94"},{"size":1136,"mtime":1622123976244,"results":"124","hashOfConfig":"94"},{"size":587,"mtime":1622123976243,"results":"125","hashOfConfig":"94"},{"size":305529,"mtime":1622477193709,"results":"126","hashOfConfig":"94"},{"size":105,"mtime":1622319007035,"results":"127","hashOfConfig":"94"},{"size":6053,"mtime":1622479624218,"results":"128","hashOfConfig":"94"},{"size":248,"mtime":1622380660729,"results":"129","hashOfConfig":"94"},{"size":473,"mtime":1622407621016,"results":"130","hashOfConfig":"94"},{"size":664,"mtime":1622407022555,"results":"131","hashOfConfig":"94"},{"size":438,"mtime":1622443150607,"results":"132","hashOfConfig":"94"},{"size":935,"mtime":1622540459727,"results":"133","hashOfConfig":"134"},{"size":377,"mtime":1622540459732,"results":"135","hashOfConfig":"134"},{"size":5201,"mtime":1622540459734,"results":"136","hashOfConfig":"134"},{"size":752,"mtime":1622540459748,"results":"137","hashOfConfig":"134"},{"size":535,"mtime":1622540459615,"results":"138","hashOfConfig":"134"},{"size":426,"mtime":1622648499511,"results":"139","hashOfConfig":"134"},{"size":688,"mtime":1622540459745,"results":"140","hashOfConfig":"134"},{"size":868,"mtime":1622540459747,"results":"141","hashOfConfig":"134"},{"size":669,"mtime":1622540459746,"results":"142","hashOfConfig":"134"},{"size":634,"mtime":1622631189362,"results":"143","hashOfConfig":"134"},{"size":2846,"mtime":1622657490644,"results":"144","hashOfConfig":"134"},{"size":2963,"mtime":1622548347119,"results":"145","hashOfConfig":"134"},{"size":4294,"mtime":1622679865753,"results":"146","hashOfConfig":"134"},{"size":7176,"mtime":1622679865751,"results":"147","hashOfConfig":"134"},{"size":3395,"mtime":1622540459729,"results":"148","hashOfConfig":"134"},{"size":1405,"mtime":1622631189360,"results":"149","hashOfConfig":"134"},{"size":533,"mtime":1622640548535,"results":"150","hashOfConfig":"134"},{"size":2193,"mtime":1622659221007,"results":"151","hashOfConfig":"134"},{"size":1966,"mtime":1622640548548,"results":"152","hashOfConfig":"134"},{"size":3211,"mtime":1622659221005,"results":"153","hashOfConfig":"134"},{"size":2414,"mtime":1622540459737,"results":"154","hashOfConfig":"134"},{"size":3308,"mtime":1622540459738,"results":"155","hashOfConfig":"134"},{"size":165,"mtime":1622540459723,"results":"156","hashOfConfig":"134"},{"size":2097,"mtime":1622540459739,"results":"157","hashOfConfig":"134"},{"size":5245,"mtime":1622658591480,"results":"158","hashOfConfig":"134"},{"size":490,"mtime":1622679865721,"results":"159","hashOfConfig":"134"},{"size":1127,"mtime":1622640548530,"results":"160","hashOfConfig":"134"},{"size":2404,"mtime":1622540459735,"results":"161","hashOfConfig":"134"},{"size":1136,"mtime":1622540459737,"results":"162","hashOfConfig":"134"},{"size":3519,"mtime":1622659220983,"results":"163","hashOfConfig":"134"},{"size":1087,"mtime":1622540459738,"results":"164","hashOfConfig":"134"},{"size":106,"mtime":1622553623559,"results":"165","hashOfConfig":"134"},{"size":305529,"mtime":1622540459726,"results":"166","hashOfConfig":"134"},{"size":587,"mtime":1622631189364,"results":"167","hashOfConfig":"134"},{"size":7493,"mtime":1622679865724,"results":"168","hashOfConfig":"134"},{"size":846,"mtime":1622659220979,"results":"169","hashOfConfig":"134"},{"size":12649,"mtime":1622679865726,"results":"170","hashOfConfig":"134"},{"size":4457,"mtime":1622648758272,"results":"171","hashOfConfig":"134"},{"size":715,"mtime":1622648758274,"results":"172","hashOfConfig":"134"},{"size":0,"mtime":1622551135786,"results":"173","hashOfConfig":"134"},{"size":4023,"mtime":1622679865728,"results":"174","hashOfConfig":"134"},{"size":1604,"mtime":1622679865741,"results":"175","hashOfConfig":"134"},{"size":220,"mtime":1622553737523,"results":"176","hashOfConfig":"134"},{"size":116,"mtime":1622553751703,"results":"177","hashOfConfig":"134"},{"size":2303,"mtime":1622649369556,"results":"178","hashOfConfig":"134"},{"size":756,"mtime":1622648563913,"results":"179","hashOfConfig":"134"},{"size":1321,"mtime":1622560933611,"results":"180","hashOfConfig":"134"},{"size":4015,"mtime":1622679865729,"results":"181","hashOfConfig":"134"},{"size":4715,"mtime":1622640548545,"results":"182","hashOfConfig":"134"},{"size":2303,"mtime":1622659220981,"results":"183","hashOfConfig":"134"},{"size":1540,"mtime":1622649382433,"results":"184","hashOfConfig":"134"},{"size":2938,"mtime":1622679865734,"results":"185","hashOfConfig":"134"},{"size":3040,"mtime":1622679865745,"results":"186","hashOfConfig":"134"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},"1q8ycx9",{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"189"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"189"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"189"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"189"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"189"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},"1hkyyjl",{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"273"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"273"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"273"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"273"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"273"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"273"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"273"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"273"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"273"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"273"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"273"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"273"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"273"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"273"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"273"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"273"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\index.js",[],["393","394"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\store.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\App.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js",["395"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\routes.js",["396","397","398","399"],"import { Home } from './pages/Home'\r\nimport { LoginSignup } from './pages/LoginSignup'\r\nimport { Chat } from './pages/Chat'\r\nimport { UserDetails } from './pages/UserDetails'\r\nimport { BoardList } from './pages/BoardList'\r\nimport { Board } from './pages/Board'\r\nimport { TaskDetails } from './cmps/board/TaskDetails'\r\n\r\nexport const routes = [\r\n    /* {\r\n        path: '/board/:boardId/:groupId/:taskId',\r\n        component: TaskDetails,\r\n    }, */\r\n    {\r\n        path: '/board/:boardId',\r\n        component: Board,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: BoardList\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n]\r\n","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\Chat.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\Home.jsx",["400","401","402","403","404","405","406","407","408"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\UserDetails.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\BoardList.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\pages\\Board.jsx",["409"],"import { connect } from 'react-redux'\r\nimport { remove, add, loadBoard, update } from '../store/actions/boardsAction.js';\r\nimport { loading } from '../store/actions/systemActions';\r\n\r\nimport React, { Component } from 'react'\r\nimport { TaskList } from '../cmps/board/TaskList'\r\nimport { BoardNavbar } from '../cmps/board/boardNavbar/BoardNavbar'\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Route, Switch } from 'react-router';\r\nimport { TaskDetails } from '../cmps/board/TaskDetails.jsx';\r\nimport { boardService } from '.././services/boardService.js'\r\nimport { utilService } from '../services/generalService/utilService.js'\r\nimport { socketService } from '../services/generalService/socketService.js'\r\nimport { ModalWrapper } from '../cmps/shared/ModalWrapper.jsx';\r\n\r\nconst EMPTY_GROUP = { title: '' }\r\n\r\nclass _Board extends Component {\r\n    state = {\r\n        group: EMPTY_GROUP\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { boardId } = this.props.match.params\r\n        this.props.loadBoard(boardId);\r\n        socketService.setup()\r\n        socketService.on('board updated', ()=>{\r\n            console.log('recieved update')\r\n            this.props.loadBoard()})\r\n        socketService.emit('add member',boardId)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('board updated', this.props.loadBoard)\r\n        socketService.terminate()\r\n    }\r\n\r\n\r\n    onUpdate = (updateBoard) => {\r\n        console.log(updateBoard)\r\n        this.props.update(updateBoard)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({\r\n            group: {\r\n                ...prevState.group,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n\r\n    onAddGroup = () => {\r\n        const copyBoard = { ...this.props.board };\r\n        this.setState({ group: { ...this.state.group, id: utilService.makeId() } })\r\n        copyBoard.groups.push(utilService.formatNewGroup(this.state.group))\r\n        this.props.update(copyBoard)\r\n        this.setState({ group: EMPTY_GROUP })\r\n    }\r\n\r\n    onDragEnd = res => {\r\n        console.log()\r\n        const { destination, source, type } = res\r\n        if (!destination) return\r\n        if (destination.droppableId === source.droppableId &&\r\n            destination.index === source.index) return\r\n        const copyBoard = { ...this.props.board }\r\n        const activity = {}\r\n        if (type === 'task') {\r\n            const sourceListIdx = boardService.getGroupIdxById(copyBoard, source.droppableId)\r\n            const destinationListIdx = boardService.getGroupIdxById(copyBoard, destination.droppableId)\r\n            const task = copyBoard.groups[sourceListIdx].tasks.splice(source.index, 1)\r\n            copyBoard.groups[destinationListIdx].tasks.splice(destination.index, 0, task[0])\r\n            const sourceListName = copyBoard.groups[sourceListIdx].title\r\n            const destinationListName = copyBoard.groups[destinationListIdx].title\r\n            activity.txt = `has moved ${task[0].title} from ${sourceListName} to ${destinationListName}`\r\n        }\r\n        else {\r\n            console.log('before',copyBoard)\r\n            const list = copyBoard.groups.splice(source.index, 1)\r\n            copyBoard.groups.splice(destination.index, 0, list[0])\r\n            activity.txt = `has moved list ${list[0].title}`\r\n            console.log('after',copyBoard)\r\n        }\r\n        this.props.update(copyBoard)\r\n    }\r\n\r\n    onCloseDetails = () => {\r\n        this.props.history.push(`/board/${this.props.board._id}`)\r\n\r\n    }\r\n    render() {\r\n        const { board } = this.props;\r\n        if (!board) {\r\n            return <div className=\"loader w-100 h-100 flex center content-center\">Loading...</div>\r\n        }\r\n        // loading ui\r\n        this.props.loading();\r\n        // if(this.props.isLoading) return <h1 className=\"w-100 h-100 flex center content-center\">Loading...</h1>\r\n        if (this.props.isLoading) return <div className=\"loader w-100 h-100 flex center content-center\">Loading...</div>\r\n\r\n\r\n        return (\r\n            <section className=\"board flex column w-100 animate__animated animate__fadeInRight \">\r\n                <BoardNavbar board={board} />\r\n                <div className=\"board-list flex w-100 \">\r\n                    <DragDropContext\r\n                        onDragEnd={this.onDragEnd}\r\n                    >\r\n                        <Droppable droppableId={'all-columns'}\r\n                            direction=\"horizontal\"\r\n                            type=\"list\"\r\n                        >\r\n                            {provided => (\r\n                                <ul\r\n                                    className=\"groups clean-list flex \"\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}\r\n                                >\r\n                                    {board && board.groups.map((group, idx) => <TaskList index={idx}\r\n                                        key={group.id}\r\n                                        board={board}\r\n                                        group={group}\r\n                                        updateBoard={this.onUpdate} />)}\r\n                                    {provided.placeholder}\r\n\r\n\r\n                                </ul>\r\n                            )}\r\n\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                    <div className=\"group add-group flex\">\r\n                        <form onSubmit={(ev) => {\r\n                            ev.preventDefault()\r\n                            this.onAddGroup()\r\n                        }}>\r\n                            <input className=\"add-group\" value={this.state.group.title} type=\"text\" placeholder=\"+ Add another list\" name=\"title\" onChange={this.handleChange} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <Switch>\r\n                    <Route path={'/board/:boardId/:groupId/:taskId'} render={(props) => <ModalWrapper onClick={this.onCloseDetails}><TaskDetails {...props} /></ModalWrapper>}></Route>\r\n                </Switch>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n// {\r\n//     path: '/board/:boardId/:taskId',\r\n//     component: TaskDetails,\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        isLoading: state.systemModule.isLoading\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    remove,\r\n    add,\r\n    loadBoard,\r\n    update,\r\n    loading\r\n}\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\TaskDetails.jsx",["410","411"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js",["412","413"],"import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../../services/generalService/socketService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n      // socketService.on(SOCKET_EVENT_REVIEW_ADDED, review =>{\r\n      //   dispatch({ type: 'ADD_REVIEW', review })\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\boardService.js",["414"],"import { utilService } from './generalService/utilService.js'\r\nimport { storageService } from './generalService/asyncStorageService.js'\r\n\r\nwindow.storageService = storageService;\r\n\r\nconst STORAGE_KEY = 'board'\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    update,\r\n    add,\r\n    getGroupById,\r\n    getTaskById,\r\n    getGroupIdxById,\r\n    addTask,\r\n    checklistPreview,\r\n    getTaskIdxById\r\n}\r\n\r\n\r\nfunction query() {\r\n    return storageService.query(STORAGE_KEY)\r\n}\r\n\r\nfunction getById(boardId) {\r\n    const board = storageService.get(STORAGE_KEY, boardId);\r\n    return board\r\n}\r\n\r\nfunction remove(boardId) {\r\n    return storageService.remove(STORAGE_KEY, boardId)\r\n}\r\n\r\nfunction add() {\r\n    const newBoard = _createBoard()\r\n    const savedBoard = storageService.post(STORAGE_KEY, newBoard)\r\n    return savedBoard\r\n}\r\n\r\nfunction update(board) {\r\n    console.log('service')\r\n    return storageService.put(STORAGE_KEY, board)\r\n\r\n}\r\n\r\n//task crud\r\nfunction getGroupById(board, groupId) {\r\n    return board.groups.find(group => group.id === groupId);\r\n}\r\n\r\nfunction getGroupIdxById(board, groupId) {\r\n    return board.groups.findIndex(group => group.id === groupId);\r\n}\r\n\r\nfunction getTaskIdxById(group, taskId) {\r\n    return group.tasks.findIndex(task => task.id === taskId);\r\n}\r\n\r\nfunction getTaskById(group, taskId) {\r\n    return group.tasks.find(task => task.id === taskId)\r\n}\r\n\r\nfunction addTask(board, group, title) {\r\n    const newTask = {\r\n        id: utilService.makeId(),\r\n        title: title\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nfunction _createBoard(title = 'New Board', loggedInUser = { fullname: 'some user', _id: 'u101', imgUrl: 'http://some-img.jpg' }) {\r\n    const board = {\r\n        \"_id\": utilService.makeId(),\r\n        title,\r\n        \"createdAt\": Date.now(),\r\n        \"createdBy\": {\r\n            \"_id\": loggedInUser._id,\r\n            \"fullname\": loggedInUser.fullname,\r\n            \"imgUrl\": loggedInUser.imgUrl\r\n        },\r\n        \"style\": {},\r\n        \"labels\": [\r\n            {\r\n                \"id\": \"l101\",\r\n                \"title\": \"Done\",\r\n                \"color\": \"#61bd4f\"\r\n            },\r\n            {\r\n                \"id\": \"l101\",\r\n                \"title\": \"Todo\",\r\n                \"color\": \"green\"\r\n            }\r\n        ],\r\n        \"members\": [\r\n            {\r\n                \"_id\": loggedInUser._id,\r\n                \"fullname\": loggedInUser.fullname,\r\n                \"imgUrl\": loggedInUser.imgUrl\r\n            }\r\n        ],\r\n        \"groups\": [\r\n            {\r\n                \"id\": utilService.makeId(),\r\n                \"title\": \"Group 1\",\r\n                \"tasks\": [\r\n                    {\r\n                        \"id\": \"c101\",\r\n                        \"title\": \"Replace logo\"\r\n                    },\r\n                    {\r\n                        \"id\": \"c102\",\r\n                        \"title\": \"Add Samples\"\r\n                    }\r\n                ],\r\n                \"checklists\": [],\r\n                \"style\": {}\r\n            },\r\n        ],\r\n        \"activities\": []\r\n    }\r\n\r\n    return board;\r\n}\r\n\r\nfunction checklistPreview(task){\r\n    const checklists = task.checklists\r\n    let allTodos = 0;\r\n    let doneTodos = 0;\r\n    checklists.forEach(checkList => {\r\n        allTodos += checkList.todos.length;\r\n        checkList.todos.forEach(todo => {\r\n            if(todo.isDone) doneTodos++\r\n        })\r\n    });\r\n\r\n    const str = `${doneTodos}/${allTodos}`\r\n    return str\r\n} ","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\utilService.js",["415"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\userService.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\socketService.js",["416","417"],"import io from 'socket.io-client'\r\nimport {httpService} from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\nfunction cb(x) {console.log(x)}\r\nsocketService.on('baba', cb)\r\nsocketService.on('mama', cb)\r\nsocketService.on('lala', cb)\r\nsocketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n","C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\Upload.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx",["418","419"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\reviewService.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\httpService.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\data\\board.js",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx",["420","421","422","423","424","425","426","427"],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx",[],"C:\\Users\\harel\\Desktop\\final sprint HH\\Taskman\\frontend\\src\\store\\actions\\systemActions.js",["428"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\index.js",[],["429","430"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\store.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\App.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js",["431"],"let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\nconst defUser = {\r\n  \"_id\": \"u101\",\r\n  \"fullname\": \"Abi Abambi\",\r\n  \"username\": \"abi@ababmi.com\",\r\n  \"password\": \"aBambi123\",\r\n  \"imgUrl\": \"http://some-img.jpg\",\r\n  \"mentions\": [{\r\n    \"id\": \"m101\",\r\n    \"boardId\": \"m101\",\r\n    \"taskId\": \"t101\"\r\n  }]\r\n}\r\nconst initialState = {\r\n  loggedInUser: defUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\routes.js",["432"],"import { Home } from './pages/Home'\r\nimport { Chat } from './pages/Chat'\r\nimport { UserDetails } from './pages/UserDetails'\r\nimport { BoardList } from './pages/BoardList'\r\nimport { Board } from './pages/Board'\r\nimport { Login } from './pages/Login'\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/user/:userId',\r\n        component: UserDetails,\r\n    },\r\n    {\r\n        path: '/board/:boardId',\r\n        component: Board,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: BoardList\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n]\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Home.jsx",["433","434","435","436","437","438","439","440","441"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MainImg from '../assets/img/home/main-img.svg'\r\nimport TeamworkImg from '../assets/img/home/teamwork.svg'\r\nimport TimeImg from '../assets/img/home/time.svg'\r\nimport OrganizeImg from '../assets/img/home/organize.svg'\r\nimport { loadReviews, addReview, removeReview } from '../store/actions/reviewActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Home extends Component {\r\n  state = {\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      reviewToEdit: {\r\n        ...prevState.reviewToEdit,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home-page flex column fam-1 \">\r\n        <div className=\"flex row-reverse mt-5 space-evenly \">\r\n          <div className=\"align-center flex column \">\r\n              <div className=\"c-stand ps-2 font-xl\"><span className=\"logo-span\">T</span>askman</div>\r\n              <h1 className=\"fam-1\">Task management</h1>\r\n              <h2 className=\"fam-1\">The <span className=\"main-color\">easiest</span> way. </h2>\r\n              <Link to=\"/board/60b3d35bf2ba7731f23403a5\"><button class=\"btn-hover color-3\">Try it now!</button></Link>\r\n          </div>\r\n          <img className=\"main-img w-50\" src={MainImg}/>\r\n        </div>\r\n        <div className=\"features flex row space-between\">\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1\">All the tools your team needs</h3>\r\n            <span>Organize and assign tasks.</span>\r\n            <span>With lists, teams see immediately what they need to do,</span>\r\n            <span>which tasks are a priority, and when work is due.</span>\r\n            </div>\r\n          <img className=\"feature-img w-30\" src={TeamworkImg}/>\r\n          </div>\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1\">Manage your time wisely</h3>\r\n            <span>Instantly see which projects are on track,</span>\r\n            <span>which ones are falling behind,</span>\r\n            <span>and what every team member is working on at a glance.</span>\r\n            </div>\r\n          <img className=\"feature-img w-25\" src={TimeImg}/>\r\n          </div>\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1\">Organize anything with anyone, anywhere</h3>\r\n            <span>Choose the project view that suits your style,</span>\r\n            <span> and collaborate no matter where you are.</span>\r\n            </div>\r\n          <img className=\"feature-img \" src={OrganizeImg}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\BoardList.jsx",["442","443","444","445","446","447","448","449"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Board.jsx",["450","451"],"import { connect } from 'react-redux'\r\nimport { remove, add, loadBoard, update } from '../store/actions/boardsAction.js';\r\nimport { loading } from '../store/actions/systemAction';\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport React, { Component } from 'react'\r\nimport { TaskList } from '../cmps/board/TaskList'\r\nimport { BoardNavbar } from '../cmps/board/boardNavbar/BoardNavbar'\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Route, Switch } from 'react-router';\r\nimport { TaskDetails } from '../cmps/board/taskDetails/TaskDetails';\r\nimport { boardService } from '.././services/boardService.js'\r\nimport { utilService } from '../services/generalService/utilService.js'\r\nimport { socketService } from '../services/generalService/socketService.js'\r\nimport { ModalWrapper } from '../cmps/shared/ModalWrapper.jsx';\r\n\r\nconst EMPTY_GROUP = { title: '' }\r\n\r\nclass _Board extends Component {\r\n    state = {\r\n        group: EMPTY_GROUP,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { boardId } = this.props.match.params\r\n        this.props.loadBoard(boardId);\r\n        this.props.loadUsers();\r\n        socketService.setup()\r\n        socketService.on('updated board', () => {\r\n            console.log('recieved update')\r\n            this.props.loadBoard()\r\n        })\r\n        socketService.emit('add member', boardId)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('updated board', this.props.loadBoard)\r\n        socketService.terminate()\r\n    }\r\n\r\n\r\n    onUpdate = (updateBoard) => {\r\n        console.log(updateBoard)\r\n        this.props.update(updateBoard)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({\r\n            group: {\r\n                ...prevState.group,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n\r\n    onAddGroup = () => {\r\n        const copyBoard = { ...this.props.board };\r\n        this.setState({ group: { ...this.state.group, id: utilService.makeId() } })\r\n        copyBoard.groups.push(utilService.formatNewGroup(this.state.group))\r\n        this.props.update(copyBoard)\r\n        this.setState({ group: EMPTY_GROUP })\r\n    }\r\n\r\n    onDragEnd = res => {\r\n        console.log()\r\n        const { destination, source, type } = res\r\n        if (!destination) return\r\n        if (destination.droppableId === source.droppableId &&\r\n            destination.index === source.index) return\r\n        const copyBoard = { ...this.props.board }\r\n        const activity = {}\r\n        if (type === 'task') {\r\n            const sourceListIdx = boardService.getGroupIdxById(copyBoard, source.droppableId)\r\n            const destinationListIdx = boardService.getGroupIdxById(copyBoard, destination.droppableId)\r\n            const task = copyBoard.groups[sourceListIdx].tasks.splice(source.index, 1)\r\n            copyBoard.groups[destinationListIdx].tasks.splice(destination.index, 0, task[0])\r\n            const sourceListName = copyBoard.groups[sourceListIdx].title\r\n            const destinationListName = copyBoard.groups[destinationListIdx].title\r\n            activity.txt = `has moved ${task[0].title} from ${sourceListName} to ${destinationListName}`\r\n            console.log(activity.txt)\r\n        }\r\n        else {\r\n            const list = copyBoard.groups.splice(source.index, 1)\r\n            copyBoard.groups.splice(destination.index, 0, list[0])\r\n            activity.txt = `has moved list ${list[0].title}`\r\n        }\r\n        this.props.update(copyBoard)\r\n        console.log('Moved and updated!', copyBoard)\r\n    }\r\n\r\n    onCloseDetails = () => {\r\n        this.props.history.push(`/board/${this.props.board._id}`)\r\n\r\n    }\r\n    render() {\r\n        const { board } = this.props;\r\n        if (!board) {\r\n            return <div className=\"loader w-100 h-100 flex center content-center\">Loading...</div>\r\n        }\r\n        // loading ui\r\n        // this.props.loading();\r\n        // if(this.props.isLoading) return <h1 className=\"w-100 h-100 flex center content-center\">Loading...</h1>\r\n        if (this.props.isLoading) return <div className=\"loader w-100 h-100 flex center content-center\">Loading...</div>\r\n\r\n\r\n        return (\r\n            <DragDropContext\r\n                onDragEnd={this.onDragEnd}\r\n            >\r\n                <section className=\"board flex column w-100 animate__animated animate__fadeInRight \">\r\n                    <BoardNavbar users={this.props.users} board={board} updateBoard={this.onUpdate} />\r\n\r\n                    <div className=\"board-list flex w-100 \"\r\n\r\n                    >\r\n                        <Droppable droppableId=\"all-groups\"\r\n                            direction=\"horizontal\"\r\n                            type=\"TaskList\"\r\n                        >\r\n                            {provided => (\r\n                                <ul\r\n                                    className=\"groups clean-list flex \"\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}\r\n                                >\r\n                                    {board && board.groups.map((group, idx) => <TaskList index={idx}\r\n                                        key={group.id}\r\n                                        board={board}\r\n                                        group={group}\r\n                                        updateBoard={this.onUpdate} />)}\r\n                                    {provided.placeholder}\r\n                                </ul>\r\n\r\n                            )}\r\n                        </Droppable>\r\n                        <div className=\"group add-group flex\">\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.onAddGroup()\r\n                            }}>\r\n                                <input className=\"add-group\" value={this.state.group.title} type=\"text\" placeholder=\"+ Add another list\" name=\"title\" onChange={this.handleChange} />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Switch>\r\n                        <Route path={'/board/:boardId/:groupId/:taskId'} render={(props) => <ModalWrapper onClick={this.onCloseDetails}><TaskDetails {...props} /></ModalWrapper>}></Route>\r\n                    </Switch>\r\n                </section>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        isLoading: state.systemModule.isLoading,\r\n        users: state.userModule.users\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    remove,\r\n    add,\r\n    loadBoard,\r\n    update,\r\n    loadUsers\r\n    // loading\r\n}\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Chat.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\UserDetails.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\boardService.js",["452","453"],"import { utilService } from './generalService/utilService.js'\r\nimport { storageService } from './generalService/asyncStorageService.js'\r\nimport {httpService} from '../services/generalService/httpService.js'\r\n\r\nwindow.storageService = storageService;\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    update,\r\n    add,\r\n    getGroupById,\r\n    getTaskById,\r\n    getGroupIdxById,\r\n    checklistPreview,\r\n    getTaskIdxById,\r\n    checklistPrecent,\r\n    updateTaskAtBoard\r\n}\r\n\r\n\r\nfunction query() {\r\n    // return storageService.query(STORAGE_KEY)\r\n    return httpService.get('board')\r\n}\r\n\r\nfunction getById(boardId) {\r\n    // const board = storageService.get(STORAGE_KEY, boardId);\r\n    // return board\r\n    return httpService.get(`board/${boardId}`)\r\n\r\n}\r\n\r\nfunction remove(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function add() {\r\n    // const newBoard = _createBoard()\r\n    // const savedBoard = storageService.post(STORAGE_KEY, newBoard)\r\n    // return savedBoard\r\n    const board = {title: 'new' ,style:{}}\r\n    const res = await httpService.post(`board`, board)\r\n    return res\r\n}\r\n\r\nasync function update(board) {\r\n    // return storageService.put(STORAGE_KEY, board)\r\n    board.activities = []\r\n    \r\n    const res = await httpService.put(`board/${board._id}`, board)\r\n    return res\r\n\r\n}\r\n\r\n//task crud\r\nfunction getGroupById(board, groupId) {\r\n    return board.groups.find(group => group.id === groupId);\r\n}\r\n\r\nfunction getGroupIdxById(board, groupId) {\r\n    return board.groups.findIndex(group => group.id === groupId);\r\n}\r\n\r\nfunction getTaskIdxById(group, taskId) {\r\n    return group.tasks.findIndex(task => task.id === taskId);\r\n}\r\n\r\nfunction getTaskById(group, taskId) {\r\n    return group.tasks.find(task => task.id === taskId)\r\n}\r\n\r\nfunction checklistPreview(task) {\r\n    const checklists = task.checklists\r\n    let isDone = false\r\n    let allTodos = 0;\r\n    let doneTodos = 0;\r\n    checklists.forEach(checkList => {\r\n        allTodos += checkList.todos.length;\r\n        checkList.todos.forEach(todo => {\r\n            if (todo.isDone) doneTodos++\r\n        })\r\n    });\r\n    if (doneTodos === allTodos && allTodos) isDone = true;\r\n    const str = `${doneTodos}/${allTodos}`\r\n    const res = { str, isDone}\r\n    return res\r\n}\r\n\r\nfunction checklistPrecent(checklist){\r\n    let doneTodos = 0;\r\n    checklist.todos.forEach(todo => {\r\n        if(todo.isDone) doneTodos++\r\n    })\r\n    const precent = (doneTodos / checklist.todos.length) * 100 \r\n    \r\n    return precent\r\n}\r\n\r\nfunction _updateTaskAtGroup(group, updateTask){\r\n    const idx = group.tasks.findIndex( task => {\r\n        task.id = updateTask.id;\r\n    })\r\n    group.tasks.splice(idx, 1, updateTask);\r\n    return group;\r\n}\r\n\r\nfunction _updateGroupAtBoard( board ,updateGroup){\r\n    const idx = getGroupIdxById(board, updateGroup.id)\r\n    board.groups[idx] = updateGroup;\r\n    return board;\r\n}\r\n\r\nfunction updateTaskAtBoard(board,group, updateTask){\r\n    const updateGroup =  _updateTaskAtGroup(group, updateTask);\r\n    const updateBoard = _updateGroupAtBoard(board, updateGroup);\r\n    return updateBoard;\r\n}","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\socketService.js",["454"],"import io from 'socket.io-client'\r\nimport {httpService} from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\nfunction cb(x) {console.log(x)}\r\nsocketService.on('baba', cb)\r\nsocketService.on('mama', cb)\r\nsocketService.on('lala', cb)\r\nsocketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\utilService.js",["455"],"\r\nexport const utilService = {\r\n    delay,\r\n    getRandomInt,\r\n    formatNewTask,\r\n    makeId,\r\n    isFalse,\r\n    formatNewGroup,\r\n    timeAgo\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction isFalse(el) {\r\n    return Array.isArray(el) ? !!el.length : !!el\r\n}\r\n\r\nfunction formatNewTask(task) {\r\n    return { id: makeId(), description: '', comments: [], checklists: [], members: [], ...task }\r\n}\r\n\r\nfunction formatNewGroup(group) {\r\n    return { id: makeId(), style: {}, tasks: [], ...group }\r\n}\r\n\r\nconst MONTH_NAMES = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n  \r\n  \r\n  function getFormattedDate(date, prefomattedDate = false, hideYear = false) {\r\n    const day = date.getDate();\r\n    const month = MONTH_NAMES[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    const hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n  \r\n    if (minutes < 10) {\r\n      // Adding leading zero to minutes\r\n      minutes = `0${ minutes }`;\r\n    }\r\n  \r\n    if (prefomattedDate) {\r\n      // Today at 10:20\r\n      // Yesterday at 10:20\r\n      return `${ prefomattedDate } at ${ hours }:${ minutes }`;\r\n    }\r\n  \r\n    if (hideYear) {\r\n      // 10. January at 10:20\r\n      return `${ day }. ${ month } at ${ hours }:${ minutes }`;\r\n    }\r\n  \r\n    // 10. January 2017. at 10:20\r\n    return `${ month.slice(0,3) } ${ day }`;\r\n  }\r\n  \r\n  \r\n  // --- Main function\r\n  function timeAgo(dateParam) {\r\n    if (!dateParam) {\r\n      return null;\r\n    }\r\n  \r\n    const date = typeof dateParam === 'object' ? dateParam : new Date(dateParam);\r\n    const DAY_IN_MS = 86400000; // 24 * 60 * 60 * 1000\r\n    const today = new Date();\r\n    const yesterday = new Date(today - DAY_IN_MS);\r\n    const seconds = Math.round((today - date) / 1000);\r\n    const minutes = Math.round(seconds / 60);\r\n    const isToday = today.toDateString() === date.toDateString();\r\n    const isYesterday = yesterday.toDateString() === date.toDateString();\r\n    const isThisYear = today.getFullYear() === date.getFullYear();\r\n  \r\n  \r\n    if (seconds < 5) {\r\n      return 'now';\r\n    } else if (seconds < 60) {\r\n      return `${ seconds } seconds ago`;\r\n    } else if (seconds < 90) {\r\n      return 'about a minute ago';\r\n    } else if (minutes < 60) {\r\n      return `${ minutes } minutes ago`;\r\n    } else if (isToday) {\r\n      return getFormattedDate(date, 'Today'); // Today at 10:20\r\n    } else if (isYesterday) {\r\n      return getFormattedDate(date, 'Yesterday'); // Yesterday at 10:20\r\n    } else if (isThisYear) {\r\n      return getFormattedDate(date, false, true); // 10. January at 10:20\r\n    }\r\n  \r\n    \r\n    return getFormattedDate(date); // 10. January 2017. at 10:20\r\n  }","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\userService.js",["456"],"// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './generalService/httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx",["457","458"],"import { TaskPreview } from '../board/TaskPreview'\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Component } from 'react';\r\nimport { boardService } from '../../services/boardService.js'\r\nimport { utilService } from '../../services/generalService/utilService.js'\r\nimport { HiOutlineMenuAlt4 } from 'react-icons/hi'\r\nconst EMPTY_TASK = { title: '' }\r\nconst EMPTY_GROUP = { title: '' }\r\n\r\nexport class TaskList extends Component {\r\n    state = {\r\n        group: EMPTY_GROUP,\r\n        task: EMPTY_TASK\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ group: this.props.group })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({\r\n            task: {\r\n                ...prevState.task,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    updateGroup = () => {\r\n        if (!this.state.group.title) return;\r\n        const copyBoard = { ...this.props.board };\r\n        this.props.updateBoard(copyBoard)\r\n        const groupIdx = boardService.getGroupIdxById(copyBoard, this.state.group.id)\r\n        copyBoard.groups[groupIdx] = this.state.group\r\n        console.log(copyBoard)\r\n    }\r\n\r\n    handleChangeGroup = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({\r\n            group: {\r\n                ...prevState.group,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    onAddTask = () => {\r\n        if (!this.state.task.title) return;\r\n        const { group } = this.props\r\n        const copyBoard = { ...this.props.board };\r\n        const groupIdx = boardService.getGroupIdxById(copyBoard, group.id)\r\n        copyBoard.groups[groupIdx].tasks.push(utilService.formatNewTask(this.state.task))\r\n        this.props.updateBoard(copyBoard)\r\n        this.setState({ task: EMPTY_TASK })\r\n    }\r\n\r\n    render() {\r\n        const { board, group, updateBoard, index } = this.props\r\n\r\n        return (\r\n            <Draggable index={index} isDragDisabled={false} draggableId={group.id} >\r\n                {(provided, snapshot) => {\r\n                    return <li className=\"group br-3\"\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                    >\r\n                        <form className=\"\" onSubmit={(ev) => {\r\n                            ev.preventDefault()\r\n                            this.updateGroup()\r\n\r\n                        }}>\r\n                            <div className=\"group-title w-100 flex center space-between pb-2\">\r\n                                <input className=\"app-input font-w2 font-m lh-20 \" onBlur={this.updateGroup} type=\"text\" value={this.state.group.title} name=\"title\" onChange={this.handleChangeGroup} />\r\n                                <div className=\"group-menu\">...</div>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"wrap-task-list\">\r\n\r\n                            <div className=\"task-list flex column center content-center\">\r\n                                <Droppable key={index} droppableId={group.id} type='task'>\r\n                                    {(provided) => (\r\n                                        <div className=\"task-list-droppable\" ref={provided.innerRef} {...provided.droppableProps} {...provided.dragHandleProps}>\r\n                                            {group.tasks.map((task, idx) => (\r\n                                                <TaskPreview key={task.id}\r\n                                                    board={board}\r\n                                                    index={idx}\r\n                                                    groupId={group.id}\r\n                                                    updateBoard={updateBoard}\r\n                                                    task={task}\r\n                                                />\r\n                                            ))}\r\n                                            {!utilService.isFalse(group.tasks) && <h1 className=\"task-title fam-1 font-m\">No tasks to show</h1>}\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </div>\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.onAddTask()\r\n                                console.log(ev)\r\n                            }}>\r\n                                <input className=\"add-task\" value={this.state.task.title} type=\"text\" placeholder=\"+ Add another card\" name=\"title\" onChange={this.handleChange} />\r\n                            </form>\r\n                        </div>\r\n                    </li>\r\n                }}\r\n            </Draggable>)\r\n        /*    </div> */\r\n    }\r\n}","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\Upload.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\httpService.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardNavbar.jsx",["459"],"import { MembersBoard } from '../MembersBoard';\r\nimport { MdKeyboardArrowDown } from 'react-icons/md'\r\nimport { RiDashboardLine } from 'react-icons/ri'\r\nimport { AiOutlineStar } from 'react-icons/ai'\r\nimport { Component } from 'react';\r\n\r\n\r\n\r\n\r\nexport class BoardNavbar extends Component {\r\n    state = {\r\n        title: this.props.board.title\r\n    }\r\n    onChangeBoardName = () => {\r\n        const board =this.props.board\r\n        board.title = this.state.title\r\n        this.props.updateBoard(board)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState({[field]:value})\r\n    }\r\n    render() {\r\n        const { board, onUpdate } = this.props\r\n        if (!board) return <div>Loading...</div>\r\n        return (\r\n            <nav className=\"board-navbar flex space-between font-1 c-white fam-1 mb-03\">\r\n                <ul className=\"left-bar flex center space-evenly \">\r\n                    <li className=\"btn-board\"><RiDashboardLine />Board<MdKeyboardArrowDown /></li>\r\n                    <li className=\"btn-board \"><AiOutlineStar /></li>\r\n                    <li className=\"btn-board bold\"><form onSubmit={(ev) => {\r\n                        ev.preventDefault()\r\n                        this.onChangeBoardName(ev)\r\n                    }}>\r\n                        <input type=\"text\" className=\"app-input nav-board-input font-w2 font-m lh-20 \" name=\"title\" onChange={this.handleChange} value={this.state.title} onBlur={ this.onChangeBoardName } />\r\n                    </form></li>\r\n                    <li className=\"btn-board\">Visiblity</li>\r\n                    <li className=\"btn-board\"><MembersBoard /></li>\r\n                    <li className=\"btn-board\">invite</li>\r\n                </ul>\r\n                <ul className=\"right-bar flex center\">\r\n                    <li className=\"btn-board\">Show-menu</li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\reviewService.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\data\\board.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx",["460","461","462","463","464","465"],"import { Link } from 'react-router-dom'\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Provider } from 'react-redux';\r\nimport { boardService } from '../../services/boardService.js'\r\nimport { BsCheckBox } from 'react-icons/bs'\r\nimport { FaRegCommentDots } from 'react-icons/fa'\r\nimport { AiOutlineClockCircle, AiOutlineClose } from 'react-icons/ai'\r\nimport { GrTextAlignFull } from 'react-icons/gr'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/generalService/utilService'\r\nimport React, { Component } from 'react'\r\nimport { UserPreview } from './UserPreview.jsx';\r\n\r\nimport { toggleLabel } from '../../store/actions/systemAction.js';\r\n\r\n\r\n\r\n// export function TaskPreview({ board, index, task, updateBoard, groupId }) {\r\nclass _TaskPreview extends Component {\r\n\r\n    getStyle = (style, snapshot) => {\r\n        if (!snapshot.isDropAnimating) {\r\n            return style;\r\n        }\r\n        const { moveTo, curve, duration } = snapshot.dropAnimation;\r\n        // move to the right spot\r\n        const translate = `translate(${moveTo.x}px, ${moveTo.y}px)`;\r\n        // add a bit of turn for fun\r\n        const rotate = 'rotate(0.01turn)';\r\n\r\n        // patching the existing style\r\n        return {\r\n            ...style,\r\n            background: '#fff',\r\n            transform: `${translate} ${rotate}`,\r\n            // slowing down the drop because we can\r\n            transition: `all ${curve} 0.2s`,\r\n        };\r\n    }\r\n\r\n    onRemoveTask = (taskId) => {\r\n        const { board, index, task, updateBoard, groupId } = this.props\r\n        const group = board.groups[boardService.getGroupIdxById(board, groupId)]\r\n        board.groups[boardService.getGroupIdxById(board, groupId)].tasks.splice(boardService.getTaskIdxById(group, taskId), 1)\r\n        updateBoard({ ...board })\r\n    }\r\n    render() {\r\n        const { board, index, task, updateBoard, groupId } = this.props\r\n        const isLabelOpen = this.props.isLabelOpen;\r\n        return <Draggable\r\n            draggableId={task.id}\r\n            index={index}\r\n        // isDragDisabled={false}\r\n        >\r\n            {(provided, snapshot) => {\r\n                return (\r\n                    <div\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                        isDragging={snapshot.isDragging && !snapshot.isDropAnimating ? 'true' : 'false'}\r\n                        style={this.getStyle(provided.draggableProps.style, snapshot)}\r\n                    >\r\n                        <div className=\"wrap-list-task br-3\">\r\n                            <div className=\"wrap-task-prev\">\r\n                                <div className=\"task-preview flex column\">\r\n                                    {/* <Link to={`/board/${board._id}/${task.id}`}> */}\r\n                                    {utilService.isFalse(task.labelIds) &&\r\n                                        <div className=\"flex row space-between center w-100\">\r\n                                            <div className=\"label-task-prev\">\r\n                                                <div className=\"labels-container wrap flex\" onClick={(ev) => {\r\n                                                    ev.stopPropagation();\r\n                                                }}>\r\n                                                    {\r\n                                                        task.labelIds.map(labelId => {\r\n                                                            const label = board.labels.find(label => {\r\n                                                                return label.id === labelId;\r\n                                                            })\r\n\r\n                                                            if (label) {\r\n                                                                return <div\r\n                                                                    key={label.id}\r\n                                                                    className={`preview-label ${isLabelOpen && \"label-open\"}`}\r\n                                                                    onClick={() => this.props.toggleLabel(!isLabelOpen)}\r\n                                                                    style={{ backgroundColor: label.color }}\r\n                                                                >\r\n                                                                    {this.props.isLabelOpen && label.title}\r\n                                                                </div>\r\n                                                            }\r\n                                                        })}\r\n                                                </div>\r\n                                            </div>\r\n                                            <span className=\"cur-pointer fam-1 font-s bold\" onClick={() => { this.onRemoveTask(task.id) }}><AiOutlineClose /></span>\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <Link to={`/board/${board._id}/${groupId}/${task.id}`}>\r\n\r\n\r\n                                        <h1 className=\"task-title fam-1 font-m\">{task.title}</h1>\r\n                                        <div className=\"task-mini-details flex w-100 content-start  gap-xs fam-1 c-stand\">\r\n                                            {utilService.isFalse(task.members) && <small className=\"flex center\">{task.members.map(member => { return <UserPreview user={member} /> }).splice(0, 3)}</small>}\r\n                                            {utilService.isFalse(task.comments) && <small className=\"flex center\"><FaRegCommentDots /></small>}\r\n                                            {utilService.isFalse(task.checklists) && <div className={`flex row center ${boardService.checklistPreview(task).isDone && \"check-list-done-prev\"}`}>\r\n                                                <BsCheckBox />\r\n                                                <small>{boardService.checklistPreview(task).str}</small>\r\n                                            </div>}\r\n                                            {task.dueDate && <div className=\"flex row center\">\r\n                                                <AiOutlineClockCircle />\r\n                                                <small>\r\n                                                    {task.dueDate}\r\n                                                </small>\r\n                                            </div>}\r\n                                            {task.description && <small className=\"flex center\"><GrTextAlignFull /></small>}\r\n                                        </div>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            }\r\n        </Draggable>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        isLabelOpen : state.systemModule.isLabelsOpen\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    toggleLabel\r\n}\r\nexport const TaskPreview = connect(mapStateToProps, mapDispatchToProps)(_TaskPreview)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskDetails.jsx",["466","467","468","469","470","471","472","473"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { boardService } from '../../../services/boardService.js'\r\nimport { remove, add, loadBoard, update } from '../../../store/actions/boardsAction.js';\r\nimport onClickOutside from \"react-onclickoutside\";\r\nimport { BsCardChecklist } from 'react-icons/bs'\r\nimport { GrTextAlignFull } from 'react-icons/gr'\r\n\r\nimport { utilService } from '../../../services/generalService/utilService.js';\r\nimport { CheckList } from './CheckList';\r\nimport { ActionList } from './action/ActionList';\r\nimport { UserPreview } from '../UserPreview.jsx';\r\n// import {TaskTitle} from '../taskDetails/TaskTitle';\r\n\r\n\r\n\r\nclass _TaskDetails extends Component {\r\n    state = {\r\n        group: null,\r\n        task: null,\r\n        onFocus: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { boardId, taskId, groupId } = this.props.match.params;\r\n        const board = { ...this.props.board };\r\n        const group = boardService.getGroupById(board, groupId);\r\n        const task = boardService.getTaskById(group, taskId);\r\n        this.setState({ ...this.state, group, task })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n            const { boardId, taskId, groupId } = this.props.match.params;\r\n            const board = { ...this.props.board };\r\n            const group = boardService.getGroupById(board, groupId);\r\n            const task = boardService.getTaskById(group, taskId);\r\n            this.setState({ ...this.state, group, task })\r\n        }\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({\r\n            task: {\r\n                ...prevState.task,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    handleClickOutside = evt => {\r\n        // ..handling code goes here...\r\n    };\r\n\r\n    updateTask = () => {\r\n        if (!this.state.task.title) return;\r\n        const copyBoard = { ...this.props.board };\r\n        const groupIdx = boardService.getGroupIdxById(copyBoard, this.state.group.id)\r\n        const taskIdx = boardService.getTaskIdxById(this.state.group, this.state.task.id)\r\n        copyBoard.groups[groupIdx].tasks[taskIdx] = this.state.task\r\n        this.props.update(copyBoard)\r\n    }\r\n\r\n    updateTaskState = (task) => {\r\n        this.setState({ task })\r\n    }\r\n\r\n    onAddCheckList = (task) => {\r\n        if (!task.checklists) {\r\n            task.checklists = [];\r\n        }\r\n        task.checklists.push({ id: utilService.makeId(), title: 'Checklist', todos: [] })\r\n        this.setState({ task })\r\n        this.updateTask()\r\n    }\r\n    onRemoveCheckList = (ChecklistIdx) => {\r\n        const { task } = this.state\r\n        const removed = task.checklists.splice(ChecklistIdx, 1)\r\n        this.setState({ task: { ...task } }, this.updateTask)\r\n    }\r\n\r\n    onDeleteTask = () => {\r\n        const { boardId } = this.props.match.params;\r\n        const copyboard = this.props.board\r\n        const { task, group } = this.state\r\n        group.tasks.splice(boardService.getTaskIdxById(group, task.id), 1)\r\n        copyboard.groups[boardService.getGroupIdxById(copyboard, group.id)] = group\r\n        this.props.update(copyboard)\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n\r\n    onAddMemberToTask = (addedMember) => {\r\n        const { task } = this.state;\r\n        const memberIdx = task.members.findIndex(member => member._id === addedMember._id)\r\n        if (memberIdx !== -1) {\r\n            task.members.splice(memberIdx, 1)\r\n        }\r\n        else task.members.push(addedMember)\r\n        this.updateTask()\r\n    }\r\n\r\n    onSaveDueDate = (date) =>{\r\n        const {task} = this.state;\r\n        task.dueDate = {date,isDone:false}\r\n        this.updateTask()\r\n    }\r\n\r\n    isMemberChecked = (memberCheck) => {\r\n        const { task } = this.state;\r\n        const memberIdx = task.members.findIndex(member => member._id === memberCheck._id)\r\n        if (memberIdx !== -1) {\r\n            return 'checked'\r\n        }\r\n        else return ''\r\n    }\r\n\r\n    isDueDateDone = (val) => {\r\n        const { task } = this.state;\r\n        console.log('val',val)\r\n\r\n    }\r\n\r\n    toggleModal = (className) => {\r\n        const modals = document.querySelectorAll('.action-modal');\r\n        const currModal = document.querySelector(`.${className}`);\r\n        if (modals) {\r\n            modals.forEach(\r\n                el => el.classList.add('d-none'));\r\n        }\r\n        if (currModal) {\r\n            currModal.classList.remove('d-none');\r\n        }\r\n    }\r\n\r\n    onAddLabelTask = (labelId) => {\r\n        const task = this.state;\r\n        if (!task.labels) {\r\n            task.labels = [];\r\n        }\r\n        task.labels.push(labelId);\r\n    }\r\n\r\n    render() {\r\n        const { task } = this.state;\r\n        const { board } = this.props\r\n        if (!task) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"task-details w-50 flex bg-modal pos-fixed c-stand fam-1 pad-1\">\r\n                <div className=\"info-task flex column w-70 h-100 content-start\">\r\n                    {/* Title */}\r\n                    <form className=\"task-title flex column content-start pb-2 w-100\" onSubmit={(ev) => {\r\n                        ev.preventDefault()\r\n                        this.updateTask()\r\n                    }}>\r\n                        <div className=\"task-title flex center h-33\">\r\n                            <label htmlFor=\"title\" className=\"font-6 flex center w-100\"><BsCardChecklist className=\"ico\" />\r\n                                <input onBlur={this.updateTask} type=\"text\" value={task.title} name=\"title\" className=\"input-details title-task-input\" onChange={this.handleChange} />\r\n                            </label>\r\n                        </div>\r\n                        <h3 className=\"fam-1 font-2 left-self h-20 center pb-2\">in list {this.state.group.title}</h3>\r\n                    </form>\r\n                    <section className=\"flex wrap\">\r\n                        <div className=\"task-members\">\r\n                            {task.members.length > 0 && <h3 className=\"font-m\">members</h3>}\r\n                            <ul className=\"flex center\">\r\n                                {task.members.map(member => {\r\n                                    return <UserPreview user={member} />\r\n                                })}\r\n                                {task.members.length > 0 && <span onClick={() => { this.toggleModal('members-wrap-modal') }} className=\"user-preview flex center content-center font-m\">+</span>}\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"task-labels flex center\">\r\n                            <ul className=\"flex center\">\r\n                                {task.labelIds && task.labelIds.map(labelId => {\r\n                                    const label = board.labels.find(label => {\r\n                                        return label.id === labelId;\r\n                                    })\r\n                                    if (label)\r\n                                        return <div key={label.id} className={`details-label bold ${this.state.isLabelOpen && \"label-open\"} flex center`} onClick={() => { this.toggleModal('label-wrap-modal') }} style={{ backgroundColor: label.color }}>\r\n                                            {label.title}\r\n                                        </div>\r\n                                })}\r\n                                {task.labelIds && <span onClick={() => { this.toggleModal('label-wrap-modal') }} className=\"avatar\">+</span>}\r\n                            </ul>\r\n                        </div>\r\n                        {task.dueDate && <div className=\"task-duedate flex center\">\r\n                            <input onChange={(ev) => {this.isDueDateDone(ev.target.value)}} type=\"checkbox\" />\r\n                              <p>{task.dueDate}</p> \r\n                        </div>}\r\n                    </section>\r\n                    <section className=\"desc-section\">\r\n                        <div className=\"desc-header flex row\">\r\n                            <GrTextAlignFull /><label>Description</label>\r\n                        </div>\r\n                        <form onSubmit={(ev) => {\r\n                            ev.preventDefault()\r\n                            this.updateTask()\r\n                        }}>\r\n\r\n                            <textarea placeholder=\"Add a description for this task...\" onBlur={this.updateTask} type=\"textArea\" value={task.description} name=\"description\" className=\"w-90 input-details content-gap\" onChange={this.handleChange} />\r\n                        </form>\r\n                    </section>\r\n                    {utilService.isFalse(task.checklists) && <ul className=\"todos clean-list\">\r\n                        {task.checklists.map((checklist, idx) => {\r\n                            return <CheckList key={checklist.id} onRemoveCheckList={this.onRemoveCheckList} idx={idx} checklists={task.checklists} handleChange={this.handleChange} updateTask={this.updateTask} checklist={checklist} updateTaskState={this.updateTaskState} task={task} />\r\n                        })}\r\n                    </ul>}\r\n                    <section className=\"comment-section\">\r\n                        {/* <div className=\"new-comment\">\r\n                            <div className=\"task-memeber-img\">\r\n                                <img src=\"\" />\r\n                                <form>\r\n                                    <div class=\"comment-box\">\r\n                                        <textarea class=\"comment-textarea\" placeholder=\"Write a comment...\" name=\"txt\">\r\n                                        </textarea>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div> */}\r\n                        {task.comments && <ul className=\"comments clean-list\">\r\n                            {task.comments.map(comment => {\r\n                                return <li className=\"full-comment flex row\">\r\n                                    <img className=\"avatar\" src={comment.byMember.imgUrl} />\r\n                                    <div className=\"comment-text flex column\">\r\n                                        <h3 className=\"commenter-name\">{comment.byMember.fullname}</h3>\r\n                                        {comment.txt}\r\n                                        <small>{utilService.timeAgo(comment.createdAt)}</small>\r\n                                    </div>\r\n                                </li>\r\n                            })}\r\n                        </ul>}\r\n                    </section>\r\n                </div>\r\n                <ActionList onDeleteTask={this.onDeleteTask} toggleModal={this.toggleModal} isMemberChecked={this.isMemberChecked} onAddMemberToTask={this.onAddMemberToTask} task={task} group={this.state.group} onAddCheckList={this.onAddCheckList} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    remove,\r\n    add,\r\n    loadBoard,\r\n    update\r\n}\r\nexport const TaskDetails = connect(mapStateToProps, mapDispatchToProps)(_TaskDetails)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckList.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckListStatus.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskTitle.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\ActionList.jsx",["474","475"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { MdLabelOutline } from 'react-icons/md'\r\nimport { AiOutlineClockCircle, AiOutlineCheckSquare, AiOutlineDelete } from 'react-icons/ai'\r\nimport { BiCopy } from 'react-icons/bi'\r\nimport { FiUsers } from 'react-icons/fi'\r\nimport { BsImage, BsArrowRight } from 'react-icons/bs'\r\nimport { LabelModal } from './actionModal/LabelModal';\r\nimport { MembersModal } from './actionModal/MembersModal'\r\n\r\n\r\nclass _ActionList extends Component {\r\n    state = {\r\n        task: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState({\r\n            task: this.props.task\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    toggleModal = (className) => {\r\n        const modals = document.querySelectorAll('.action-modal');\r\n        const currModal = document.querySelector(`.${className}`);\r\n        console.log(modals);\r\n        console.log(currModal);\r\n        if (modals) {\r\n            modals.forEach(\r\n                el => el.classList.add('d-none'));\r\n        }\r\n        if (currModal) {\r\n            currModal.classList.remove('d-none');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { task } = this.state\r\n        if (!task) return <h1>Loading...</h1>\r\n        return (\r\n            <div className=\"menu-task flex column w-40 content-start right\">\r\n                <div className=\"close-details fam-2 font-1 bold pad-1\">X</div>\r\n                <div className=\"details-action flex column center pad-1 w-80\">\r\n                    <label htmlFor=\"actions\" className=\"font-m pb-3\">ACTIONS</label>\r\n                    <ul className=\"action-menu flex column w-100 clean-list font-m pad-0 fw-2\">\r\n\r\n                        <li className=\"label-wrap\">\r\n                            <li className=\"btn-action w-100 \" onClick={() => { this.toggleModal('label-wrap-modal') }}><MdLabelOutline />Labels</li>\r\n                            <LabelModal toggleModal={() => { this.toggleModal() }} />\r\n                        </li>\r\n\r\n                        <li className=\"members-wrap\">\r\n                            <li className=\"btn-action w-100 \" onClick={() => {this.toggleModal('members-wrap-modal')}}><FiUsers />Members</li>\r\n                            <MembersModal toggleModal={() => { this.toggleModal() }} />\r\n                        </li>\r\n\r\n                        <li className=\"btn-action\"><AiOutlineClockCircle />Due Date</li>\r\n                        <li onClick={() => { this.onAddCheckList(task) }} className=\"btn-action\"><AiOutlineCheckSquare />Checklist</li>\r\n                        <li className=\"btn-action\"><BsImage />Image</li>\r\n                        <li className=\"btn-action\"><BsArrowRight />Move</li>\r\n                        <li className=\"btn-action\"><BiCopy />Copy</li>\r\n                        <li onClick={() => { this.onDeleteTask() }} className=\"btn-action\"><AiOutlineDelete />Delete</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const ActionList = connect(mapStateToProps, mapDispatchToProps)(_ActionList)\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\LabelModal.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\ModalAction.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\OverlayAction.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MembersModal.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\systemAction.js",["476"],"import { utilService } from '../../services/generalService/utilService';\r\n\r\nexport function loading() { // Action Creator\r\n    return async dispatch => {\r\n        try {\r\n            dispatch('LOADING_DONE');\r\n            dispatch('LOADING_START');\r\n            setTimeout(() => {\r\n                dispatch('LOADING_DONE');\r\n            }, 1500);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function toggleLabel(toggleValue) {\r\n    return async dispatch => {\r\n        try {\r\n            const action = {\r\n                type: 'TOGGLE_LABEL',\r\n                value: toggleValue\r\n            }\r\n            dispatch(action)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js",["477","478"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\LabelTask.jsx",["479","480","481"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { FiEdit2 } from 'react-icons/fi'\r\nimport { withRouter } from \"react-router\";\r\nimport { update } from '../../../../store/actions/boardsAction';\r\nimport { boardService } from '../../../../services/boardService';\r\n\r\nclass _LabelTask extends Component {\r\n    state = {\r\n        isDisable: true,\r\n        title: this.props.label.title ? this.props.label.title:'',\r\n        task: null,\r\n        group: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { taskId, groupId } = this.props.match.params;\r\n        const board = this.props.board;\r\n        const group = boardService.getGroupById(board, groupId);\r\n        const task = boardService.getTaskById(group, taskId);\r\n        this.setState({ ...this.state, task: task, group: group });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props !== prevProps) {\r\n            const { boardId, taskId, groupId } = this.props.match.params;\r\n            const board = { ...this.props.board };\r\n            const group = boardService.getGroupById(board, groupId);\r\n            const task = boardService.getTaskById(group, taskId);\r\n            this.setState({ ...this.state, task: task, group: group });\r\n        }\r\n\r\n    }\r\n\r\n    toggleLabel(labelId) {\r\n        const { task, group } = this.state;\r\n        const board = { ...this.props.board };\r\n        if (!task.labelIds) {\r\n            task.labelIds = []\r\n        }\r\n        const labelIdx = task.labelIds.findIndex(currLabelId => currLabelId === labelId);\r\n        if (labelIdx > -1) {\r\n            task.labelIds.splice(labelIdx, 1)\r\n        } else task.labelIds.push(labelId)\r\n        const updateBoard = boardService.updateTaskAtBoard(board, group, task);\r\n        this.props.update(updateBoard)\r\n    }\r\n\r\n    toggleDisable() {\r\n        console.log(this.state.isDisable);\r\n        this.setState({\r\n            isDisable: !this.state.isDisable\r\n        })\r\n    }\r\n\r\n    borderLabel = (task, labelId) => {\r\n        if (task.labelIds) {\r\n            if (task.labelIds.includes(labelId))\r\n                return 'border';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const value = target.value;\r\n        this.setState({...this.state,\r\n            title: value\r\n        });\r\n        const label = this.props.label;\r\n        label.title = this.state.title;\r\n        this.updateLabelBoard(label);\r\n    }\r\n\r\n    updateLabelBoard = () => {\r\n        const { board, label } = this.props;\r\n        const idx = board.labels.findIndex(currLabel => currLabel.id === label.id);\r\n        board.labels.splice(idx,1, label);\r\n        this.props.update(board);\r\n    };\r\n\r\n    render() {\r\n        const { label } = this.props;\r\n        const { task } = this.state;\r\n        let className;\r\n        if (task) {\r\n            className = this.borderLabel(task, label.id);\r\n        }\r\n\r\n        return (\r\n            <div className=\"label flex gap-2\" data-label={label.id}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={this.state.title}\r\n                    style={{ background: `${label.color}` }}\r\n                    className={`label-input label-${label.id} ${this.state.isDisable} ${className} cur-pointer`}\r\n                    onChange={this.handleChange}\r\n                    onClick={() => this.toggleLabel(label.id)}\r\n                    maxLength = {13}\r\n                />\r\n                <span onClick={() => { this.toggleDisable() }} className=\"edit-label\"><FiEdit2 /> </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const LabelTask = connect(mapStateToProps, mapDispatchToProps)(withRouter(_LabelTask))","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Login.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardMembersModal.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\DueDateModal.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\CopyModal.jsx",["482","483"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MoveModal.jsx",["484"],{"ruleId":"485","replacedBy":"486"},{"ruleId":"487","replacedBy":"488"},{"ruleId":"489","severity":1,"message":"490","line":2,"column":34,"nodeType":"491","messageId":"492","endLine":2,"endColumn":51},{"ruleId":"489","severity":1,"message":"493","line":2,"column":10,"nodeType":"491","messageId":"492","endLine":2,"endColumn":21},{"ruleId":"489","severity":1,"message":"494","line":3,"column":10,"nodeType":"491","messageId":"492","endLine":3,"endColumn":14},{"ruleId":"489","severity":1,"message":"495","line":4,"column":10,"nodeType":"491","messageId":"492","endLine":4,"endColumn":21},{"ruleId":"489","severity":1,"message":"496","line":7,"column":10,"nodeType":"491","messageId":"492","endLine":7,"endColumn":21},{"ruleId":"489","severity":1,"message":"497","line":2,"column":10,"nodeType":"491","messageId":"492","endLine":2,"endColumn":17},{"ruleId":"489","severity":1,"message":"498","line":7,"column":10,"nodeType":"491","messageId":"492","endLine":7,"endColumn":21},{"ruleId":"489","severity":1,"message":"499","line":7,"column":23,"nodeType":"491","messageId":"492","endLine":7,"endColumn":32},{"ruleId":"489","severity":1,"message":"500","line":7,"column":34,"nodeType":"491","messageId":"492","endLine":7,"endColumn":46},{"ruleId":"489","severity":1,"message":"501","line":8,"column":10,"nodeType":"491","messageId":"492","endLine":8,"endColumn":19},{"ruleId":"502","severity":1,"message":"503","line":41,"column":11,"nodeType":"504","endLine":41,"endColumn":57},{"ruleId":"502","severity":1,"message":"503","line":51,"column":11,"nodeType":"504","endLine":51,"endColumn":64},{"ruleId":"502","severity":1,"message":"503","line":60,"column":11,"nodeType":"504","endLine":60,"endColumn":60},{"ruleId":"502","severity":1,"message":"503","line":68,"column":11,"nodeType":"504","endLine":68,"endColumn":60},{"ruleId":"489","severity":1,"message":"505","line":8,"column":27,"nodeType":"491","messageId":"492","endLine":8,"endColumn":36},{"ruleId":"489","severity":1,"message":"506","line":3,"column":10,"nodeType":"491","messageId":"492","endLine":3,"endColumn":14},{"ruleId":"502","severity":1,"message":"503","line":107,"column":33,"nodeType":"504","endLine":107,"endColumn":89},{"ruleId":"489","severity":1,"message":"507","line":3,"column":10,"nodeType":"491","messageId":"492","endLine":3,"endColumn":23},{"ruleId":"489","severity":1,"message":"508","line":3,"column":25,"nodeType":"491","messageId":"492","endLine":3,"endColumn":50},{"ruleId":"489","severity":1,"message":"509","line":66,"column":11,"nodeType":"491","messageId":"492","endLine":66,"endColumn":18},{"ruleId":"489","severity":1,"message":"510","line":54,"column":11,"nodeType":"491","messageId":"492","endLine":54,"endColumn":15},{"ruleId":"489","severity":1,"message":"511","line":19,"column":10,"nodeType":"491","messageId":"492","endLine":19,"endColumn":29},{"ruleId":"489","severity":1,"message":"512","line":43,"column":7,"nodeType":"491","messageId":"492","endLine":43,"endColumn":20},{"ruleId":"489","severity":1,"message":"513","line":2,"column":10,"nodeType":"491","messageId":"492","endLine":2,"endColumn":25},{"ruleId":"489","severity":1,"message":"514","line":6,"column":10,"nodeType":"491","messageId":"492","endLine":6,"endColumn":27},{"ruleId":"489","severity":1,"message":"513","line":2,"column":10,"nodeType":"491","messageId":"492","endLine":2,"endColumn":25},{"ruleId":"489","severity":1,"message":"515","line":2,"column":38,"nodeType":"491","messageId":"492","endLine":2,"endColumn":47},{"ruleId":"489","severity":1,"message":"516","line":3,"column":10,"nodeType":"491","messageId":"492","endLine":3,"endColumn":18},{"ruleId":"489","severity":1,"message":"517","line":32,"column":32,"nodeType":"491","messageId":"492","endLine":32,"endColumn":40},{"ruleId":"489","severity":1,"message":"518","line":49,"column":24,"nodeType":"491","messageId":"492","endLine":49,"endColumn":29},{"ruleId":"489","severity":1,"message":"519","line":49,"column":31,"nodeType":"491","messageId":"492","endLine":49,"endColumn":35},{"ruleId":"489","severity":1,"message":"520","line":55,"column":37,"nodeType":"491","messageId":"492","endLine":55,"endColumn":48},{"ruleId":"521","severity":1,"message":"522","line":79,"column":76,"nodeType":"523","messageId":"524","endLine":79,"endColumn":78},{"ruleId":"489","severity":1,"message":"525","line":1,"column":10,"nodeType":"491","messageId":"492","endLine":1,"endColumn":21},{"ruleId":"485","replacedBy":"526"},{"ruleId":"487","replacedBy":"527"},{"ruleId":"489","severity":1,"message":"490","line":2,"column":34,"nodeType":"491","messageId":"492","endLine":2,"endColumn":51},{"ruleId":"489","severity":1,"message":"494","line":2,"column":10,"nodeType":"491","messageId":"492","endLine":2,"endColumn":14},{"ruleId":"489","severity":1,"message":"497","line":2,"column":10,"nodeType":"491","messageId":"492","endLine":2,"endColumn":17},{"ruleId":"489","severity":1,"message":"498","line":7,"column":10,"nodeType":"491","messageId":"492","endLine":7,"endColumn":21},{"ruleId":"489","severity":1,"message":"499","line":7,"column":23,"nodeType":"491","messageId":"492","endLine":7,"endColumn":32},{"ruleId":"489","severity":1,"message":"500","line":7,"column":34,"nodeType":"491","messageId":"492","endLine":7,"endColumn":46},{"ruleId":"489","severity":1,"message":"501","line":8,"column":10,"nodeType":"491","messageId":"492","endLine":8,"endColumn":19},{"ruleId":"502","severity":1,"message":"503","line":41,"column":11,"nodeType":"504","endLine":41,"endColumn":57},{"ruleId":"502","severity":1,"message":"503","line":51,"column":11,"nodeType":"504","endLine":51,"endColumn":64},{"ruleId":"502","severity":1,"message":"503","line":60,"column":11,"nodeType":"504","endLine":60,"endColumn":60},{"ruleId":"502","severity":1,"message":"503","line":68,"column":11,"nodeType":"504","endLine":68,"endColumn":60},{"ruleId":"489","severity":1,"message":"528","line":6,"column":8,"nodeType":"491","messageId":"492","endLine":6,"endColumn":10},{"ruleId":"489","severity":1,"message":"529","line":7,"column":8,"nodeType":"491","messageId":"492","endLine":7,"endColumn":10},{"ruleId":"489","severity":1,"message":"530","line":8,"column":8,"nodeType":"491","messageId":"492","endLine":8,"endColumn":10},{"ruleId":"489","severity":1,"message":"531","line":9,"column":8,"nodeType":"491","messageId":"492","endLine":9,"endColumn":10},{"ruleId":"489","severity":1,"message":"532","line":10,"column":8,"nodeType":"491","messageId":"492","endLine":10,"endColumn":10},{"ruleId":"489","severity":1,"message":"533","line":11,"column":8,"nodeType":"491","messageId":"492","endLine":11,"endColumn":10},{"ruleId":"489","severity":1,"message":"534","line":12,"column":8,"nodeType":"491","messageId":"492","endLine":12,"endColumn":10},{"ruleId":"489","severity":1,"message":"535","line":13,"column":8,"nodeType":"491","messageId":"492","endLine":13,"endColumn":10},{"ruleId":"489","severity":1,"message":"536","line":3,"column":10,"nodeType":"491","messageId":"492","endLine":3,"endColumn":17},{"ruleId":"489","severity":1,"message":"505","line":8,"column":27,"nodeType":"491","messageId":"492","endLine":8,"endColumn":36},{"ruleId":"489","severity":1,"message":"525","line":1,"column":10,"nodeType":"491","messageId":"492","endLine":1,"endColumn":21},{"ruleId":"521","severity":1,"message":"537","line":102,"column":45,"nodeType":"523","messageId":"538","endLine":102,"endColumn":47},{"ruleId":"489","severity":1,"message":"512","line":43,"column":7,"nodeType":"491","messageId":"492","endLine":43,"endColumn":20},{"ruleId":"489","severity":1,"message":"510","line":54,"column":11,"nodeType":"491","messageId":"492","endLine":54,"endColumn":15},{"ruleId":"489","severity":1,"message":"539","line":3,"column":7,"nodeType":"491","messageId":"492","endLine":3,"endColumn":23},{"ruleId":"489","severity":1,"message":"513","line":2,"column":10,"nodeType":"491","messageId":"492","endLine":2,"endColumn":25},{"ruleId":"489","severity":1,"message":"514","line":6,"column":10,"nodeType":"491","messageId":"492","endLine":6,"endColumn":27},{"ruleId":"489","severity":1,"message":"540","line":26,"column":24,"nodeType":"491","messageId":"492","endLine":26,"endColumn":32},{"ruleId":"489","severity":1,"message":"516","line":3,"column":10,"nodeType":"491","messageId":"492","endLine":3,"endColumn":18},{"ruleId":"489","severity":1,"message":"517","line":25,"column":32,"nodeType":"491","messageId":"492","endLine":25,"endColumn":40},{"ruleId":"489","severity":1,"message":"518","line":42,"column":24,"nodeType":"491","messageId":"492","endLine":42,"endColumn":29},{"ruleId":"489","severity":1,"message":"519","line":42,"column":31,"nodeType":"491","messageId":"492","endLine":42,"endColumn":35},{"ruleId":"489","severity":1,"message":"520","line":48,"column":37,"nodeType":"491","messageId":"492","endLine":48,"endColumn":48},{"ruleId":"521","severity":1,"message":"522","line":78,"column":83,"nodeType":"523","messageId":"524","endLine":78,"endColumn":85},{"ruleId":"489","severity":1,"message":"506","line":3,"column":10,"nodeType":"491","messageId":"492","endLine":3,"endColumn":14},{"ruleId":"489","severity":1,"message":"541","line":6,"column":8,"nodeType":"491","messageId":"492","endLine":6,"endColumn":22},{"ruleId":"489","severity":1,"message":"542","line":26,"column":17,"nodeType":"491","messageId":"492","endLine":26,"endColumn":24},{"ruleId":"489","severity":1,"message":"542","line":35,"column":21,"nodeType":"491","messageId":"492","endLine":35,"endColumn":28},{"ruleId":"489","severity":1,"message":"543","line":82,"column":15,"nodeType":"491","messageId":"492","endLine":82,"endColumn":22},{"ruleId":"489","severity":1,"message":"519","line":122,"column":17,"nodeType":"491","messageId":"492","endLine":122,"endColumn":21},{"ruleId":"521","severity":1,"message":"522","line":178,"column":77,"nodeType":"523","messageId":"524","endLine":178,"endColumn":79},{"ruleId":"502","severity":1,"message":"503","line":227,"column":37,"nodeType":"504","endLine":227,"endColumn":93},{"ruleId":"489","severity":1,"message":"506","line":2,"column":10,"nodeType":"491","messageId":"492","endLine":2,"endColumn":14},{"ruleId":"489","severity":1,"message":"544","line":2,"column":16,"nodeType":"491","messageId":"492","endLine":2,"endColumn":23},{"ruleId":"489","severity":1,"message":"525","line":1,"column":10,"nodeType":"491","messageId":"492","endLine":1,"endColumn":21},{"ruleId":"489","severity":1,"message":"507","line":3,"column":10,"nodeType":"491","messageId":"492","endLine":3,"endColumn":23},{"ruleId":"489","severity":1,"message":"508","line":3,"column":25,"nodeType":"491","messageId":"492","endLine":3,"endColumn":50},{"ruleId":"489","severity":1,"message":"506","line":2,"column":10,"nodeType":"491","messageId":"492","endLine":2,"endColumn":14},{"ruleId":"489","severity":1,"message":"544","line":2,"column":16,"nodeType":"491","messageId":"492","endLine":2,"endColumn":23},{"ruleId":"489","severity":1,"message":"542","line":27,"column":21,"nodeType":"491","messageId":"492","endLine":27,"endColumn":28},{"ruleId":"489","severity":1,"message":"545","line":5,"column":10,"nodeType":"491","messageId":"492","endLine":5,"endColumn":19},{"ruleId":"489","severity":1,"message":"546","line":7,"column":10,"nodeType":"491","messageId":"492","endLine":7,"endColumn":22},{"ruleId":"489","severity":1,"message":"545","line":5,"column":10,"nodeType":"491","messageId":"492","endLine":5,"endColumn":19},"no-native-reassign",["547"],"no-negated-in-lhs",["548"],"no-unused-vars","'localLoggedinUser' is assigned a value but never used.","Identifier","unusedVar","'LoginSignup' is defined but never used.","'Chat' is defined but never used.","'UserDetails' is defined but never used.","'TaskDetails' is defined but never used.","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Draggable' is defined but never used.","'Link' is defined but never used.","'socketService' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'newTask' is assigned a value but never used.","'year' is assigned a value but never used.","'createSocketService' is defined but never used.","'socketIsReady' is assigned a value but never used.","'DragDropContext' is defined but never used.","'HiOutlineMenuAlt4' is defined but never used.","'Droppable' is defined but never used.","'Provider' is defined but never used.","'duration' is assigned a value but never used.","'index' is assigned a value but never used.","'task' is assigned a value but never used.","'updateBoard' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'utilService' is defined but never used.",["547"],["548"],"'p0' is defined but never used.","'p1' is defined but never used.","'p2' is defined but never used.","'p3' is defined but never used.","'p4' is defined but never used.","'p5' is defined but never used.","'p6' is defined but never used.","'p7' is defined but never used.","'loading' is defined but never used.","Array.prototype.findIndex() expects a return value from arrow function.","expectedInside","'SCORE_FOR_REVIEW' is assigned a value but never used.","'onUpdate' is assigned a value but never used.","'onClickOutside' is defined but never used.","'boardId' is assigned a value but never used.","'removed' is assigned a value but never used.","'NavLink' is defined but never used.","'LabelTask' is defined but never used.","'boardService' is defined but never used.","no-global-assign","no-unsafe-negation"]