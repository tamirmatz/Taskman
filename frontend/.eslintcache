[{"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\index.js":"1","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\store.js":"4","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\App.jsx":"5","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js":"6","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js":"7","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js":"8","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js":"9","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\routes.js":"10","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx":"11","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\UserDetails.jsx":"12","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Board.jsx":"13","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Home.jsx":"14","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\BoardList.jsx":"15","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Chat.jsx":"16","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskDetails.jsx":"17","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\boardService.js":"18","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js":"19","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx":"20","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js":"21","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\userActions.js":"22","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\utilService.js":"23","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\socketService.js":"24","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx":"25","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\userService.js":"26","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js":"27","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\httpService.js":"28","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\Upload.jsx":"29","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx":"30","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx":"31","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardNavbar.jsx":"32","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckList.jsx":"33","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\reviewService.js":"34","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx":"35","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\data\\board.js":"36","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js":"37","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx":"38","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx":"39","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckListStatus.jsx":"40","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\ActionList.jsx":"41","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\LabelModal.jsx":"42","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MembersModal.jsx":"43","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\ModalAction.jsx":"44","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\OverlayAction.jsx":"45","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\systemAction.js":"46","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\LabelTask.jsx":"47","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Login.jsx":"48","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardMembersModal.jsx":"49","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\DueDateModal.jsx":"50","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MoveModal.jsx":"51","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\CopyModal.jsx":"52"},{"size":935,"mtime":1622098926959,"results":"53","hashOfConfig":"54"},{"size":377,"mtime":1622098926965,"results":"55","hashOfConfig":"54"},{"size":5201,"mtime":1622098926966,"results":"56","hashOfConfig":"54"},{"size":752,"mtime":1622112896615,"results":"57","hashOfConfig":"54"},{"size":535,"mtime":1622209089530,"results":"58","hashOfConfig":"54"},{"size":868,"mtime":1622452098317,"results":"59","hashOfConfig":"54"},{"size":688,"mtime":1622215143805,"results":"60","hashOfConfig":"54"},{"size":426,"mtime":1622658771162,"results":"61","hashOfConfig":"54"},{"size":669,"mtime":1622098926981,"results":"62","hashOfConfig":"54"},{"size":634,"mtime":1622628379726,"results":"63","hashOfConfig":"54"},{"size":2846,"mtime":1622658771126,"results":"64","hashOfConfig":"54"},{"size":1405,"mtime":1622627111688,"results":"65","hashOfConfig":"54"},{"size":7176,"mtime":1622674704366,"results":"66","hashOfConfig":"54"},{"size":2963,"mtime":1622548188834,"results":"67","hashOfConfig":"54"},{"size":4294,"mtime":1622675804474,"results":"68","hashOfConfig":"54"},{"size":3395,"mtime":1622115436998,"results":"69","hashOfConfig":"54"},{"size":11855,"mtime":1622668373278,"results":"70","hashOfConfig":"54"},{"size":3211,"mtime":1622672132024,"results":"71","hashOfConfig":"54"},{"size":1321,"mtime":1622115440359,"results":"72","hashOfConfig":"54"},{"size":165,"mtime":1622294072443,"results":"73","hashOfConfig":"54"},{"size":2193,"mtime":1622658771200,"results":"74","hashOfConfig":"54"},{"size":1966,"mtime":1622631383176,"results":"75","hashOfConfig":"54"},{"size":3308,"mtime":1622472609381,"results":"76","hashOfConfig":"54"},{"size":2414,"mtime":1622479249276,"results":"77","hashOfConfig":"54"},{"size":533,"mtime":1622636238075,"results":"78","hashOfConfig":"54"},{"size":2097,"mtime":1622479249277,"results":"79","hashOfConfig":"54"},{"size":2404,"mtime":1622283961369,"results":"80","hashOfConfig":"54"},{"size":1136,"mtime":1622115365941,"results":"81","hashOfConfig":"54"},{"size":1127,"mtime":1622631197416,"results":"82","hashOfConfig":"54"},{"size":5245,"mtime":1622658902403,"results":"83","hashOfConfig":"54"},{"size":490,"mtime":1622675021296,"results":"84","hashOfConfig":"54"},{"size":3519,"mtime":1622650119898,"results":"85","hashOfConfig":"54"},{"size":4457,"mtime":1622658771129,"results":"86","hashOfConfig":"54"},{"size":1087,"mtime":1622115441879,"results":"87","hashOfConfig":"54"},{"size":106,"mtime":1622559991733,"results":"88","hashOfConfig":"54"},{"size":305529,"mtime":1622471688098,"results":"89","hashOfConfig":"54"},{"size":587,"mtime":1622629649919,"results":"90","hashOfConfig":"54"},{"size":7339,"mtime":1622665472802,"results":"91","hashOfConfig":"54"},{"size":846,"mtime":1622650216553,"results":"92","hashOfConfig":"54"},{"size":715,"mtime":1622658771131,"results":"93","hashOfConfig":"54"},{"size":4023,"mtime":1622670557082,"results":"94","hashOfConfig":"54"},{"size":1604,"mtime":1622668373282,"results":"95","hashOfConfig":"54"},{"size":2303,"mtime":1622658771154,"results":"96","hashOfConfig":"54"},{"size":220,"mtime":1622559991731,"results":"97","hashOfConfig":"54"},{"size":116,"mtime":1622559991729,"results":"98","hashOfConfig":"54"},{"size":756,"mtime":1622658771160,"results":"99","hashOfConfig":"54"},{"size":4015,"mtime":1622668373280,"results":"100","hashOfConfig":"54"},{"size":4715,"mtime":1622631519843,"results":"101","hashOfConfig":"54"},{"size":2303,"mtime":1622649741122,"results":"102","hashOfConfig":"54"},{"size":1540,"mtime":1622658771150,"results":"103","hashOfConfig":"54"},{"size":3040,"mtime":1622670283219,"results":"104","hashOfConfig":"54"},{"size":2938,"mtime":1622671013506,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1prlnqd",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\index.js",[],["222","223"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\store.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\App.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js",["224"],"let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\nconst defUser = {\r\n  \"_id\": \"u101\",\r\n  \"fullname\": \"Abi Abambi\",\r\n  \"username\": \"abi@ababmi.com\",\r\n  \"password\": \"aBambi123\",\r\n  \"imgUrl\": \"http://some-img.jpg\",\r\n  \"mentions\": [{\r\n    \"id\": \"m101\",\r\n    \"boardId\": \"m101\",\r\n    \"taskId\": \"t101\"\r\n  }]\r\n}\r\nconst initialState = {\r\n  loggedInUser: defUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\routes.js",["225"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\UserDetails.jsx",["226","227","228"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Board.jsx",["229","230"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Home.jsx",["231","232","233","234","235","236","237","238","239"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MainImg from '../assets/img/home/main-img.svg'\r\nimport TeamworkImg from '../assets/img/home/teamwork.svg'\r\nimport TimeImg from '../assets/img/home/time.svg'\r\nimport OrganizeImg from '../assets/img/home/organize.svg'\r\nimport { loadReviews, addReview, removeReview } from '../store/actions/reviewActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Home extends Component {\r\n  state = {\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      reviewToEdit: {\r\n        ...prevState.reviewToEdit,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home-page flex column fam-1 \">\r\n        <div className=\"flex row-reverse mt-5 space-evenly \">\r\n          <div className=\"align-center flex column \">\r\n              <div className=\"c-stand ps-2 font-xl\"><span className=\"logo-span\">T</span>askman</div>\r\n              <h1 className=\"fam-1\">Task management</h1>\r\n              <h2 className=\"fam-1\">The <span className=\"main-color\">easiest</span> way. </h2>\r\n              <Link to=\"/board/60b3d35bf2ba7731f23403a5\"><button class=\"btn-hover color-3\">Try it now!</button></Link>\r\n          </div>\r\n          <img className=\"main-img w-50\" src={MainImg}/>\r\n        </div>\r\n        <div className=\"features flex row space-between\">\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1\">All the tools your team needs</h3>\r\n            <span>Organize and assign tasks.</span>\r\n            <span>With lists, teams see immediately what they need to do,</span>\r\n            <span>which tasks are a priority, and when work is due.</span>\r\n            </div>\r\n          <img className=\"feature-img w-30\" src={TeamworkImg}/>\r\n          </div>\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1\">Manage your time wisely</h3>\r\n            <span>Instantly see which projects are on track,</span>\r\n            <span>which ones are falling behind,</span>\r\n            <span>and what every team member is working on at a glance.</span>\r\n            </div>\r\n          <img className=\"feature-img w-25\" src={TimeImg}/>\r\n          </div>\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1\">Organize anything with anyone, anywhere</h3>\r\n            <span>Choose the project view that suits your style,</span>\r\n            <span> and collaborate no matter where you are.</span>\r\n            </div>\r\n          <img className=\"feature-img \" src={OrganizeImg}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\BoardList.jsx",["240","241","242","243","244","245","246","247"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Chat.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskDetails.jsx",["248","249","250","251","252"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\boardService.js",["253","254"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js",["255","256"],"import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../../services/generalService/socketService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n      // socketService.on(SOCKET_EVENT_REVIEW_ADDED, review =>{\r\n      //   dispatch({ type: 'ADD_REVIEW', review })\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\utilService.js",["257"],"\r\nexport const utilService = {\r\n    delay,\r\n    getRandomInt,\r\n    formatNewTask,\r\n    makeId,\r\n    isFalse,\r\n    formatNewGroup,\r\n    timeAgo\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction isFalse(el) {\r\n    return Array.isArray(el) ? !!el.length : !!el\r\n}\r\n\r\nfunction formatNewTask(task) {\r\n    return { id: makeId(), description: '', comments: [], checklists: [], members: [], ...task }\r\n}\r\n\r\nfunction formatNewGroup(group) {\r\n    return { id: makeId(), style: {}, tasks: [], ...group }\r\n}\r\n\r\nconst MONTH_NAMES = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n  \r\n  \r\n  function getFormattedDate(date, prefomattedDate = false, hideYear = false) {\r\n    const day = date.getDate();\r\n    const month = MONTH_NAMES[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    const hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n  \r\n    if (minutes < 10) {\r\n      // Adding leading zero to minutes\r\n      minutes = `0${ minutes }`;\r\n    }\r\n  \r\n    if (prefomattedDate) {\r\n      // Today at 10:20\r\n      // Yesterday at 10:20\r\n      return `${ prefomattedDate } at ${ hours }:${ minutes }`;\r\n    }\r\n  \r\n    if (hideYear) {\r\n      // 10. January at 10:20\r\n      return `${ day }. ${ month } at ${ hours }:${ minutes }`;\r\n    }\r\n  \r\n    // 10. January 2017. at 10:20\r\n    return `${ month.slice(0,3) } ${ day }`;\r\n  }\r\n  \r\n  \r\n  // --- Main function\r\n  function timeAgo(dateParam) {\r\n    if (!dateParam) {\r\n      return null;\r\n    }\r\n  \r\n    const date = typeof dateParam === 'object' ? dateParam : new Date(dateParam);\r\n    const DAY_IN_MS = 86400000; // 24 * 60 * 60 * 1000\r\n    const today = new Date();\r\n    const yesterday = new Date(today - DAY_IN_MS);\r\n    const seconds = Math.round((today - date) / 1000);\r\n    const minutes = Math.round(seconds / 60);\r\n    const isToday = today.toDateString() === date.toDateString();\r\n    const isYesterday = yesterday.toDateString() === date.toDateString();\r\n    const isThisYear = today.getFullYear() === date.getFullYear();\r\n  \r\n  \r\n    if (seconds < 5) {\r\n      return 'now';\r\n    } else if (seconds < 60) {\r\n      return `${ seconds } seconds ago`;\r\n    } else if (seconds < 90) {\r\n      return 'about a minute ago';\r\n    } else if (minutes < 60) {\r\n      return `${ minutes } minutes ago`;\r\n    } else if (isToday) {\r\n      return getFormattedDate(date, 'Today'); // Today at 10:20\r\n    } else if (isYesterday) {\r\n      return getFormattedDate(date, 'Yesterday'); // Yesterday at 10:20\r\n    } else if (isThisYear) {\r\n      return getFormattedDate(date, false, true); // 10. January at 10:20\r\n    }\r\n  \r\n    \r\n    return getFormattedDate(date); // 10. January 2017. at 10:20\r\n  }","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\socketService.js",["258"],"import io from 'socket.io-client'\r\nimport {httpService} from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\nfunction cb(x) {console.log(x)}\r\nsocketService.on('baba', cb)\r\nsocketService.on('mama', cb)\r\nsocketService.on('lala', cb)\r\nsocketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\userService.js",["259"],"// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './generalService/httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\httpService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\Upload.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx",["260","261"],"import { TaskPreview } from '../board/TaskPreview'\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Component } from 'react';\r\nimport { boardService } from '../../services/boardService.js'\r\nimport { utilService } from '../../services/generalService/utilService.js'\r\nimport { HiOutlineMenuAlt4 } from 'react-icons/hi'\r\nconst EMPTY_TASK = { title: '' }\r\nconst EMPTY_GROUP = { title: '' }\r\n\r\nexport class TaskList extends Component {\r\n    state = {\r\n        group: EMPTY_GROUP,\r\n        task: EMPTY_TASK\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ group: this.props.group })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({\r\n            task: {\r\n                ...prevState.task,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    updateGroup = () => {\r\n        if (!this.state.group.title) return;\r\n        const copyBoard = { ...this.props.board };\r\n        this.props.updateBoard(copyBoard)\r\n        const groupIdx = boardService.getGroupIdxById(copyBoard, this.state.group.id)\r\n        copyBoard.groups[groupIdx] = this.state.group\r\n        console.log(copyBoard)\r\n    }\r\n\r\n    handleChangeGroup = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({\r\n            group: {\r\n                ...prevState.group,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    onAddTask = () => {\r\n        if (!this.state.task.title) return;\r\n        const { group } = this.props\r\n        const copyBoard = { ...this.props.board };\r\n        const groupIdx = boardService.getGroupIdxById(copyBoard, group.id)\r\n        copyBoard.groups[groupIdx].tasks.push(utilService.formatNewTask(this.state.task))\r\n        this.props.updateBoard(copyBoard)\r\n        this.setState({ task: EMPTY_TASK })\r\n    }\r\n\r\n    render() {\r\n        const { board, group, updateBoard, index } = this.props\r\n\r\n        return (\r\n            <Draggable index={index} draggableId={group.id} >\r\n                {(provided, snapshot) => {\r\n                    return <li className=\"group br-3\"\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                    >\r\n                        <form className=\"\" onSubmit={(ev) => {\r\n                            ev.preventDefault()\r\n                            this.updateGroup()\r\n\r\n                        }}>\r\n                            <div className=\"group-title w-100 flex center space-between pb-2\">\r\n                                <input className=\"app-input font-w2 font-m lh-20 \" onBlur={this.updateGroup} type=\"text\" value={this.state.group.title} name=\"title\" onChange={this.handleChangeGroup} />\r\n                                <div className=\"group-menu\">...</div>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"wrap-task-list\">\r\n\r\n                            <div className=\"task-list flex column center content-center\">\r\n                                <Droppable  \r\n                                droppableId={group.id} \r\n                                type='task'>\r\n                                    {(provided) => (\r\n<<<<<<< HEAD\r\n                                        <div className=\"task-list-droppable\"\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.droppableProps}\r\n                                            {...provided.dragHandleProps}>\r\n=======\r\n                                        <div className=\"task-list-droppable\" \r\n                                        ref={provided.innerRef} \r\n                                        {...provided.droppableProps} \r\n                                        >\r\n>>>>>>> 9d29341a2f5a6bb34821357e27cfb0e0972056e4\r\n                                            {group.tasks.map((task, idx) => (\r\n                                                <TaskPreview key={task.id}\r\n                                                    board={board}\r\n                                                    index={idx}\r\n                                                    groupId={group.id}\r\n                                                    updateBoard={updateBoard}\r\n                                                    task={task}\r\n                                                />\r\n                                            ))}\r\n                                            {!utilService.isFalse(group.tasks) && <h1 className=\"task-title fam-1 font-m\">No tasks to show</h1>}\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </div>\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.onAddTask()\r\n                                console.log(ev)\r\n                            }}>\r\n                                <input className=\"add-task\" value={this.state.task.title} type=\"text\" placeholder=\"+ Add another card\" name=\"title\" onChange={this.handleChange} />\r\n                            </form>\r\n                        </div>\r\n                    </li>\r\n                }}\r\n            </Draggable>)\r\n        /*    </div> */\r\n    }\r\n}","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardNavbar.jsx",["262"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckList.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\reviewService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\data\\board.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx",["263","264","265","266","267","268"],"import { Link } from 'react-router-dom'\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Provider } from 'react-redux';\r\nimport { boardService } from '../../services/boardService.js'\r\nimport { BsCheckBox } from 'react-icons/bs'\r\nimport { FaRegCommentDots } from 'react-icons/fa'\r\nimport { AiOutlineClockCircle, AiOutlineClose } from 'react-icons/ai'\r\nimport { GrTextAlignFull } from 'react-icons/gr'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/generalService/utilService'\r\nimport React, { Component } from 'react'\r\nimport { UserPreview } from './UserPreview.jsx';\r\n\r\nimport { toggleLabel } from '../../store/actions/systemAction.js';\r\n\r\n\r\n\r\n// export function TaskPreview({ board, index, task, updateBoard, groupId }) {\r\nclass _TaskPreview extends Component {\r\n\r\n    getStyle = (style, snapshot) => {\r\n        if (!snapshot.isDropAnimating) {\r\n            return style;\r\n        }\r\n        const { moveTo, curve, duration } = snapshot.dropAnimation;\r\n        // move to the right spot\r\n        const translate = `translate(${moveTo.x}px, ${moveTo.y}px)`;\r\n        // add a bit of turn for fun\r\n        const rotate = 'rotate(0.01turn)';\r\n\r\n        // patching the existing style\r\n        return {\r\n            ...style,\r\n            background: '#fff',\r\n            transform: `${translate} ${rotate}`,\r\n            // slowing down the drop because we can\r\n            transition: `all ${curve} 0.2s`,\r\n        };\r\n    }\r\n\r\n    onRemoveTask = (taskId) => {\r\n        const { board, index, task, updateBoard, groupId } = this.props\r\n        const group = board.groups[boardService.getGroupIdxById(board, groupId)]\r\n        board.groups[boardService.getGroupIdxById(board, groupId)].tasks.splice(boardService.getTaskIdxById(group, taskId), 1)\r\n        updateBoard({ ...board })\r\n    }\r\n    render() {\r\n        const { board, index, task, updateBoard, groupId } = this.props\r\n        const isLabelOpen = this.props.isLabelOpen;\r\n        return <Draggable\r\n            draggableId={task.id}\r\n            index={index}\r\n        // isDragDisabled={false}\r\n        >\r\n            {(provided, snapshot) => {\r\n                return (\r\n                    <div\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                        isdragging={snapshot.isDragging && !snapshot.isDropAnimating ? 'true' : 'false'}\r\n                        style={this.getStyle(provided.draggableProps.style, snapshot)}\r\n                    >\r\n                        <div className=\"wrap-list-task br-3\">\r\n                            <div className=\"wrap-task-prev\">\r\n                                <div className=\"task-preview flex column\">\r\n                                    {/* <Link to={`/board/${board._id}/${task.id}`}> */}\r\n                                    {utilService.isFalse(task.labelIds) &&\r\n                                        <div className=\"flex row space-between center w-100\">\r\n                                            <div className=\"label-task-prev\">\r\n                                                <div className=\"labels-container wrap flex\" onClick={(ev) => {\r\n                                                    ev.stopPropagation();\r\n                                                }}>\r\n                                                    {\r\n                                                        task.labelIds.map(labelId => {\r\n                                                            const label = board.labels.find(label => {\r\n                                                                return label.id === labelId;\r\n                                                            })\r\n\r\n                                                            if (label) {\r\n                                                                return <div\r\n                                                                    key={label.id}\r\n                                                                    className={`preview-label ${isLabelOpen && \"label-open\"}`}\r\n                                                                    onClick={() => this.props.toggleLabel(!isLabelOpen)}\r\n                                                                    style={{ backgroundColor: label.color }}\r\n                                                                >\r\n                                                                    {this.props.isLabelOpen && label.title}\r\n                                                                </div>\r\n                                                            }\r\n                                                        })}\r\n                                                </div>\r\n                                            </div>\r\n                                            <span className=\"cur-pointer fam-1 font-s bold\" onClick={() => { this.onRemoveTask(task.id) }}><AiOutlineClose /></span>\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <Link to={`/board/${board._id}/${groupId}/${task.id}`}>\r\n\r\n\r\n                                        <h1 className=\"task-title fam-1 font-m\">{task.title}</h1>\r\n                                        <div className=\"task-mini-details flex w-100 content-start  gap-xs fam-1 c-stand\">\r\n                                            {utilService.isFalse(task.members) && <small className=\"flex center\">{task.members.map(member => { return <UserPreview key={member._id} user={member} /> }).splice(0, 3)}</small>}\r\n                                            {utilService.isFalse(task.comments) && <small className=\"flex center\"><FaRegCommentDots /></small>}\r\n                                            {utilService.isFalse(task.checklists) && <div className={`flex row center ${boardService.checklistPreview(task).isDone && \"check-list-done-prev\"}`}>\r\n                                                <BsCheckBox />\r\n                                                <small>{boardService.checklistPreview(task).str}</small>\r\n                                            </div>}\r\n                                            {task.dueDate && <div className=\"flex row center\">\r\n                                                <AiOutlineClockCircle />\r\n                                                <small>\r\n                                                    {task.dueDate}\r\n                                                </small>\r\n                                            </div>}\r\n                                            {task.description && <small className=\"flex center\"><GrTextAlignFull /></small>}\r\n                                        </div>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            }\r\n        </Draggable>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        isLabelOpen : state.systemModule.isLabelsOpen\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    toggleLabel\r\n}\r\nexport const TaskPreview = connect(mapStateToProps, mapDispatchToProps)(_TaskPreview)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx",["269"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckListStatus.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\ActionList.jsx",["270","271"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\LabelModal.jsx",["272"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { LabelTask } from '../LabelTask'\r\n\r\n\r\n\r\nclass _LabelModal extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n    render() {\r\n        const labels = this.props.board.labels;\r\n        console.log(labels);\r\n        return <div className=\"action-modal label-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"label-modal p-abs flex column pad-1\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center content-end gap-5 w-70\">\r\n                        <h1 className=\"fam-1 font-1 \">Label</h1>\r\n                        <span className=\"cur-pointer fam-1 font-s bold\" onClick={() => { this.props.toggleModal('label-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content\">\r\n                        <ul>\r\n                            {labels.map((label, idx) => <LabelTask key={idx} label={label} />)}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const LabelModal = connect(mapStateToProps, mapDispatchToProps)(_LabelModal)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MembersModal.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\ModalAction.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\OverlayAction.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\systemAction.js",["273"],"import { utilService } from '../../services/generalService/utilService';\r\n\r\nexport function loading() { // Action Creator\r\n    return async dispatch => {\r\n        try {   \r\n            dispatch('LOADING_DONE');         \r\n            dispatch('LOADING_START');\r\n            setTimeout(() => {\r\n                dispatch('LOADING_DONE');\r\n            }, 1500);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\LabelTask.jsx",["274","275"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nclass _LabelTask extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        const label = this.props.label;\r\n        console.log(label);\r\n        return (\r\n            <div className=\"label-input flex\">\r\n                <input type=\"text\"  value={label.color} onChange={ ()=> {console.log('aa');}} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const LabelTask = connect(mapStateToProps, mapDispatchToProps)(_LabelTask)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Login.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardMembersModal.jsx",["276"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\DueDateModal.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MoveModal.jsx",["277"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\CopyModal.jsx",["278","279"],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":2,"column":34,"nodeType":"286","messageId":"287","endLine":2,"endColumn":51},{"ruleId":"284","severity":1,"message":"288","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"289","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":16},{"ruleId":"284","severity":1,"message":"290","line":25,"column":13,"nodeType":"286","messageId":"287","endLine":25,"endColumn":16},{"ruleId":"291","severity":1,"message":"292","line":30,"column":11,"nodeType":"293","endLine":30,"endColumn":28},{"ruleId":"284","severity":1,"message":"294","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":17},{"ruleId":"284","severity":1,"message":"295","line":8,"column":27,"nodeType":"286","messageId":"287","endLine":8,"endColumn":36},{"ruleId":"284","severity":1,"message":"296","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":17},{"ruleId":"284","severity":1,"message":"297","line":7,"column":10,"nodeType":"286","messageId":"287","endLine":7,"endColumn":21},{"ruleId":"284","severity":1,"message":"298","line":7,"column":23,"nodeType":"286","messageId":"287","endLine":7,"endColumn":32},{"ruleId":"284","severity":1,"message":"299","line":7,"column":34,"nodeType":"286","messageId":"287","endLine":7,"endColumn":46},{"ruleId":"284","severity":1,"message":"300","line":8,"column":10,"nodeType":"286","messageId":"287","endLine":8,"endColumn":19},{"ruleId":"291","severity":1,"message":"292","line":41,"column":11,"nodeType":"293","endLine":41,"endColumn":57},{"ruleId":"291","severity":1,"message":"292","line":51,"column":11,"nodeType":"293","endLine":51,"endColumn":64},{"ruleId":"291","severity":1,"message":"292","line":60,"column":11,"nodeType":"293","endLine":60,"endColumn":60},{"ruleId":"291","severity":1,"message":"292","line":68,"column":11,"nodeType":"293","endLine":68,"endColumn":60},{"ruleId":"284","severity":1,"message":"301","line":6,"column":8,"nodeType":"286","messageId":"287","endLine":6,"endColumn":10},{"ruleId":"284","severity":1,"message":"302","line":7,"column":8,"nodeType":"286","messageId":"287","endLine":7,"endColumn":10},{"ruleId":"284","severity":1,"message":"303","line":8,"column":8,"nodeType":"286","messageId":"287","endLine":8,"endColumn":10},{"ruleId":"284","severity":1,"message":"304","line":9,"column":8,"nodeType":"286","messageId":"287","endLine":9,"endColumn":10},{"ruleId":"284","severity":1,"message":"305","line":10,"column":8,"nodeType":"286","messageId":"287","endLine":10,"endColumn":10},{"ruleId":"284","severity":1,"message":"306","line":11,"column":8,"nodeType":"286","messageId":"287","endLine":11,"endColumn":10},{"ruleId":"284","severity":1,"message":"307","line":12,"column":8,"nodeType":"286","messageId":"287","endLine":12,"endColumn":10},{"ruleId":"284","severity":1,"message":"308","line":13,"column":8,"nodeType":"286","messageId":"287","endLine":13,"endColumn":10},{"ruleId":"284","severity":1,"message":"309","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":14},{"ruleId":"284","severity":1,"message":"310","line":6,"column":8,"nodeType":"286","messageId":"287","endLine":6,"endColumn":22},{"ruleId":"284","severity":1,"message":"311","line":26,"column":17,"nodeType":"286","messageId":"287","endLine":26,"endColumn":24},{"ruleId":"312","severity":1,"message":"313","line":181,"column":77,"nodeType":"314","messageId":"315","endLine":181,"endColumn":79},{"ruleId":"291","severity":1,"message":"292","line":234,"column":37,"nodeType":"293","endLine":234,"endColumn":93},{"ruleId":"284","severity":1,"message":"316","line":1,"column":10,"nodeType":"286","messageId":"287","endLine":1,"endColumn":21},{"ruleId":"312","severity":1,"message":"317","line":104,"column":45,"nodeType":"314","messageId":"318","endLine":104,"endColumn":47},{"ruleId":"284","severity":1,"message":"319","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":23},{"ruleId":"284","severity":1,"message":"320","line":3,"column":25,"nodeType":"286","messageId":"287","endLine":3,"endColumn":50},{"ruleId":"284","severity":1,"message":"321","line":54,"column":11,"nodeType":"286","messageId":"287","endLine":54,"endColumn":15},{"ruleId":"284","severity":1,"message":"322","line":43,"column":7,"nodeType":"286","messageId":"287","endLine":43,"endColumn":20},{"ruleId":"284","severity":1,"message":"323","line":3,"column":7,"nodeType":"286","messageId":"287","endLine":3,"endColumn":23},{"ruleId":"284","severity":1,"message":"324","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":25},{"ruleId":"284","severity":1,"message":"325","line":6,"column":10,"nodeType":"286","messageId":"287","endLine":6,"endColumn":27},{"ruleId":"284","severity":1,"message":"326","line":61,"column":24,"nodeType":"286","messageId":"287","endLine":61,"endColumn":32},{"ruleId":"284","severity":1,"message":"327","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":18},{"ruleId":"284","severity":1,"message":"328","line":25,"column":32,"nodeType":"286","messageId":"287","endLine":25,"endColumn":40},{"ruleId":"284","severity":1,"message":"329","line":42,"column":24,"nodeType":"286","messageId":"287","endLine":42,"endColumn":29},{"ruleId":"284","severity":1,"message":"330","line":42,"column":31,"nodeType":"286","messageId":"287","endLine":42,"endColumn":35},{"ruleId":"284","severity":1,"message":"331","line":48,"column":37,"nodeType":"286","messageId":"287","endLine":48,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":75,"column":83,"nodeType":"314","messageId":"315","endLine":75,"endColumn":85},{"ruleId":"284","severity":1,"message":"309","line":4,"column":10,"nodeType":"286","messageId":"287","endLine":4,"endColumn":14},{"ruleId":"284","severity":1,"message":"309","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"332","line":2,"column":16,"nodeType":"286","messageId":"287","endLine":2,"endColumn":23},{"ruleId":"284","severity":1,"message":"310","line":4,"column":8,"nodeType":"286","messageId":"287","endLine":4,"endColumn":22},{"ruleId":"284","severity":1,"message":"316","line":1,"column":10,"nodeType":"286","messageId":"287","endLine":1,"endColumn":21},{"ruleId":"284","severity":1,"message":"309","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"332","line":2,"column":16,"nodeType":"286","messageId":"287","endLine":2,"endColumn":23},{"ruleId":"284","severity":1,"message":"333","line":6,"column":10,"nodeType":"286","messageId":"287","endLine":6,"endColumn":22},{"ruleId":"284","severity":1,"message":"334","line":5,"column":10,"nodeType":"286","messageId":"287","endLine":5,"endColumn":19},{"ruleId":"284","severity":1,"message":"334","line":5,"column":10,"nodeType":"286","messageId":"287","endLine":5,"endColumn":19},{"ruleId":"284","severity":1,"message":"335","line":7,"column":10,"nodeType":"286","messageId":"287","endLine":7,"endColumn":22},"no-native-reassign",["336"],"no-negated-in-lhs",["337"],"no-unused-vars","'localLoggedinUser' is assigned a value but never used.","Identifier","unusedVar","'Chat' is defined but never used.","'Upload' is defined but never used.","'_id' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'loading' is defined but never used.","'Draggable' is defined but never used.","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","'p0' is defined but never used.","'p1' is defined but never used.","'p2' is defined but never used.","'p3' is defined but never used.","'p4' is defined but never used.","'p5' is defined but never used.","'p6' is defined but never used.","'p7' is defined but never used.","'Link' is defined but never used.","'onClickOutside' is defined but never used.","'boardId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'utilService' is defined but never used.","Array.prototype.findIndex() expects a return value from arrow function.","expectedInside","'socketService' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'year' is assigned a value but never used.","'socketIsReady' is assigned a value but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.","'DragDropContext' is defined but never used.","'HiOutlineMenuAlt4' is defined but never used.","'onUpdate' is assigned a value but never used.","'Provider' is defined but never used.","'duration' is assigned a value but never used.","'index' is assigned a value but never used.","'task' is assigned a value but never used.","'updateBoard' is assigned a value but never used.","'NavLink' is defined but never used.","'MembersBoard' is defined but never used.","'LabelTask' is defined but never used.","'boardService' is defined but never used.","no-global-assign","no-unsafe-negation"]