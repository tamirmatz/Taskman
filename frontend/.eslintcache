[{"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\index.js":"1","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\store.js":"4","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\App.jsx":"5","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js":"6","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js":"7","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js":"8","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js":"9","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\routes.js":"10","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx":"11","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Chat.jsx":"12","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\UserDetails.jsx":"13","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Home.jsx":"14","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\BoardList.jsx":"15","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Board.jsx":"16","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Login.jsx":"17","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\userService.js":"18","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\boardService.js":"19","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\utilService.js":"20","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\socketService.js":"21","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\userActions.js":"22","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js":"23","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js":"24","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx":"25","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx":"26","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\systemAction.js":"27","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js":"28","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\httpService.js":"29","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\Upload.jsx":"30","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx":"31","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx":"32","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardNavbar.jsx":"33","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskDetails.jsx":"34","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\reviewService.js":"35","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\data\\board.js":"36","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx":"37","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js":"38","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx":"39","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardMembersModal.jsx":"40","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx":"41","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckList.jsx":"42","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\ActionList.jsx":"43","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\GroupModal.jsx":"44","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\ModalAction.jsx":"45","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckListStatus.jsx":"46","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MembersModal.jsx":"47","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\LabelModal.jsx":"48","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\DueDateModal.jsx":"49","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MoveModal.jsx":"50","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\CopyModal.jsx":"51","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\OverlayAction.jsx":"52","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\LabelTask.jsx":"53","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\InfoBoardModal.jsx":"54","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\calendar.jsx":"55","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Dashboard.jsx":"56","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\dashboard\\ChartMembersTasks.jsx":"57","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\dashboard\\ChartLabelsTasks.jsx":"58","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\dashboard\\ChartGroupsTasks.jsx":"59"},{"size":935,"mtime":1622540459727,"results":"60","hashOfConfig":"61"},{"size":377,"mtime":1622540459732,"results":"62","hashOfConfig":"61"},{"size":5201,"mtime":1622540459734,"results":"63","hashOfConfig":"61"},{"size":752,"mtime":1622540459748,"results":"64","hashOfConfig":"61"},{"size":535,"mtime":1622942158850,"results":"65","hashOfConfig":"61"},{"size":426,"mtime":1622648499511,"results":"66","hashOfConfig":"61"},{"size":900,"mtime":1623061953877,"results":"67","hashOfConfig":"61"},{"size":669,"mtime":1622540459746,"results":"68","hashOfConfig":"61"},{"size":688,"mtime":1622737964614,"results":"69","hashOfConfig":"61"},{"size":634,"mtime":1622942155030,"results":"70","hashOfConfig":"61"},{"size":6625,"mtime":1623002436898,"results":"71","hashOfConfig":"61"},{"size":3395,"mtime":1622540459729,"results":"72","hashOfConfig":"61"},{"size":1405,"mtime":1622631189360,"results":"73","hashOfConfig":"61"},{"size":3044,"mtime":1623140376887,"results":"74","hashOfConfig":"61"},{"size":5596,"mtime":1622997495124,"results":"75","hashOfConfig":"61"},{"size":9487,"mtime":1623138932100,"results":"76","hashOfConfig":"61"},{"size":5647,"mtime":1622977150971,"results":"77","hashOfConfig":"61"},{"size":2097,"mtime":1622540459739,"results":"78","hashOfConfig":"61"},{"size":3439,"mtime":1622987290933,"results":"79","hashOfConfig":"61"},{"size":4558,"mtime":1623064992643,"results":"80","hashOfConfig":"61"},{"size":2414,"mtime":1622540459737,"results":"81","hashOfConfig":"61"},{"size":1966,"mtime":1622640548548,"results":"82","hashOfConfig":"61"},{"size":2965,"mtime":1623063378595,"results":"83","hashOfConfig":"61"},{"size":1321,"mtime":1622560933611,"results":"84","hashOfConfig":"61"},{"size":201,"mtime":1622973291109,"results":"85","hashOfConfig":"61"},{"size":533,"mtime":1622640548535,"results":"86","hashOfConfig":"61"},{"size":756,"mtime":1622648563913,"results":"87","hashOfConfig":"61"},{"size":2370,"mtime":1622981800065,"results":"88","hashOfConfig":"61"},{"size":1136,"mtime":1622540459737,"results":"89","hashOfConfig":"61"},{"size":1709,"mtime":1622808340611,"results":"90","hashOfConfig":"61"},{"size":541,"mtime":1622919821664,"results":"91","hashOfConfig":"61"},{"size":6803,"mtime":1623148757313,"results":"92","hashOfConfig":"61"},{"size":12852,"mtime":1623139024444,"results":"93","hashOfConfig":"61"},{"size":23731,"mtime":1623148553408,"results":"94","hashOfConfig":"61"},{"size":1087,"mtime":1622540459738,"results":"95","hashOfConfig":"61"},{"size":305529,"mtime":1622540459726,"results":"96","hashOfConfig":"61"},{"size":325,"mtime":1623011506666,"results":"97","hashOfConfig":"61"},{"size":658,"mtime":1622732334917,"results":"98","hashOfConfig":"61"},{"size":847,"mtime":1622814288578,"results":"99","hashOfConfig":"61"},{"size":2253,"mtime":1622945874420,"results":"100","hashOfConfig":"61"},{"size":7781,"mtime":1623148757316,"results":"101","hashOfConfig":"61"},{"size":5876,"mtime":1622973291104,"results":"102","hashOfConfig":"61"},{"size":4701,"mtime":1623148599511,"results":"103","hashOfConfig":"61"},{"size":3464,"mtime":1623148757318,"results":"104","hashOfConfig":"61"},{"size":220,"mtime":1622695945231,"results":"105","hashOfConfig":"61"},{"size":662,"mtime":1622732334912,"results":"106","hashOfConfig":"61"},{"size":2305,"mtime":1622711586380,"results":"107","hashOfConfig":"61"},{"size":1719,"mtime":1622810502677,"results":"108","hashOfConfig":"61"},{"size":1668,"mtime":1622710699676,"results":"109","hashOfConfig":"61"},{"size":3169,"mtime":1622732334946,"results":"110","hashOfConfig":"61"},{"size":2973,"mtime":1622702719418,"results":"111","hashOfConfig":"61"},{"size":129,"mtime":1622695949888,"results":"112","hashOfConfig":"61"},{"size":4447,"mtime":1623055345773,"results":"113","hashOfConfig":"61"},{"size":2045,"mtime":1623060960359,"results":"114","hashOfConfig":"61"},{"size":705,"mtime":1622953902745,"results":"115","hashOfConfig":"61"},{"size":2984,"mtime":1623066474673,"results":"116","hashOfConfig":"61"},{"size":2617,"mtime":1623066718322,"results":"117","hashOfConfig":"61"},{"size":2477,"mtime":1623066217961,"results":"118","hashOfConfig":"61"},{"size":2077,"mtime":1623066245637,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1hkyyjl",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"122"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"122"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"122"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"122"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"122"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"122"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"122"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"122"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"122"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"122"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"122"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\index.js",[],["267","268"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\store.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\App.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js",["269"],"let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\nconst defUser = {\r\n  \"_id\": \"60b8a7f7f2ba7731f277d924\",\r\n  \"username\": \"abi@ababmi.com\",\r\n  \"fullname\": \"Tamir Matz\",\r\n  \"email\" : \"tamirmatz@gmail.com\",\r\n  \"password\": \"aBambi123\",\r\n  \"imgUrl\":\"https://res.cloudinary.com/dxsv4c229/image/upload/v1622708295/download_rjc2b5.jpg\",\r\n}\r\n\r\n\r\nconst initialState = {\r\n  loggedInUser: defUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\routes.js",["270"],"import { Home } from './pages/Home'\r\nimport { Chat } from './pages/Chat'\r\nimport { UserDetails } from './pages/UserDetails'\r\nimport { BoardList } from './pages/BoardList'\r\nimport { Board } from './pages/Board'\r\nimport { Login } from './pages/Login'\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/user/:userId',\r\n        component: UserDetails,\r\n    },\r\n    {\r\n        path: '/board/:boardId',\r\n        component: Board,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: BoardList\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n]\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx",["271"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { UserPreview } from '../cmps/board/UserPreview'\r\nimport { RiCheckboxMultipleBlankLine } from 'react-icons/ri'\r\nimport { IoIosNotificationsOutline, IoAppsSharp } from 'react-icons/io'\r\nimport { AiOutlineSearch } from 'react-icons/ai'\r\nimport { VscAdd, VscHome } from 'react-icons/vsc'\r\nimport { MdApps } from 'react-icons/md'\r\nimport { FiAlertCircle } from 'react-icons/fi'\r\n\r\n\r\n\r\nclass _AppHeader extends Component {\r\n    state = {\r\n        loggedInUser: null,\r\n        loginPage: false,\r\n        search: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loggedInUser: this.props.loggedInUser\r\n        })\r\n        if (this.props.loggedInUser) {\r\n            document.querySelector('.app-header').classList.remove('home-menu')\r\n            document.querySelector('.btn-login').classList.remove('btn-login')\r\n        } else {\r\n            document.querySelector('.app-header').classList.add('home-menu')\r\n            document.querySelector('.btn-login').classList.add('btn-login')\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.loggedInUser !== prevProps.loggedInUser) {\r\n            this.setState({\r\n                loggedInUser: this.props.loggedInUser\r\n            });\r\n            if (this.props.loggedInUser) {\r\n                document.querySelector('.app-header').classList.remove('row')\r\n            } else {\r\n                document.querySelector('.app-header').classList.add('row-reverse')\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeBoardName = () => {\r\n        // const board = this.props.board\r\n        // board.title = this.state.title\r\n        // this.props.updateBoard(board)\r\n        console.log('do search');\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    toggleLoginPage() {\r\n        this.setState({\r\n            ...this.state, loginPage: !this.state.loginPage\r\n        })\r\n    }\r\n    render() {\r\n        // const { loggedInUser } = this.props;\r\n        let className = \"app-header flex space-between center fam-1 font-s c-white signin\";\r\n        const { loggedInUser, loginPage } = this.state;\r\n\r\n        return <header className={className}>\r\n            {loggedInUser && (\r\n                <nav className=\"main-nav flex center space-between w-57\">\r\n                    <ul className=\"flex center\">\r\n\r\n                        <NavLink to=\"/\" className=\"icon-header bg-btn\">\r\n                            <MdApps className=\"add-icon-nav\" /></NavLink>\r\n\r\n                        <NavLink to=\"/boards\" className=\"icon-header bg-btn\">\r\n                            <VscHome className=\"add-icon-nav\" /></NavLink>\r\n\r\n\r\n                        <NavLink to=\"/board\" className=\"btn-boards boards-list-btn  flex center bg-btn\">\r\n                            <span className=\"icon-boards bold\">\r\n                                <RiCheckboxMultipleBlankLine />\r\n                            </span>\r\n                            <span className=\"\">Boards</span>\r\n                        </NavLink>\r\n                        <li className=\"flex center search-input-box bg-btn \">\r\n                            <div onClick={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.onChangeBoardName(ev)\r\n                            }} className=\"jump-to flex center\">\r\n                                <input type=\"text\"\r\n                                    className=\"app-input  font-m lh-20 c-white search-input-text fam-1 \"\r\n                                    name=\"search\"\r\n                                    onChange={this.handleChange}\r\n                                    autoComplete=\"off\"\r\n                                    value={this.state.title}\r\n                                    onBlur={this.onChangeBoardName}\r\n                                    placeholder={`Jump to...`}\r\n                                />\r\n                                <span className=\"icon-search flex center content-end\"><AiOutlineSearch /></span>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"logo font-5\">\r\n                        <Link to={`/`} className=\"app-header-logo\">\r\n                            <span className=\"logo-span\">T</span>askman\r\n                </Link>\r\n                    </div>\r\n                </nav>\r\n            )}\r\n\r\n\r\n            <nav className=\"main-nav flex space-evenly\">\r\n                {loggedInUser && (\r\n                    <nav className=\"main-nav flex center space-evenly\">\r\n                        <NavLink to=\"/board\" className=\"icon-header bg-btn\">\r\n                            <span className=\"small-icon flex center\">\r\n                                <VscAdd/>\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink to=\"/login\" className=\"icon-header bg-btn\" >\r\n                            <span className=\"small-icon flex center\">\r\n                                <FiAlertCircle />\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink to=\"/login\" className=\"icon-header bg-btn bg-danger\" >\r\n                            <span className=\"small-icon alert-icon flex center\">\r\n                                <IoIosNotificationsOutline />\r\n                            </span>\r\n                        </NavLink>\r\n\r\n                    </nav>\r\n                )}\r\n                {loggedInUser && (<NavLink to=\"/login\" className=\"btn-board\"><UserPreview user={loggedInUser} /></NavLink>)}\r\n\r\n                {(!loggedInUser && !loginPage) && (\r\n                    <div className=\"home-menu\" onClick={() => { this.toggleLoginPage() }}>\r\n                        <NavLink to=\"/login\" className=\"btn-login\">Login</NavLink>\r\n                    </div>\r\n                )}\r\n                {(!loggedInUser && loginPage) && (\r\n                    <div className=\"home-menu\" onClick={() => { this.toggleLoginPage() }}>\r\n                        <NavLink to=\"/\" className=\"btn-login\">Home</NavLink>\r\n                    </div>\r\n                )}\r\n            </nav>\r\n        </header>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Chat.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\UserDetails.jsx",["272","273","274"],"import React, { Component } from 'react'\r\nimport { Upload } from '../cmps/Upload'\r\nimport ProfileImg from '../assets/img/profilePic.jpg'\r\nimport { userService } from '../services/userService.js'\r\n\r\nexport class UserDetails extends Component {\r\n  state = {\r\n    user: null\r\n  }\r\n  async componentDidMount() {\r\n    const user = await userService.getById(this.props.match.params.userId)\r\n    // const user = {\r\n    //   _id: 'a123',\r\n    //   username: 'NadavMgr',\r\n    //   fullame: 'Nadav Magier',\r\n    //   email: 'nadav1410@gmail.com',\r\n    //   imgUrl: 'https://res.cloudinary.com/dorshaul/image/upload/v1617004425/ytav_twnglu.jpg',\r\n    //   createdAt: '2021-03-29T07:54:21.000Z'\r\n    // }\r\n    this.setState({ user })\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.user) return <div>loading..</div>\r\n    const { _id, username, fullname, email, imgUrl } = this.state.user\r\n    const url = (imgUrl) ? imgUrl : ProfileImg\r\n    return (\r\n      <section className=\"user-details-container\">\r\n        <div className=\"user-details flex\">\r\n          <img src={url} />\r\n          <div className=\"txt-user-details flex column fam-1\">\r\n            <span className=\"user-fullname\">{fullname}</span>\r\n            <span className=\"user-username\">@{username}</span>\r\n            <span className=\"user-email\">{email}</span>\r\n          </div>\r\n        </div>\r\n        {/* <Upload /> */}\r\n\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Home.jsx",["275","276","277","278","279","280","281","282","283"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MainImg from '../assets/img/home/main-img.svg'\r\nimport TeamworkImg from '../assets/img/home/teamwork.svg'\r\nimport TimeImg from '../assets/img/home/time.svg'\r\nimport OrganizeImg from '../assets/img/home/organize.svg'\r\nimport { loadReviews, addReview, removeReview } from '../store/actions/reviewActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Home extends Component {\r\n  state = {\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      reviewToEdit: {\r\n        ...prevState.reviewToEdit,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home-page flex column fam-1 \">\r\n        <div className=\"flex row-reverse mt-5 space-evenly \">\r\n          <div className=\"align-center flex column \">\r\n              <div className=\"c-stand  marg-2 ps-2 font-xl\"><span className=\"logo-span main-color\">T</span>askman</div>\r\n              <h1 className=\"fam-1 fs30 bold \">Task management</h1>\r\n              <h2 className=\"fam-1 fs30 bold\">The <span className=\"main-color\">easiest</span> way. </h2>\r\n              <Link to=\"/board/60b8a57c6845c04afc9a425a\"><button class=\"btn-hover color-3\">Try it now!</button></Link>\r\n          </div>\r\n          <img className=\"main-img w-50\" src={MainImg}/>\r\n        </div>\r\n        <div className=\"features flex row space-between\">\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1 bold\">All the tools your team needs</h3>\r\n            <span>Organize and assign tasks.</span>\r\n            <span>With lists, teams see immediately what they need to do,</span>\r\n            <span>which tasks are a priority, and when work is due.</span>\r\n            </div>\r\n          <img className=\"feature-img w-30\" src={TeamworkImg}/>\r\n          </div>\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1 bold\">Manage your time wisely</h3>\r\n            <span>Instantly see which projects are on track,</span>\r\n            <span>which ones are falling behind,</span>\r\n            <span>and what every team member is working on at a glance.</span>\r\n            </div>\r\n          <img className=\"feature-img w-25\" src={TimeImg}/>\r\n          </div>\r\n          <div className=\"feature flex column\">\r\n            <div className=\"feature-txt flex column\">\r\n            <h3 className=\"fam-1 bold\">Organize anything with anyone, anywhere</h3>\r\n            <span>Choose the project view that suits your style,</span>\r\n            <span> and collaborate no matter where you are.</span>\r\n            </div>\r\n          <img className=\"feature-img \" src={OrganizeImg}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\BoardList.jsx",["284","285","286"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { remove, add, query } from '../store/actions/boardsAction.js';\r\nimport { MiniBoard } from '../cmps/board/MiniBoard'\r\nimport { utilService } from '../services/generalService/utilService.js'\r\nclass _BoardList extends Component {\r\n    state = {\r\n        newBoard: {\r\n            title: '',\r\n            backgroundId: 0,\r\n            backgrounds: ['',\r\n            'https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2286x1600/24baa6609b89fb8eb0cc0aceb70eaf36/photo-1557682250-33bd709cbe85.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671389/backrounds/0_jflqwf.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671416/backrounds/1_gavwov.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991464/backrounds/images_nnscac.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991434/backrounds/ded84385480090c3464352f152dbc0c8_bzdu9x.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991432/backrounds/508751_bftz6u.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991426/backrounds/wp4676582_rhnghy.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991421/backrounds/Eb3zqm9WsAIalyT_sdypqq.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991411/backrounds/wallpapersden.com_cool-4k-pattern_3840x2160_ag3xac.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991393/backrounds/wp5633980_gb2sub.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991348/backrounds/65c7d4a8f34de11f9414ce49b847e56a_bvwpgt.gif',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991338/backrounds/Vaporwave-4K-Wallpapers_mmacwb.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991315/backrounds/thor-stormbreaker-minimalist-wallpaper_goxnts.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671401/backrounds/2_gstip0.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671404/backrounds/4_ly2zj7.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671430/backrounds/6_mi6wun.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671421/backrounds/7_oivv0t.jpg',\r\n        ]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.query()\r\n    }\r\n    onCreateBoard = async () => {\r\n        const { title, backgrounds, backgroundId } = this.state.newBoard\r\n        this.props.add(title, backgrounds[backgroundId])\r\n        this.props.query()\r\n    }\r\n    changeImg = (num) => {\r\n        const { backgroundId, backgrounds } = this.state.newBoard\r\n        if (backgroundId + num === backgrounds.length || backgroundId + num === -1) num = 0\r\n        this.setState(prevState => ({\r\n            newBoard: {\r\n                ...prevState.newBoard,\r\n                backgroundId: backgroundId + num,\r\n            }\r\n        }))\r\n    }\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({\r\n            newBoard: {\r\n                ...prevState.newBoard,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n    render() {\r\n        const { boards } = this.props\r\n        return (\r\n            <section className=\" w-100 flex column center content-center pad-3\">\r\n                <h1 className=\"fam-1 fs30 mb-2\">Choose Your Board...</h1>\r\n                <div className=\"boards-gallery flex h-40 w-100 gap-2 wrap\">\r\n                    <section className={\"miniBoard flex center content-center\"} style={{ backgroundImage: \"url(\" + this.state.newBoard.backgrounds[this.state.newBoard.backgroundId] + \")\" }}>\r\n                        <form className=\"add-board\" onSubmit={(ev) => {\r\n                            ev.preventDefault()\r\n                            this.onCreateBoard()\r\n                        }}>\r\n                            <input type=\"text\" name=\"title\" onChange={this.handleChange} placeholder=\"Board title...\" />\r\n                            <div className=\"change-img-container flex space-between control-img\">\r\n                                <span className=\"change-img\" onClick={() => { this.changeImg(-1) }}>{'<'}</span>\r\n                                <button>Create board</button>\r\n                                <span className=\"change-img\" onClick={() => { this.changeImg(1) }}>{'>'}</span>\r\n                            </div>\r\n                        </form>\r\n                    </section>\r\n                    {boards && boards.map(board => {\r\n                        if (board.isFavorite)\r\n                        return <Link key={board._id} to={`board/${board._id}`}><MiniBoard board={board} /></Link>\r\n                    })}\r\n                    {boards && boards.map(board => {\r\n                        if (!board.isFavorite)\r\n                        return <Link key={board._id} to={`board/${board._id}`}><MiniBoard board={board} /></Link>\r\n                    })}\r\n                    {!boards && <h1 >No boards to show</h1>}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardModule.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    remove,\r\n    add,\r\n    query\r\n}\r\nexport const BoardList = connect(mapStateToProps, mapDispatchToProps)(_BoardList)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Board.jsx",["287","288"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Login.jsx",["289"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Upload } from '../cmps/Upload'\r\nimport LoginPic from '../assets/img/login.svg'\r\nimport {\r\n  loadUsers,\r\n  removeUser,\r\n  login,\r\n  logout,\r\n  signup\r\n} from '../store/actions/userActions'\r\n\r\nclass _Login extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      username: '',\r\n      password: ''\r\n    },\r\n    signupCred: {\r\n      username: '',\r\n      password: '',\r\n      fullname: ''\r\n    },\r\n    toggleLogin: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadUsers()\r\n  }\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  toggleLogin = () => {\r\n    this.setState({ ...this.state, toggleLogin: !this.state.toggleLogin })\r\n  }\r\n  signupHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault()\r\n    try {\r\n      this.props.login({ username: this.state.loginCred.username, password: this.state.loginCred.password })\r\n      document.querySelector('.app-header').classList.add('bg-header-board');\r\n      this.props.history.push('/board')\r\n\r\n      this.setState({ loginCred: { username: '', password: '' } })\r\n    } catch (err) {\r\n      this.setState({ msg: 'Login failed, try again.' })\r\n    }\r\n  }\r\n\r\n  doSignup = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password, fullname } = this.state.signupCred\r\n    if (!username || !password || !fullname) {\r\n      return this.setState({ msg: 'All inputs are required' })\r\n    }\r\n    const signupCreds = { username, password, fullname }\r\n    this.props.signup(signupCreds)\r\n    this.setState({ signupCred: { username: '', password: '', fullname: '' } })\r\n  }\r\n\r\n  removeUser = userId => {\r\n    this.props.removeUser(userId)\r\n  }\r\n\r\n  doLogout = () => {\r\n    this.props.logout()\r\n    this.props.history.push('/')\r\n    document.querySelector('.app-header').classList.remove('bg-header-board');\r\n  }\r\n  render() {\r\n    let signupSection = (\r\n      <form className=\"flex column sign-up space-between\" onSubmit={this.doSignup}>\r\n        <h2 className=\"fam-1 font-3 fw-2\">Signup</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"fullname\"\r\n          value={this.state.signupCred.fullname}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Full name\"\r\n          autoComplete=\"fullname\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Username\"\r\n          autoComplete=\"username\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n        <br />\r\n        <Upload />\r\n        <div className=\"flex space-between\">\r\n          <button className=\"sign-btn\">Signup</button>\r\n          <button className=\"login-btn\" onClick={() => this.toggleLogin()}>Login</button>\r\n        </div>\r\n      </form>\r\n    )\r\n    let loginSection = (\r\n      <form className=\"login flex column  w-100 h-80 space-between\" onSubmit={this.doLogin}>\r\n        <h2 className=\"fam-1 font-3 fw-2 mb-1\">Login</h2>\r\n\r\n        <select\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n        >\r\n          <option value=\"\">Select User</option>\r\n          {this.props.users && this.props.users.map(user => <option key={user._id} value={user.username}>{user.fullname}</option>)}\r\n        </select>\r\n        \r\n\r\n        {/* <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Username\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.loginCred.password}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br /> */}\r\n        <div className=\"flex space-between mt-3\">\r\n          <button className=\"login-btn\">Login</button>\r\n          <button className=\"login-btn\" onClick={() => this.toggleLogin()}>Sign-in</button>\r\n        </div>\r\n\r\n      </form>\r\n    )\r\n\r\n    const { loggedInUser } = this.props\r\n    const toggleLogin = this.state.toggleLogin;\r\n    return (\r\n      <div className=\"login-sign-up flex column right content-center\">\r\n        {/* <p>{this.state.msg}</p> */}\r\n\r\n        {loggedInUser && (\r\n          <div>\r\n            <h3>\r\n              Welcome {loggedInUser.fullname}\r\n              <button onClick={() => { this.doLogout() }}>Logout</button>\r\n            </h3>\r\n          </div>\r\n        )}\r\n\r\n        {(!loggedInUser && toggleLogin) && loginSection}\r\n        {(!loggedInUser && !toggleLogin) && signupSection}\r\n          {/* <LoginPic/> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    isLoading: state.systemModule.isLoading\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  removeUser,\r\n  loadUsers,\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\userService.js",["290"],"// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './generalService/httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\boardService.js",["291","292","293","294"],"import { utilService } from './generalService/utilService.js'\r\nimport { storageService } from './generalService/asyncStorageService.js'\r\nimport { httpService } from '../services/generalService/httpService.js'\r\nimport { BsBookmarkDash } from 'react-icons/bs';\r\nimport { Board } from '../pages/Board.jsx';\r\n\r\nwindow.storageService = storageService;\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    update,\r\n    add,\r\n    getGroupById,\r\n    getTaskById,\r\n    getGroupIdxById,\r\n    checklistPreview,\r\n    getTaskIdxById,\r\n    checklistPrecent,\r\n    updateTaskAtBoard,\r\n    getTasks,\r\n    \r\n}\r\n\r\n\r\nfunction query() {\r\n    // return storageService.query(STORAGE_KEY)\r\n    return httpService.get('board')\r\n}\r\n\r\nfunction getById(boardId) {\r\n    // const board = storageService.get(STORAGE_KEY, boardId);\r\n    // return board\r\n    return httpService.get(`board/${boardId}`)\r\n\r\n}\r\n\r\nfunction remove(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function add(title, background) {\r\n    // const newBoard = _createBoard()\r\n    // const savedBoard = storageService.post(STORAGE_KEY, newBoard)\r\n    // return savedBoard\r\n    const board = { title, style: { background } }\r\n    const res = await httpService.post(`board`, board)\r\n    return res\r\n}\r\n\r\nasync function update(board, activity) {\r\n    const res = await httpService.put(`board/${board._id}`, { board, activity })\r\n    return res\r\n\r\n}\r\n\r\n//task crud\r\nfunction getGroupById(board, groupId) {\r\n    return board.groups.find(group => group.id === groupId);\r\n}\r\n\r\nfunction getGroupIdxById(board, groupId) {\r\n    return board.groups.findIndex(group => group.id === groupId);\r\n}\r\n\r\nfunction getTaskIdxById(group, taskId) {\r\n    return group.tasks.findIndex(task => task.id === taskId);\r\n}\r\n\r\nfunction getTaskById(group, taskId) {\r\n    return group.tasks.find(task => task.id === taskId)\r\n}\r\n\r\nfunction checklistPreview(task) {\r\n    const checklists = task.checklists\r\n    let isDone = false\r\n    let allTodos = 0;\r\n    let doneTodos = 0;\r\n    checklists.forEach(checkList => {\r\n        allTodos += checkList.todos.length;\r\n        checkList.todos.forEach(todo => {\r\n            if (todo.isDone) doneTodos++\r\n        })\r\n    });\r\n    if (doneTodos === allTodos && allTodos) isDone = true;\r\n    const str = `${doneTodos}/${allTodos}`\r\n    const res = { str, isDone }\r\n    return res\r\n}\r\n\r\nfunction checklistPrecent(checklist) {\r\n    let doneTodos = 0;\r\n    checklist.todos.forEach(todo => {\r\n        if (todo.isDone) doneTodos++\r\n    })\r\n    const precent = (doneTodos / checklist.todos.length) * 100\r\n\r\n    return precent\r\n}\r\n\r\nfunction _updateTaskAtGroup(group, updateTask) {\r\n    const idx = group.tasks.findIndex(task => {\r\n        task.id = updateTask.id;\r\n    })\r\n    group.tasks.splice(idx, 1, updateTask);\r\n    return group;\r\n}\r\n\r\nfunction _updateGroupAtBoard(board, updateGroup) {\r\n    const idx = getGroupIdxById(board, updateGroup.id)\r\n    board.groups[idx] = updateGroup;\r\n    return board;\r\n}\r\n\r\nfunction updateTaskAtBoard(board, group, updateTask) {\r\n    const updateGroup = _updateTaskAtGroup(group, updateTask);\r\n    const updateBoard = _updateGroupAtBoard(board, updateGroup);\r\n    return updateBoard;\r\n}\r\n\r\nfunction getTasks(groups) {\r\n    console.log(groups);\r\n    const tasks = [];\r\n    groups.forEach( group => {\r\n        group.tasks.forEach(task => {\r\n            tasks.push(task);\r\n        });\r\n    })\r\n    return tasks;\r\n}\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\utilService.js",["295","296"],"\r\nexport const utilService = {\r\n  delay,\r\n  getRandomInt,\r\n  formatNewTask,\r\n  makeId,\r\n  isFalse,\r\n  formatNewGroup,\r\n  getFormattedDate,\r\n  timeAgo,\r\n  deepClone,\r\n  getIsOverflowY,\r\n  mapArrayToObject,\r\n  hexToRGB,\r\n  randColor\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, ms)\r\n  })\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n  var txt = '';\r\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return txt;\r\n}\r\n\r\nfunction isFalse(el) {\r\n  return Array.isArray(el) ? !!el.length : !!el\r\n}\r\n\r\nfunction formatNewTask(task) {\r\n  const id = makeId()\r\n  return { id, description: '', comments: [], checklists: [], members: [], ...task }\r\n}\r\n\r\nfunction formatNewGroup(group) {\r\n  return { id: makeId(), style: {}, tasks: [], ...group }\r\n}\r\n\r\nconst MONTH_NAMES = [\r\n  'January', 'February', 'March', 'April', 'May', 'June',\r\n  'July', 'August', 'September', 'October', 'November', 'December'\r\n];\r\n\r\n\r\nfunction getFormattedDate(date, prefomattedDate = false, hideYear = false) {\r\n  const newDate = new Date(date)\r\n  const month = MONTH_NAMES[newDate.getMonth()];\r\n  const day = newDate.getUTCDate();\r\n  return `${month.slice(0, 3)} ${day}`;\r\n}\r\n\r\nfunction deepClone(el) {\r\n  return JSON.parse(JSON.stringify(el))\r\n}\r\n\r\n// --- Main function\r\nfunction timeAgo(dateParam) {\r\n  if (!dateParam) {\r\n    return null;\r\n  }\r\n\r\n  const date = typeof dateParam === 'object' ? dateParam : new Date(dateParam);\r\n  const DAY_IN_MS = 86400000; // 24 * 60 * 60 * 1000\r\n  const today = new Date();\r\n  const yesterday = new Date(today - DAY_IN_MS);\r\n  const seconds = Math.round((today - date) / 1000);\r\n  const minutes = Math.round(seconds / 60);\r\n  const isToday = today.toDateString() === date.toDateString();\r\n  const isYesterday = yesterday.toDateString() === date.toDateString();\r\n  const isThisYear = today.getFullYear() === date.getFullYear();\r\n\r\n\r\n  if (seconds < 5) {\r\n    return 'now';\r\n  } else if (seconds < 60) {\r\n    return `${seconds} seconds ago`;\r\n  } else if (seconds < 90) {\r\n    return 'about a minute ago';\r\n  } else if (minutes < 60) {\r\n    return `${minutes} minutes ago`;\r\n  } else if (isToday) {\r\n    return getFormattedDate(date, 'Today'); // Today at 10:20\r\n  } else if (isYesterday) {\r\n    return getFormattedDate(date, 'Yesterday'); // Yesterday at 10:20\r\n  } else if (isThisYear) {\r\n    return getFormattedDate(date, false, true); // 10. January at 10:20\r\n  }\r\n\r\n\r\n  return getFormattedDate(date); // 10. January 2017. at 10:20\r\n}\r\n\r\nfunction getIsOverflowY(height, { clientY }, el = document.documentElement) {\r\n  const diff = height + clientY - el.clientHeight\r\n  return diff > 0 ? diff : false\r\n}\r\n\r\n\r\nfunction mapArrayToObject(arr) {\r\n  return Object.assign({}, arr);\r\n}\r\n\r\n\r\nfunction hexToRGB(h, isPct) {\r\n  let r = 0, g = 0, b = 0;\r\n  isPct = isPct === true;\r\n\r\n  if (h.length == 4) {\r\n    r = \"0x\" + h[1] + h[1];\r\n    g = \"0x\" + h[2] + h[2];\r\n    b = \"0x\" + h[3] + h[3];\r\n\r\n  } else if (h.length == 7) {\r\n    r = \"0x\" + h[1] + h[2];\r\n    g = \"0x\" + h[3] + h[4];\r\n    b = \"0x\" + h[5] + h[6];\r\n  }\r\n\r\n  if (isPct) {\r\n    r = +(r / 255 * 100).toFixed(1);\r\n    g = +(g / 255 * 100).toFixed(1);\r\n    b = +(b / 255 * 100).toFixed(1);\r\n  }\r\n\r\n  return \"rgb(\" + (isPct ? r + \"%,\" + g + \"%,\" + b + \"%\" : +r + \",\" + +g + \",\" + +b) + \")\";\r\n}\r\n\r\nfunction randColor(count) {\r\n\r\n  var colorArray = [\r\n    ['rgba(85, 239, 196,0.5)', 'rgba(0, 184, 148,1.0)'],\r\n    ['rgba(129, 236, 236,0.5)','rgba(0, 206, 201,1.0)'],\r\n    ['rgba(116, 185, 255,0.5)','rgba(9, 132, 227,1.0)'],\r\n    ['rgba(162, 155, 254,0.5)','rgba(108, 92, 231,1.0)'],\r\n    ['rgba(223, 230, 233,0.5)','rgba(178, 190, 195,1.0)'],\r\n    ['rgba(255, 234, 167,0.5)','rgba(253, 203, 110,1.0)'],\r\n    ['rgba(250, 177, 160,0.5)','rgba(225, 112, 85,1.0)'],\r\n    ['rgba(255, 118, 117, 0.5)','rgba(214, 48, 49,1.0)'],\r\n    ['rgba(253, 121, 168,0.5)','rgba(232, 67, 147,1.0)'],\r\n    ['rgba(99, 110, 114,0.5)','rgba(45, 52, 54,1.0)'],\r\n  ];\r\n  const colors = [];\r\n  let randNum;\r\n  for (let index = 0; index < count; index++) {\r\n    randNum = this.getRandomInt(1, colorArray.length);\r\n    console.log(randNum);\r\n    colors.push(colorArray[randNum])\r\n    colorArray.splice(randNum,1)\r\n  }\r\n\r\n  return colors\r\n}","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\socketService.js",["297"],"import io from 'socket.io-client'\r\nimport {httpService} from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\nfunction cb(x) {console.log(x)}\r\nsocketService.on('baba', cb)\r\nsocketService.on('mama', cb)\r\nsocketService.on('lala', cb)\r\nsocketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js",["298"],"import { boardService } from '../../services/boardService'\r\nimport { socketService } from '../../services/generalService/socketService'\r\nimport { utilService } from '../../services/generalService/utilService'\r\n\r\nexport function query() { // Action Creator\r\n    return async dispatch => {\r\n        const boards = await boardService.query()\r\n        const action = {\r\n            type: 'SET_BOARDS',\r\n            boards\r\n        }\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport function loadBoard(boardId) { // Action Creator\r\n\r\n    return async dispatch => {\r\n        const board = await boardService.getById(boardId);\r\n        board.labels = [\r\n            {id: \"l101\", title: \"Tamir\", color: \"#fc5c65\"},\r\n            {id: \"l102\", title: \"Nadav\", color: \"#fd9644\"},\r\n            {id: \"l103\", title: \"Harel\", color: \"#fed330\"},\r\n            {id: \"l104\", title: \"Done\", color: \"#26de81\"},\r\n            {id: \"l105\", title: \"Help\", color: \"#45aaf2\"},\r\n            {id: \"l106\", title: \"QA\", color: \"#4b7bec\"},\r\n            {id: \"l107\", title: \"UI\", color: \"#a55eea\"},\r\n            {id: \"l108\", title: \"Dev\", color: \"#778ca3\"},\r\n            ]\r\n        const action = {\r\n            type: 'SET_BOARD',\r\n            board\r\n        }\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport function setBoard(board) { \r\n    return async dispatch => {\r\n        const action = {\r\n            type: 'SET_BOARD',\r\n            board\r\n        }\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function remove(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.remove(boardId)\r\n            const action = {\r\n                type: 'REMOVE_BOARD',\r\n                boardId\r\n            }\r\n            dispatch(action)\r\n        } catch (err) {\r\n            console.log('BoardActions: err in removeBoard', err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function update(board,activity) {\r\n    // Action Creator\r\n    return async dispatch => {\r\n        try {      \r\n            const copyBoard = utilService.deepClone(board)\r\n            copyBoard.activities.unshift(activity)\r\n            const action = {\r\n                type: 'UPDATE_BOARD',\r\n                updatedBoard: copyBoard\r\n            }\r\n            dispatch(action)\r\n\r\n            delete board.activities\r\n            socketService.emit('update board',copyBoard)\r\n            const updatedBoard = await boardService.update(board,activity)\r\n        } catch (err){\r\n            console.log('BoardActions: err in update board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function add(title, background) {\r\n    // Action Creator\r\n    return async dispatch => {\r\n        try {\r\n            const newBoard = await boardService.add(title,background)          \r\n            const action = {\r\n                type: 'ADD_BOARD',\r\n                board: newBoard\r\n            }\r\n            dispatch(action)\r\n        } catch (err){\r\n            console.log('BoardActions: err in addBoard', err)\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js",["299","300"],"import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../../services/generalService/socketService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n      // socketService.on(SOCKET_EVENT_REVIEW_ADDED, review =>{\r\n      //   dispatch({ type: 'ADD_REVIEW', review })\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\store\\actions\\systemAction.js",["301"],"import { utilService } from '../../services/generalService/utilService';\r\n\r\nexport function loading() { // Action Creator\r\n    return async dispatch => {\r\n        try {\r\n            dispatch('LOADING_DONE');\r\n            dispatch('LOADING_START');\r\n            setTimeout(() => {\r\n                dispatch('LOADING_DONE');\r\n            }, 1500);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function toggleLabel(toggleValue) {\r\n    return async dispatch => {\r\n        try {\r\n            const action = {\r\n                type: 'TOGGLE_LABEL',\r\n                value: toggleValue\r\n            }\r\n            dispatch(action)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\httpService.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\Upload.jsx",["302","303"],"import { Component } from 'react'\r\nimport { cloudinaryService } from '../services/generalService/cloudinaryService'\r\nimport { BsImage } from 'react-icons/bs'\r\nimport { remove, add, loadBoard, update } from '../store/actions/boardsAction.js'\r\nimport { connect } from 'react-redux'\r\nimport {boardService} from '../services/boardService.js'\r\n\r\n\r\nclass _Upload extends Component {\r\n  state = {\r\n    imgUrl: null,\r\n    minHeight: 300,\r\n    maxHeight: 200,\r\n    height: 'auto',\r\n    width: 200,\r\n    isUploading: false\r\n  }\r\n\r\n  uploadImg = async (ev) => {\r\n    this.setState({ isUploading: true })\r\n    const { secure_url, height, width } = await cloudinaryService.uploadImg(ev)\r\n    this.setState({ isUploading: false, imgUrl: secure_url, height, width },()=> {this.props.addImgToTask(this.state.imgUrl)})\r\n  }\r\n  get uploadMsg() {\r\n    const { imgUrl, isUploading } = this.state\r\n    if (imgUrl) return 'Upload Another?'\r\n    return isUploading ? 'Uploading....' : 'Upload Image'\r\n  }\r\n  render() {\r\n    const { imgUrl, width, height } = this.state\r\n    const previewStyle = {\r\n      backgroundImage: `url(${imgUrl})`,\r\n      width,\r\n      height\r\n    }\r\n    return (\r\n      <div>\r\n        <label className=\"btn-action\" htmlFor=\"imgUpload\"><BsImage className=\"action-icon\" />Image</label>\r\n        <input hidden type=\"file\" onChange={ this.uploadImg } accept=\"img/*\" id=\"imgUpload\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loggedInUser: state.userModule.loggedInUser,\r\n      board: state.boardModule.board\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  remove,\r\n  add,\r\n  loadBoard,\r\n  update\r\n}\r\nexport const Upload = connect(mapStateToProps, mapDispatchToProps)(_Upload)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx",["304","305"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardNavbar.jsx",["306","307","308","309"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskDetails.jsx",["310","311","312","313","314","315","316"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\reviewService.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\data\\board.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx",["317"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { UserPreview } from './UserPreview';\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nclass _MembersBoard extends Component {\r\n    render() {\r\n        const members = this.props.board.members;\r\n        return (\r\n            <section className=\"members-board flex space-between \">\r\n                {members.map(member =>\r\n                    <NavLink key={member._id} to={`/user/${member._id}`}>\r\n                        <UserPreview user={member} />\r\n                    </NavLink>)}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\nexport const MembersBoard = connect(mapStateToProps, mapDispatchToProps)(_MembersBoard)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardMembersModal.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx",["318","319","320","321","322","323"],"import { Link } from 'react-router-dom'\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Provider } from 'react-redux';\r\nimport { boardService } from '../../services/boardService.js'\r\nimport { BsCheckBox } from 'react-icons/bs'\r\nimport { FaRegCommentDots } from 'react-icons/fa'\r\nimport { AiOutlineClockCircle, AiOutlineClose } from 'react-icons/ai'\r\nimport { GrTextAlignFull } from 'react-icons/gr'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/generalService/utilService'\r\nimport React, { Component } from 'react'\r\nimport { UserPreview } from './UserPreview.jsx';\r\n\r\nimport { toggleLabel } from '../../store/actions/systemAction.js';\r\n\r\n\r\n\r\n// export function TaskPreview({ board, index, task, updateBoard, groupId }) {\r\nclass _TaskPreview extends Component {\r\n\r\n    getStyle = (style, snapshot) => {\r\n        if (!snapshot.isDropAnimating) {\r\n            return style;\r\n        }\r\n        const { moveTo, curve, duration } = snapshot.dropAnimation;\r\n        // move to the right spot\r\n        const translate = `translate(${moveTo.x}px, ${moveTo.y}px)`;\r\n        // add a bit of turn for fun\r\n        const rotate = 'rotate(0.01turn)';\r\n\r\n        // patching the existing style\r\n        return {\r\n            ...style,\r\n            background: '#fff',\r\n            transform: `${translate} ${rotate}`,\r\n            // slowing down the drop because we can\r\n            transition: `all ${curve} 0.2s`,\r\n        };\r\n    }\r\n\r\n    onRemoveTask = (taskId) => {\r\n        const { board, index, task, updateBoard, groupId } = this.props\r\n        const group = board.groups[boardService.getGroupIdxById(board, groupId)]\r\n        board.groups[boardService.getGroupIdxById(board, groupId)].tasks.splice(boardService.getTaskIdxById(group, taskId), 1)\r\n        updateBoard({ ...board })\r\n    }\r\n\r\n    dueDateDonePreview = (task) => {\r\n        if(task.isDone) return 'done-preview'\r\n        else return ''\r\n     }\r\n    render() {\r\n        const { board, index, task, group, groupId } = this.props\r\n        const isLabelOpen = this.props.isLabelOpen;\r\n        return <Draggable\r\n            draggableId={task.id}\r\n            index={index}\r\n        // isDragDisabled={false}\r\n        >\r\n            {(provided, snapshot) => {\r\n                return (\r\n                    <div\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                        isdragging={snapshot.isDragging && !snapshot.isDropAnimating ? 'true' : 'false'}\r\n                        style={this.getStyle(provided.draggableProps.style, snapshot)}\r\n                    >\r\n                        <div className=\"wrap-list-task br-3\">\r\n                            <div className=\"wrap-task-prev\">\r\n                            {task.imgUrl && <img className=\"preview-img\" src={task.imgUrl}/> }\r\n                                <div className=\"task-preview flex column\">\r\n                                    {/* <Link to={`/board/${board._id}/${task.id}`}> */}\r\n                                    <span className=\"cur-pointer fam-1 font-s bold flex d-none \" onClick={() => { this.onRemoveTask(task.id) }}><AiOutlineClose className=\"preview-icon\" /></span>\r\n                                    {utilService.isFalse(task.labelIds) &&\r\n                                                <div className=\"labels-container flex  wrap\" onClick={(ev) => {\r\n                                                    ev.stopPropagation();\r\n                                                }}>\r\n                                                    {\r\n                                                        task.labelIds.map(labelId => {\r\n                                                            const label = board.labels.find(label => {\r\n                                                                return label.id === labelId;\r\n                                                            })\r\n\r\n                                                            if (label) {\r\n                                                                return <div\r\n                                                                    key={label.id}\r\n                                                                    className={`preview-label flex  ${isLabelOpen && \"label-open\"}`}\r\n                                                                    onClick={() => this.props.toggleLabel(!isLabelOpen)}\r\n                                                                    style={{ backgroundColor: label.color }}\r\n                                                                >\r\n                                                                    {this.props.isLabelOpen && label.title}\r\n                                                                </div>\r\n                                                            }\r\n                                                        })}\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <Link to={`/board/${board._id}/${groupId}/${task.id}`}>\r\n\r\n\r\n                                        <h1 style={{color:group.color?group.color:'#333'}} className=\"task-title fam-1 font-m\">{task.title}</h1>\r\n                                        <div className=\"task-mini-details flex row-reverse w-100 space-between gap-xs fam-1 c-stand center\">\r\n                                            <div>\r\n                                            {utilService.isFalse(task.members) && <small className=\"flex center\">{task.members.map(member => { return <UserPreview key={member._id} user={member} /> }).splice(0, 3)}</small>}\r\n                                            </div>\r\n                                            <div className=\"flex\">\r\n                                            {utilService.isFalse(task.comments) && <small className=\"flex center\"><FaRegCommentDots className=\"preview-icon\" /></small>}\r\n                                            {utilService.isFalse(task.checklists) && <div className={`preview-icon flex row center ${boardService.checklistPreview(task).isDone && \"done-preview\"}`}>\r\n                                                <BsCheckBox className=\"preview-icon\" />\r\n                                                <small>{boardService.checklistPreview(task).str}</small>\r\n                                            </div>}\r\n                                            {task.dueDate && <div className={`preview-icon flex row center ${this.dueDateDonePreview(task)}`}>\r\n                                                <AiOutlineClockCircle className=\"preview-icon\" />\r\n                                                <small>\r\n                                                    { utilService.getFormattedDate(task.dueDate) }\r\n                                                </small>\r\n                                            </div>}\r\n                                            {task.description && <small className=\"flex center\"><GrTextAlignFull className=\"preview-icon\" /></small>}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            }\r\n        </Draggable>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        isLabelOpen : state.systemModule.isLabelsOpen\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    toggleLabel\r\n}\r\nexport const TaskPreview = connect(mapStateToProps, mapDispatchToProps)(_TaskPreview)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckList.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\ActionList.jsx",["324","325","326"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\GroupModal.jsx",["327","328","329","330"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { remove, add, loadBoard, update, setBoard } from '../../../../../store/actions/boardsAction.js';\r\nimport { boardService } from '../../../../../services/boardService.js'\r\n\r\nclass _GroupModal extends Component {\r\n    state = {\r\n        group: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ group: this.props.group })\r\n    }\r\n\r\n    changeGroupColor(color){\r\n        const copyBoard={...this.props.board}\r\n        const groupIdx=boardService.getGroupIdxById(copyBoard, this.state.group.id)\r\n        copyBoard.groups[groupIdx].color=color\r\n        this.props.update(copyBoard)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    addTask = () => {\r\n\r\n    }\r\n\r\n    removeList = (groupId) => {\r\n        const copyBoard = { ...this.props.board }\r\n        const groupIdx = boardService.getGroupIdxById(copyBoard, groupId)\r\n        copyBoard.groups.splice(groupIdx,1)\r\n        this.props.update(copyBoard)\r\n    }\r\n    render() {\r\n        const group = this.state.group;\r\n        if (!group) return <h1>Loading...</h1>\r\n        const groupId = group.id;\r\n        return <div className={`action-modal group-wrap-modal g-${groupId} d-none p-abs flex`}>\r\n            <ModalAction>\r\n                <div className=\"group-modal p-abs flex column pad-07 c-stand z-1 br-3\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center space-between gap-5 w-100 mb-1\">\r\n                        <h1 className=\"fam-1 font-2 \">List: {group.title}</h1>\r\n                        <span className=\"cur-pointer fam-1 font-m bold\" onClick={() => { this.props.toggleModal(`${groupId}`) }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content\">\r\n                        <ul className=\"flex column space-between\">\r\n                            <ul >\r\n                                <li onClick={() => { this.AddTask() }} className=\"font-2 fam-1 pad-1 li-btn flex center\">Add Task...</li>\r\n                                <li onClick={() => { this.removeList(groupId) }} className=\"font-2 fam-1 pad-1 flex center li-btn\">Remove List...</li>\r\n                                <li className=\"group-colors font-2 fam-1 pad-1 flex center\">\r\n                                   { this.props.board.labels.map(label=><div onClick={()=>{this.changeGroupColor(label.color)}} className=\"group-label\" style={{backgroundColor:label.color}}></div>)    }\r\n                                </li>\r\n                            </ul>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const GroupModal = connect(mapStateToProps, mapDispatchToProps)(_GroupModal)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\shared\\ModalAction.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckListStatus.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MembersModal.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\LabelModal.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\DueDateModal.jsx",["331"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport {utilService} from '../../../../../services/generalService/utilService'\r\n\r\n\r\n\r\n\r\nclass _DueDateModal extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"action-modal duedate-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"duedate-modal p-abs flex column pad-1\">\r\n                <div className=\"header-modal font-1 fam-1 fw-2 flex center space-between gap-5 w-100 mb-1\">\r\n                        <h1 className=\"fam-1 font-1\">DueDate</h1>\r\n                        <span className=\"cur-pointer fam-1 font-1 bold\" onClick={() => { this.props.toggleModal('duedate-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content\">\r\n                        <ul>\r\n                            <input onChange={(ev) => { this.props.onSaveDueDate(ev.target.valueAsNumber)}} type=\"date\" name=\"date\"  className=\"input-date fam-1\"/>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const DueDateModal = connect(mapStateToProps, mapDispatchToProps)(_DueDateModal)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MoveModal.jsx",["332","333"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { LabelTask } from '../LabelTask'\r\nimport { update } from '../../../../../store/actions/boardsAction';\r\nimport { boardService } from '../../../../../services/boardService'\r\n\r\n\r\nclass _MoveModal extends Component {\r\n    state = {\r\n        moveTo: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    \r\n    // moveTask = () => {\r\n    //     if (this.state.moveTo !== this.props.group.id) {\r\n    //         const copyBoard = { ...this.props.board }\r\n    //         copyBoard.groups[boardService.getGroupIdxById(copyBoard, this.props.group.id)].tasks.splice(\r\n    //             boardService.getTaskIdxById(this.props.group, this.props.task.id), 1)\r\n    //         copyBoard.groups[this.state.moveTo].tasks.push(this.props.task)\r\n    //         this.props.update(copyBoard)\r\n    //     }\r\n    //     // this.props.history.push(`/board/${copyBoard._id}`)\r\n    // }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log(target.value)\r\n        this.setState({ moveTo: target.value })\r\n    }\r\n    render() {\r\n        const {moveTask} = this.props\r\n        return <div className=\"action-modal move-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"move-modal w-100 p-abs flex column pad-1\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center space-between gap-5 w-100 mb-1\">\r\n                        <h1 className=\"fam-1 font-1 \">Move to</h1>\r\n                        <span className=\"cur-pointer fam-1 font-s bold\" onClick={() => { this.props.toggleModal('move-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content w-100\">\r\n                        <form onSubmit={(ev) => {\r\n                            moveTask(this.state.moveTo)\r\n                            ev.preventDefault()\r\n                        }}>\r\n                            <select onChange={this.handleChange}>\r\n                                {this.props.board.groups.map((group, idx) => {\r\n                                    return group.id === this.props.group.id && <option key={group.id} value={group.id}>{group.title}</option>\r\n                                })}\r\n                                {this.props.board.groups.map((group, idx) => {\r\n                                    return group.id !== this.props.group.id && <option value={idx} key={group.id}>{group.title}</option>\r\n                                })}\r\n                            </select>\r\n                            <button className=\"btn-copy-move\">Move</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const MoveModal = connect(mapStateToProps, mapDispatchToProps)(_MoveModal)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\CopyModal.jsx",["334","335"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { LabelTask } from '../LabelTask'\r\nimport { update } from '../../../../../store/actions/boardsAction';\r\nimport { boardService } from '../../../../../services/boardService'\r\nimport { utilService } from '../../../../../services/generalService/utilService';\r\n\r\n\r\nclass _CopyModal extends Component {\r\n    state = {\r\n        copyTo: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    copyTask = () => {\r\n        if (this.state.copyTo !== this.props.group.id) {\r\n            const copyBoard = { ...this.props.board }\r\n            const task = { ...this.props.task }\r\n            task.id = utilService.makeId()\r\n            copyBoard.groups[this.state.copyTo].tasks.push(task)\r\n            this.props.update(copyBoard)\r\n        }\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log(target.value)\r\n        this.setState({ copyTo: target.value })\r\n    }\r\n    render() {\r\n        return <div className=\"action-modal copy-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"copy-modal p-abs flex column pad-1\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center space-between gap-5 w-100 mb-1\">\r\n                        <h1 className=\"fam-1 font-1\">Copy</h1>\r\n                        <span className=\"cur-pointer fam-1 font-1 bold\" onClick={() => { this.props.toggleModal('duedate-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content\">\r\n                        <form onSubmit={(ev) => {\r\n                            this.copyTask()\r\n                            ev.preventDefault()\r\n                        }}>\r\n                            <select onChange={this.handleChange}>\r\n                                {this.props.board.groups.map((group) => {\r\n                                    return group.id === this.props.group.id && <option key={group.id} value={group.id}>{group.title}</option>\r\n                                })}\r\n                                {this.props.board.groups.map((group, idx) => {\r\n                                    return group.id !== this.props.group.id && <option value={idx} key={group.id}>{group.title}</option>\r\n                                })}\r\n                            </select>\r\n                            <button className=\"btn-copy-move\">Copy</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const CopyModal = connect(mapStateToProps, mapDispatchToProps)(_CopyModal)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\OverlayAction.jsx",[],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\LabelTask.jsx",["336","337","338","339","340"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { FiEdit2 } from 'react-icons/fi'\r\nimport { withRouter } from \"react-router\";\r\nimport { update } from '../../../../store/actions/boardsAction';\r\nimport { boardService } from '../../../../services/boardService';\r\n\r\nclass _LabelTask extends Component {\r\n    state = {\r\n        isDisable: true,\r\n        titleLabel: this.props.label.title ? this.props.label.title : '',\r\n        task: null,\r\n        group: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { taskId, groupId } = this.props.match.params;\r\n        const board = this.props.board;\r\n        const group = boardService.getGroupById(board, groupId);\r\n        const task = boardService.getTaskById(group, taskId);\r\n        this.setState({ ...this.state, task: task, group: group });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props !== prevProps) {\r\n            const { boardId, taskId, groupId } = this.props.match.params;\r\n            const board = { ...this.props.board };\r\n            const group = boardService.getGroupById(board, groupId);\r\n            const task = boardService.getTaskById(group, taskId);\r\n            this.setState({ ...this.state, task: task, group: group });\r\n        }\r\n\r\n    }\r\n\r\n    toggleLabel(labelId, nameInput) {\r\n        const { task, group } = this.state;\r\n        const board = { ...this.props.board };\r\n        if (!task.labelIds) {\r\n            task.labelIds = []\r\n        }\r\n        const labelIdx = task.labelIds.findIndex(currLabelId => currLabelId === labelId);\r\n        if (labelIdx > -1) {\r\n            task.labelIds.splice(labelIdx, 1)\r\n        } else task.labelIds.push(labelId)\r\n        this.props.updateTaskLabel(task)\r\n        // const updateBoard = boardService.updateTaskAtBoard(board, group, task);\r\n        // this.props.update(updateBoard)\r\n    }\r\n\r\n    toggleDisable(nameInput) {\r\n        document.querySelector(`.${nameInput}`).disabled = !(document.querySelector(`.${nameInput}`).disabled); \r\n        this.setState({\r\n            isDisable: !this.state.isDisable\r\n        })\r\n    }\r\n\r\n    borderLabel = (task, labelId) => {\r\n        if (task.labelIds) {\r\n            if (task.labelIds.includes(labelId))\r\n                return 'border';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const value = target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            titleLabel: value\r\n        });\r\n        const label = this.props.label;\r\n        label.title = target.value;\r\n        this.updateLabelBoard(label);\r\n    }\r\n\r\n    updateLabelBoard = (label) => {\r\n        const { board } = this.props;\r\n        const idx = board.labels.findIndex(currLabel => currLabel.id === label.id);\r\n        board.labels.splice(idx, 1, label);\r\n        this.props.update(board);\r\n    };\r\n\r\n    render() {\r\n        const task = this.props.task;\r\n        if(!task) return <h1>lodaing...</h1>\r\n        const { label } = this.props;\r\n        let className;\r\n        if (task) {\r\n            className = this.borderLabel(task, label.id);\r\n        }\r\n        const nameInput = `label-${label.id}`;\r\n        return (\r\n            <div className=\"label flex center space-between w-100 pad-s h-20\" data-label={label.id}>\r\n                <div className={`wrap-label ${className} w-90`} onClick={() => this.toggleLabel(label.id, nameInput)}\r\n                >\r\n                    <input\r\n                        type=\"text\"\r\n                        name={nameInput}\r\n                        value={this.state.titleLabel}\r\n                        style={{ background: `${label.color}` }}\r\n                        className={`label-input ${nameInput} ${this.state.isDisable}  cur-pointer`}\r\n                        onChange={this.handleChange}\r\n                        maxLength={13}\r\n                        disabled\r\n                    />\r\n                </div>\r\n                    <span onClick={() => { this.toggleDisable(nameInput) }} className=\"edit-label ps-1\"><FiEdit2 /> </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const LabelTask = connect(mapStateToProps, mapDispatchToProps)(withRouter(_LabelTask))","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\InfoBoardModal.jsx",["341","342"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { Link } from 'react-router-dom';\r\nimport { BsCalendar } from 'react-icons/bs'\r\nimport { BiBarChartAlt2 } from 'react-icons/bi'\r\nimport { RiDashboardLine } from 'react-icons/ri'\r\n\r\n\r\n\r\n\r\n\r\nclass _InfoBoardModal extends Component {\r\n\r\n    render() {\r\n        const { board } = this.props;\r\n        return <div className=\"action-modal info-board-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"info-board-modal p-abs flex column center bg-white c-stand z-1 br-3 h-50\">\r\n                    <span className=\"cur-pointer fam-1 font-m bold flex w-100 content-end\" onClick={() => { this.props.toggleModal() }}><AiOutlineClose /></span>\r\n                    <div className=\"action-content font-m \">\r\n                        <ul className=\"flex column h-100 w-100\">\r\n                            <li\r\n                                onClick={() => { this.props.changeDisplay('board') }}>\r\n                                <RiDashboardLine />Board\r\n                            </li>\r\n                            <li \r\n                                onClick={() => { this.props.changeDisplay('dashboard') }}>\r\n                                <BiBarChartAlt2 />Dashboard\r\n                            </li>\r\n                            <li\r\n                                onClick={() => { this.props.changeDisplay('calendar') }}>\r\n                                 <BsCalendar /> Calender</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const InfoBoardModal = connect(mapStateToProps, mapDispatchToProps)(_InfoBoardModal)",["343","344"],"C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\calendar.jsx",["345","346"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nclass _Calendar extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"calendar w-100 h-100\">\r\n            <h1>Put Calendar with react library</h1>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const Calendar = connect(mapStateToProps, mapDispatchToProps)(_Calendar)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\pages\\Dashboard.jsx",["347","348","349"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { ChartMembersTasks } from '../cmps/dashboard/ChartMembersTasks';\r\nimport { ChartLabelsTasks } from '../cmps/dashboard/ChartLabelsTasks';\r\nimport { ChartGroupsTasks } from '../cmps/dashboard/ChartGroupsTasks';\r\nimport { withRouter } from \"react-router\";\r\nimport { boardService } from '../services/boardService'\r\n\r\n\r\n\r\nclass _Dashboard extends Component {\r\n    state = {\r\n        board: null,\r\n        tasks: null,\r\n        groups: null,\r\n        membersBoard: null,\r\n        labelsBoard: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const board = this.props.board;\r\n        console.log(board);\r\n        const tasks = boardService.getTasks(board.groups);\r\n        const groups = board.groups;\r\n        const membersBoard = board.members;\r\n        const labelsBoard = board.labels;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            board: board,\r\n            groups: groups,\r\n            tasks: tasks,\r\n            membersBoard: membersBoard,\r\n            labelsBoard: labelsBoard\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n    checkDataExist() {\r\n        const { board, groups, tasks, membersBoard, labelsBoard } = this.state;\r\n        return board && groups && tasks && membersBoard && labelsBoard;\r\n    }\r\n\r\n    render() {\r\n        const { board, groups, tasks, membersBoard, labelsBoard } = this.state;\r\n        if (!this.checkDataExist()) return <h1>Loading...</h1>\r\n        return <div className=\"dashboard animate__animated animate__fadeInLeft w-100 h-100 flex  center space-between pb-1\">\r\n            <ul className=\"w-100 flex space-evenly \">\r\n                <li className=\"dashboard flex column center content-center\">\r\n                    <p className=\"font-3 fam-1 c-white mb-1\">Tasks Per Label</p>\r\n                    <ChartLabelsTasks labelsBoard={labelsBoard} tasks={tasks} />\r\n                </li>\r\n                <li className=\"dashboard flex column center content-center w-70 h-100 member-chart\">\r\n                    <p className=\"font-3 fam-1 c-white mb-1\">Tasks Per Worker</p>\r\n                    <ChartMembersTasks membersBoard={membersBoard} tasks={tasks} />\r\n                </li>\r\n                <li className=\"dashboard flex column center content-center\">\r\n                    <p className=\"font-3 fam-1 c-white mb-1\">Tasks Per Lists</p>\r\n                    <ChartGroupsTasks groups={groups} tasks={tasks} />\r\n                </li>\r\n            </ul>\r\n            <div className=\"w-100 flex space-evenly\">\r\n\r\n            </div>\r\n            <div className=\"w-100 flex space-evenly\">\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Dashboard))","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\dashboard\\ChartMembersTasks.jsx",["350"],"import { Component } from 'react';\r\nimport { Bar     } from 'react-chartjs-2';\r\nimport { connect } from 'react-redux';\r\nimport {utilService} from '../../services/generalService/utilService'\r\n\r\n// import { add, loadBoard, update, setBoard, remove } from '../store/actions/boardsAction.js';\r\n\r\n\r\n\r\nclass _ChartMembersTasks extends Component {\r\n    state = {\r\n        tasks: null,\r\n        members: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            ...this.state,\r\n            tasks: this.props.tasks,\r\n            members: this.props.membersBoard\r\n        })\r\n    }\r\n\r\n    mapMembersTask = (members,tasks) => {\r\n\r\n        const mapObj = {};\r\n        members.forEach( member => {\r\n            mapObj[`${member.fullname}`] = 0;\r\n            console.log(mapObj);\r\n            tasks.forEach( task => {\r\n                task.members.forEach( currMember => {\r\n                    if(currMember.fullname === member.fullname){\r\n                        mapObj[`${member.fullname}`]++;\r\n                    }\r\n                })\r\n            })\r\n        });\r\n        return mapObj;\r\n        \r\n    }\r\n    \r\n\r\n    render() {\r\n        const {tasks, members} = this.state;\r\n        if(!tasks || !members) return <h1>Loading...</h1>\r\n        const mapMembersTask = this.mapMembersTask(members,tasks);\r\n        const backgroundColor = [];\r\n        const borderColor = [];\r\n\r\n        utilService.randColor(Object.keys(mapMembersTask).length).forEach( color => {\r\n            backgroundColor.push(color[0]);\r\n            borderColor.push(color[1]);\r\n        });\r\n\r\n        const data = {\r\n            labels: Object.keys(mapMembersTask),\r\n            datasets: [\r\n                {\r\n                    label: '',\r\n                    data: Object.values(mapMembersTask),\r\n                    backgroundColor: backgroundColor,\r\n                    borderColor: borderColor,\r\n                    borderWidth: 0.5,\r\n                },\r\n            ],\r\n        };\r\n\r\n        const options = {\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          };\r\n\r\n          \r\n\r\n        return (\r\n            <div className=\"category-chart\">\r\n                <Bar data={data} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\nexport const ChartMembersTasks = connect(mapStateToProps, mapDispatchToProps)(_ChartMembersTasks)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\dashboard\\ChartLabelsTasks.jsx",["351","352"],"import { Component } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { connect } from 'react-redux';\r\nimport { utilService } from '../../services/generalService/utilService'\r\n\r\n// import { add, loadBoard, update, setBoard, remove } from '../store/actions/boardsAction.js';\r\n\r\n\r\n\r\nclass _ChartLabelsTasks extends Component {\r\n    state = {\r\n        tasks: null,\r\n        labels: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            ...this.state,\r\n            tasks: this.props.tasks,\r\n            labels: this.props.labelsBoard\r\n        })\r\n    }\r\n\r\n    mapLabelsTask = (labels, tasks) => {\r\n\r\n        const mapObj = {};\r\n        if (labels && tasks) {\r\n            labels.forEach(label => {\r\n                mapObj[`${label.title}`] = 0;\r\n                console.log(mapObj);\r\n                tasks.forEach(task => {\r\n                    if (task.labelIds) {\r\n                        task.labelIds.forEach(labelId => {\r\n                            if (labelId === label.id) {\r\n                                mapObj[`${label.title}`]++;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            });\r\n            return mapObj;\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { tasks, labels } = this.state;\r\n        if (!tasks || !labels) return <h1>Loading...</h1>\r\n        const mapLabelsTask = this.mapLabelsTask(labels, tasks);\r\n        const backgroundColorDashboard = [];\r\n        const backgroundColorBorder = [];\r\n\r\n        labels.forEach( label => {\r\n            backgroundColorDashboard.push(label.color);\r\n        })\r\n        const data = {\r\n            labels: Object.keys(mapLabelsTask),\r\n            datasets: [\r\n                {\r\n                    label: 'Task per Member',\r\n                    data: Object.values(mapLabelsTask),\r\n\r\n                    backgroundColor: backgroundColorDashboard,\r\n                    borderColor: [\r\n                        '#95a5a6',\r\n                    ],\r\n                    borderWidth: 0.5,\r\n                },\r\n            ],\r\n        };\r\n        return (\r\n            <div className=\"category-chart\">\r\n                <Pie data={data} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\nexport const ChartLabelsTasks = connect(mapStateToProps, mapDispatchToProps)(_ChartLabelsTasks)","C:\\Users\\harel\\Desktop\\taskman\\Taskman\\frontend\\src\\cmps\\dashboard\\ChartGroupsTasks.jsx",[],{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","severity":1,"message":"358","line":2,"column":34,"nodeType":"359","messageId":"360","endLine":2,"endColumn":51},{"ruleId":"357","severity":1,"message":"361","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":14},{"ruleId":"357","severity":1,"message":"362","line":6,"column":37,"nodeType":"359","messageId":"360","endLine":6,"endColumn":48},{"ruleId":"357","severity":1,"message":"363","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":16},{"ruleId":"357","severity":1,"message":"364","line":25,"column":13,"nodeType":"359","messageId":"360","endLine":25,"endColumn":16},{"ruleId":"365","severity":1,"message":"366","line":30,"column":11,"nodeType":"367","endLine":30,"endColumn":28},{"ruleId":"357","severity":1,"message":"368","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":17},{"ruleId":"357","severity":1,"message":"369","line":7,"column":10,"nodeType":"359","messageId":"360","endLine":7,"endColumn":21},{"ruleId":"357","severity":1,"message":"370","line":7,"column":23,"nodeType":"359","messageId":"360","endLine":7,"endColumn":32},{"ruleId":"357","severity":1,"message":"371","line":7,"column":34,"nodeType":"359","messageId":"360","endLine":7,"endColumn":46},{"ruleId":"357","severity":1,"message":"372","line":8,"column":10,"nodeType":"359","messageId":"360","endLine":8,"endColumn":19},{"ruleId":"365","severity":1,"message":"366","line":41,"column":11,"nodeType":"367","endLine":41,"endColumn":57},{"ruleId":"365","severity":1,"message":"366","line":51,"column":11,"nodeType":"367","endLine":51,"endColumn":64},{"ruleId":"365","severity":1,"message":"366","line":60,"column":11,"nodeType":"367","endLine":60,"endColumn":60},{"ruleId":"365","severity":1,"message":"366","line":68,"column":11,"nodeType":"367","endLine":68,"endColumn":60},{"ruleId":"357","severity":1,"message":"373","line":6,"column":10,"nodeType":"359","messageId":"360","endLine":6,"endColumn":21},{"ruleId":"374","severity":1,"message":"375","line":80,"column":49,"nodeType":"376","messageId":"377","endLine":80,"endColumn":51},{"ruleId":"374","severity":1,"message":"375","line":84,"column":49,"nodeType":"376","messageId":"377","endLine":84,"endColumn":51},{"ruleId":"357","severity":1,"message":"378","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":17},{"ruleId":"357","severity":1,"message":"379","line":8,"column":27,"nodeType":"359","messageId":"360","endLine":8,"endColumn":36},{"ruleId":"357","severity":1,"message":"380","line":4,"column":8,"nodeType":"359","messageId":"360","endLine":4,"endColumn":16},{"ruleId":"357","severity":1,"message":"381","line":3,"column":7,"nodeType":"359","messageId":"360","endLine":3,"endColumn":23},{"ruleId":"357","severity":1,"message":"373","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":21},{"ruleId":"357","severity":1,"message":"382","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":24},{"ruleId":"357","severity":1,"message":"383","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":15},{"ruleId":"374","severity":1,"message":"384","line":103,"column":44,"nodeType":"376","messageId":"385","endLine":103,"endColumn":46},{"ruleId":"386","severity":1,"message":"387","line":121,"column":16,"nodeType":"388","messageId":"389","endLine":121,"endColumn":18},{"ruleId":"386","severity":1,"message":"387","line":126,"column":23,"nodeType":"388","messageId":"389","endLine":126,"endColumn":25},{"ruleId":"357","severity":1,"message":"390","line":43,"column":7,"nodeType":"359","messageId":"360","endLine":43,"endColumn":20},{"ruleId":"357","severity":1,"message":"391","line":81,"column":19,"nodeType":"359","messageId":"360","endLine":81,"endColumn":31},{"ruleId":"357","severity":1,"message":"392","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":23},{"ruleId":"357","severity":1,"message":"393","line":3,"column":25,"nodeType":"359","messageId":"360","endLine":3,"endColumn":50},{"ruleId":"357","severity":1,"message":"373","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":21},{"ruleId":"357","severity":1,"message":"394","line":6,"column":9,"nodeType":"359","messageId":"360","endLine":6,"endColumn":21},{"ruleId":"357","severity":1,"message":"395","line":31,"column":11,"nodeType":"359","messageId":"360","endLine":31,"endColumn":23},{"ruleId":"357","severity":1,"message":"396","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":25},{"ruleId":"386","severity":1,"message":"387","line":103,"column":55,"nodeType":"388","messageId":"389","endLine":103,"endColumn":57},{"ruleId":"357","severity":1,"message":"397","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":29},{"ruleId":"357","severity":1,"message":"398","line":9,"column":10,"nodeType":"359","messageId":"360","endLine":9,"endColumn":20},{"ruleId":"357","severity":1,"message":"399","line":112,"column":24,"nodeType":"359","messageId":"360","endLine":112,"endColumn":32},{"ruleId":"374","severity":1,"message":"400","line":210,"column":52,"nodeType":"401","messageId":"402","endLine":210,"endColumn":58},{"ruleId":"357","severity":1,"message":"403","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":14},{"ruleId":"357","severity":1,"message":"404","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":22},{"ruleId":"405","severity":1,"message":"406","line":175,"column":9,"nodeType":"407","endLine":175,"endColumn":24},{"ruleId":"374","severity":1,"message":"375","line":374,"column":77,"nodeType":"376","messageId":"377","endLine":374,"endColumn":79},{"ruleId":"365","severity":1,"message":"366","line":414,"column":37,"nodeType":"367","endLine":414,"endColumn":86},{"ruleId":"374","severity":1,"message":"375","line":478,"column":78,"nodeType":"376","messageId":"377","endLine":478,"endColumn":80},{"ruleId":"374","severity":1,"message":"400","line":479,"column":52,"nodeType":"401","messageId":"402","endLine":479,"endColumn":58},{"ruleId":"357","severity":1,"message":"403","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":14},{"ruleId":"357","severity":1,"message":"408","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":18},{"ruleId":"357","severity":1,"message":"409","line":25,"column":32,"nodeType":"359","messageId":"360","endLine":25,"endColumn":40},{"ruleId":"357","severity":1,"message":"410","line":42,"column":24,"nodeType":"359","messageId":"360","endLine":42,"endColumn":29},{"ruleId":"357","severity":1,"message":"411","line":42,"column":31,"nodeType":"359","messageId":"360","endLine":42,"endColumn":35},{"ruleId":"365","severity":1,"message":"366","line":71,"column":45,"nodeType":"367","endLine":71,"endColumn":93},{"ruleId":"374","severity":1,"message":"375","line":80,"column":83,"nodeType":"376","messageId":"377","endLine":80,"endColumn":85},{"ruleId":"357","severity":1,"message":"403","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":14},{"ruleId":"357","severity":1,"message":"412","line":2,"column":16,"nodeType":"359","messageId":"360","endLine":2,"endColumn":23},{"ruleId":"357","severity":1,"message":"413","line":8,"column":10,"nodeType":"359","messageId":"360","endLine":8,"endColumn":17},{"ruleId":"357","severity":1,"message":"414","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":16},{"ruleId":"357","severity":1,"message":"415","line":5,"column":18,"nodeType":"359","messageId":"360","endLine":5,"endColumn":21},{"ruleId":"357","severity":1,"message":"416","line":5,"column":23,"nodeType":"359","messageId":"360","endLine":5,"endColumn":32},{"ruleId":"357","severity":1,"message":"417","line":5,"column":42,"nodeType":"359","messageId":"360","endLine":5,"endColumn":50},{"ruleId":"357","severity":1,"message":"373","line":5,"column":9,"nodeType":"359","messageId":"360","endLine":5,"endColumn":20},{"ruleId":"357","severity":1,"message":"418","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":19},{"ruleId":"357","severity":1,"message":"394","line":7,"column":10,"nodeType":"359","messageId":"360","endLine":7,"endColumn":22},{"ruleId":"357","severity":1,"message":"418","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":19},{"ruleId":"357","severity":1,"message":"394","line":7,"column":10,"nodeType":"359","messageId":"360","endLine":7,"endColumn":22},{"ruleId":"357","severity":1,"message":"403","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":14},{"ruleId":"357","severity":1,"message":"412","line":2,"column":16,"nodeType":"359","messageId":"360","endLine":2,"endColumn":23},{"ruleId":"357","severity":1,"message":"419","line":27,"column":21,"nodeType":"359","messageId":"360","endLine":27,"endColumn":28},{"ruleId":"357","severity":1,"message":"420","line":37,"column":23,"nodeType":"359","messageId":"360","endLine":37,"endColumn":28},{"ruleId":"357","severity":1,"message":"421","line":38,"column":15,"nodeType":"359","messageId":"360","endLine":38,"endColumn":20},{"ruleId":"357","severity":1,"message":"403","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":14},{"ruleId":"357","severity":1,"message":"421","line":17,"column":17,"nodeType":"359","messageId":"360","endLine":17,"endColumn":22},{"ruleId":"353","replacedBy":"422"},{"ruleId":"355","replacedBy":"423"},{"ruleId":"357","severity":1,"message":"403","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":14},{"ruleId":"357","severity":1,"message":"412","line":2,"column":16,"nodeType":"359","messageId":"360","endLine":2,"endColumn":23},{"ruleId":"357","severity":1,"message":"403","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":14},{"ruleId":"357","severity":1,"message":"412","line":2,"column":16,"nodeType":"359","messageId":"360","endLine":2,"endColumn":23},{"ruleId":"357","severity":1,"message":"421","line":48,"column":17,"nodeType":"359","messageId":"360","endLine":48,"endColumn":22},{"ruleId":"357","severity":1,"message":"424","line":68,"column":15,"nodeType":"359","messageId":"360","endLine":68,"endColumn":22},{"ruleId":"357","severity":1,"message":"373","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":21},{"ruleId":"357","severity":1,"message":"425","line":51,"column":15,"nodeType":"359","messageId":"360","endLine":51,"endColumn":36},"no-native-reassign",["426"],"no-negated-in-lhs",["427"],"no-unused-vars","'localLoggedinUser' is assigned a value but never used.","Identifier","unusedVar","'Chat' is defined but never used.","'IoAppsSharp' is defined but never used.","'Upload' is defined but never used.","'_id' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","'utilService' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'loading' is defined but never used.","'Draggable' is defined but never used.","'LoginPic' is defined but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.","'BsBookmarkDash' is defined but never used.","'Board' is defined but never used.","Array.prototype.findIndex() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'socketIsReady' is assigned a value but never used.","'updatedBoard' is assigned a value but never used.","'socketService' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'boardService' is defined but never used.","'previewStyle' is assigned a value but never used.","'DragDropContext' is defined but never used.","'MdKeyboardArrowDown' is defined but never used.","'BsCalendar' is defined but never used.","'onUpdate' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Link' is defined but never used.","'onClickOutside' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Provider' is defined but never used.","'duration' is assigned a value but never used.","'index' is assigned a value but never used.","'task' is assigned a value but never used.","'NavLink' is defined but never used.","'BsImage' is defined but never used.","'remove' is defined but never used.","'add' is defined but never used.","'loadBoard' is defined but never used.","'setBoard' is defined but never used.","'LabelTask' is defined but never used.","'boardId' is assigned a value but never used.","'group' is assigned a value but never used.","'board' is assigned a value but never used.",["426"],["427"],"'options' is assigned a value but never used.","'backgroundColorBorder' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]