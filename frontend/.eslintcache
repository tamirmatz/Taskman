[{"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\index.js":"1","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\store.js":"4","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\App.jsx":"5","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js":"6","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js":"7","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js":"8","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js":"9","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\routes.js":"10","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx":"11","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\UserDetails.jsx":"12","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Board.jsx":"13","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Home.jsx":"14","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\BoardList.jsx":"15","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Chat.jsx":"16","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskDetails.jsx":"17","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\boardService.js":"18","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js":"19","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx":"20","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js":"21","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\userActions.js":"22","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\utilService.js":"23","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\socketService.js":"24","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx":"25","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\userService.js":"26","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js":"27","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\httpService.js":"28","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\Upload.jsx":"29","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx":"30","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx":"31","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardNavbar.jsx":"32","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckList.jsx":"33","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\reviewService.js":"34","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx":"35","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\data\\board.js":"36","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js":"37","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx":"38","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx":"39","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckListStatus.jsx":"40","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\ActionList.jsx":"41","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\LabelModal.jsx":"42","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MembersModal.jsx":"43","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\ModalAction.jsx":"44","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\OverlayAction.jsx":"45","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\systemAction.js":"46","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\LabelTask.jsx":"47","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Login.jsx":"48","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardMembersModal.jsx":"49","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\DueDateModal.jsx":"50","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MoveModal.jsx":"51","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\CopyModal.jsx":"52","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\GroupModal.jsx":"53","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\calendar.jsx":"54","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Dashboard.jsx":"55","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\InfoBoardModal.jsx":"56","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\dashboard\\ChartLabelsTasks.jsx":"57","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\dashboard\\ChartGroupsTasks.jsx":"58","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\dashboard\\ChartMembersTasks.jsx":"59"},{"size":935,"mtime":1622098926959,"results":"60","hashOfConfig":"61"},{"size":377,"mtime":1622098926965,"results":"62","hashOfConfig":"61"},{"size":5201,"mtime":1622098926966,"results":"63","hashOfConfig":"61"},{"size":752,"mtime":1622112896615,"results":"64","hashOfConfig":"61"},{"size":535,"mtime":1622209089530,"results":"65","hashOfConfig":"61"},{"size":900,"mtime":1623087152241,"results":"66","hashOfConfig":"61"},{"size":688,"mtime":1622215143805,"results":"67","hashOfConfig":"61"},{"size":426,"mtime":1622658771162,"results":"68","hashOfConfig":"61"},{"size":669,"mtime":1622098926981,"results":"69","hashOfConfig":"61"},{"size":634,"mtime":1622628379726,"results":"70","hashOfConfig":"61"},{"size":6625,"mtime":1623090502110,"results":"71","hashOfConfig":"61"},{"size":1405,"mtime":1622627111688,"results":"72","hashOfConfig":"61"},{"size":9525,"mtime":1623087152232,"results":"73","hashOfConfig":"61"},{"size":3044,"mtime":1623089623947,"results":"74","hashOfConfig":"61"},{"size":5596,"mtime":1622997609098,"results":"75","hashOfConfig":"61"},{"size":3395,"mtime":1622115436998,"results":"76","hashOfConfig":"61"},{"size":22732,"mtime":1623091760438,"results":"77","hashOfConfig":"61"},{"size":3439,"mtime":1622997591352,"results":"78","hashOfConfig":"61"},{"size":1321,"mtime":1622115440359,"results":"79","hashOfConfig":"61"},{"size":201,"mtime":1622969050230,"results":"80","hashOfConfig":"61"},{"size":2965,"mtime":1623087152238,"results":"81","hashOfConfig":"61"},{"size":1966,"mtime":1622631383176,"results":"82","hashOfConfig":"61"},{"size":4558,"mtime":1623087152236,"results":"83","hashOfConfig":"61"},{"size":2414,"mtime":1622479249276,"results":"84","hashOfConfig":"61"},{"size":533,"mtime":1622636238075,"results":"85","hashOfConfig":"61"},{"size":2097,"mtime":1622479249277,"results":"86","hashOfConfig":"61"},{"size":2370,"mtime":1622997591355,"results":"87","hashOfConfig":"61"},{"size":1136,"mtime":1622115365941,"results":"88","hashOfConfig":"61"},{"size":1709,"mtime":1622811036686,"results":"89","hashOfConfig":"61"},{"size":6803,"mtime":1623142749324,"results":"90","hashOfConfig":"61"},{"size":541,"mtime":1622829857073,"results":"91","hashOfConfig":"61"},{"size":13590,"mtime":1622997591332,"results":"92","hashOfConfig":"61"},{"size":5876,"mtime":1622969050220,"results":"93","hashOfConfig":"61"},{"size":1087,"mtime":1622115441879,"results":"94","hashOfConfig":"61"},{"size":325,"mtime":1623013823444,"results":"95","hashOfConfig":"61"},{"size":305529,"mtime":1622471688098,"results":"96","hashOfConfig":"61"},{"size":658,"mtime":1622730288568,"results":"97","hashOfConfig":"61"},{"size":7781,"mtime":1623143591930,"results":"98","hashOfConfig":"61"},{"size":847,"mtime":1622822164782,"results":"99","hashOfConfig":"61"},{"size":662,"mtime":1622730288556,"results":"100","hashOfConfig":"61"},{"size":4646,"mtime":1623087152221,"results":"101","hashOfConfig":"61"},{"size":1719,"mtime":1622811069496,"results":"102","hashOfConfig":"61"},{"size":2305,"mtime":1622724409468,"results":"103","hashOfConfig":"61"},{"size":220,"mtime":1622559991731,"results":"104","hashOfConfig":"61"},{"size":129,"mtime":1622707504524,"results":"105","hashOfConfig":"61"},{"size":756,"mtime":1622658771160,"results":"106","hashOfConfig":"61"},{"size":4447,"mtime":1623087152223,"results":"107","hashOfConfig":"61"},{"size":5647,"mtime":1622962676327,"results":"108","hashOfConfig":"61"},{"size":2253,"mtime":1622962676317,"results":"109","hashOfConfig":"61"},{"size":1668,"mtime":1622710501026,"results":"110","hashOfConfig":"61"},{"size":3169,"mtime":1622794813965,"results":"111","hashOfConfig":"61"},{"size":2973,"mtime":1622707504516,"results":"112","hashOfConfig":"61"},{"size":3464,"mtime":1623144586811,"results":"113","hashOfConfig":"61"},{"size":705,"mtime":1622962676329,"results":"114","hashOfConfig":"61"},{"size":2984,"mtime":1623087152234,"results":"115","hashOfConfig":"61"},{"size":2045,"mtime":1623087152219,"results":"116","hashOfConfig":"61"},{"size":2477,"mtime":1623087152228,"results":"117","hashOfConfig":"61"},{"size":2077,"mtime":1623087152226,"results":"118","hashOfConfig":"61"},{"size":2617,"mtime":1623087152230,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1prlnqd",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"122"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"122"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"122"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"122"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"122"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"122"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"122"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"122"},"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\index.js",[],["263","264"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\store.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\App.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\userReducer.js",["265"],"let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\nconst defUser = {\r\n  \"_id\": \"u101\",\r\n  \"fullname\": \"Abi Abambi\",\r\n  \"username\": \"abi@ababmi.com\",\r\n  \"password\": \"aBambi123\",\r\n  \"imgUrl\": \"http://some-img.jpg\",\r\n  \"mentions\": [{\r\n    \"id\": \"m101\",\r\n    \"boardId\": \"m101\",\r\n    \"taskId\": \"t101\"\r\n  }]\r\n}\r\nconst initialState = {\r\n  loggedInUser: defUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\routes.js",["266"],"import { Home } from './pages/Home'\r\nimport { Chat } from './pages/Chat'\r\nimport { UserDetails } from './pages/UserDetails'\r\nimport { BoardList } from './pages/BoardList'\r\nimport { Board } from './pages/Board'\r\nimport { Login } from './pages/Login'\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/user/:userId',\r\n        component: UserDetails,\r\n    },\r\n    {\r\n        path: '/board/:boardId',\r\n        component: Board,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: BoardList\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n]\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\AppHeader.jsx",["267"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\UserDetails.jsx",["268","269","270"],"import React, { Component } from 'react'\r\nimport { Upload } from '../cmps/Upload'\r\nimport ProfileImg from '../assets/img/profilePic.jpg'\r\nimport { userService } from '../services/userService.js'\r\n\r\nexport class UserDetails extends Component {\r\n  state = {\r\n    user: null\r\n  }\r\n  async componentDidMount() {\r\n    const user = await userService.getById(this.props.match.params.userId)\r\n    // const user = {\r\n    //   _id: 'a123',\r\n    //   username: 'NadavMgr',\r\n    //   fullame: 'Nadav Magier',\r\n    //   email: 'nadav1410@gmail.com',\r\n    //   imgUrl: 'https://res.cloudinary.com/dorshaul/image/upload/v1617004425/ytav_twnglu.jpg',\r\n    //   createdAt: '2021-03-29T07:54:21.000Z'\r\n    // }\r\n    this.setState({ user })\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.user) return <div>loading..</div>\r\n    const { _id, username, fullname, email, imgUrl } = this.state.user\r\n    const url = (imgUrl) ? imgUrl : ProfileImg\r\n    return (\r\n      <section className=\"user-details-container\">\r\n        <div className=\"user-details flex\">\r\n          <img src={url} />\r\n          <div className=\"txt-user-details flex column fam-1\">\r\n            <span className=\"user-fullname\">{fullname}</span>\r\n            <span className=\"user-username\">@{username}</span>\r\n            <span className=\"user-email\">{email}</span>\r\n          </div>\r\n        </div>\r\n        {/* <Upload /> */}\r\n\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Board.jsx",["271","272"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Home.jsx",["273","274","275","276","277","278","279","280","281"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\BoardList.jsx",["282","283","284"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { remove, add, query } from '../store/actions/boardsAction.js';\r\nimport { MiniBoard } from '../cmps/board/MiniBoard'\r\nimport { utilService } from '../services/generalService/utilService.js'\r\nclass _BoardList extends Component {\r\n    state = {\r\n        newBoard: {\r\n            title: '',\r\n            backgroundId: 0,\r\n            backgrounds: ['',\r\n            'https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2286x1600/24baa6609b89fb8eb0cc0aceb70eaf36/photo-1557682250-33bd709cbe85.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671389/backrounds/0_jflqwf.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671416/backrounds/1_gavwov.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991464/backrounds/images_nnscac.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991434/backrounds/ded84385480090c3464352f152dbc0c8_bzdu9x.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991432/backrounds/508751_bftz6u.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991426/backrounds/wp4676582_rhnghy.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991421/backrounds/Eb3zqm9WsAIalyT_sdypqq.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991411/backrounds/wallpapersden.com_cool-4k-pattern_3840x2160_ag3xac.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991393/backrounds/wp5633980_gb2sub.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991348/backrounds/65c7d4a8f34de11f9414ce49b847e56a_bvwpgt.gif',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991338/backrounds/Vaporwave-4K-Wallpapers_mmacwb.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991315/backrounds/thor-stormbreaker-minimalist-wallpaper_goxnts.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671401/backrounds/2_gstip0.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671404/backrounds/4_ly2zj7.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671430/backrounds/6_mi6wun.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671421/backrounds/7_oivv0t.jpg',\r\n        ]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.query()\r\n    }\r\n    onCreateBoard = async () => {\r\n        const { title, backgrounds, backgroundId } = this.state.newBoard\r\n        this.props.add(title, backgrounds[backgroundId])\r\n        this.props.query()\r\n    }\r\n    changeImg = (num) => {\r\n        const { backgroundId, backgrounds } = this.state.newBoard\r\n        if (backgroundId + num === backgrounds.length || backgroundId + num === -1) num = 0\r\n        this.setState(prevState => ({\r\n            newBoard: {\r\n                ...prevState.newBoard,\r\n                backgroundId: backgroundId + num,\r\n            }\r\n        }))\r\n    }\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({\r\n            newBoard: {\r\n                ...prevState.newBoard,\r\n                [field]: value,\r\n            }\r\n        }))\r\n    }\r\n    render() {\r\n        const { boards } = this.props\r\n        return (\r\n            <section className=\" w-100 flex column center content-center pad-3\">\r\n                <h1 className=\"fam-1 fs30 mb-2\">Choose Your Board...</h1>\r\n                <div className=\"boards-gallery flex h-40 w-100 gap-2 wrap\">\r\n                    <section className={\"miniBoard flex center content-center\"} style={{ backgroundImage: \"url(\" + this.state.newBoard.backgrounds[this.state.newBoard.backgroundId] + \")\" }}>\r\n                        <form className=\"add-board\" onSubmit={(ev) => {\r\n                            ev.preventDefault()\r\n                            this.onCreateBoard()\r\n                        }}>\r\n                            <input type=\"text\" name=\"title\" onChange={this.handleChange} placeholder=\"Board title...\" />\r\n                            <div className=\"change-img-container flex space-between control-img\">\r\n                                <span className=\"change-img\" onClick={() => { this.changeImg(-1) }}>{'<'}</span>\r\n                                <button>Create board</button>\r\n                                <span className=\"change-img\" onClick={() => { this.changeImg(1) }}>{'>'}</span>\r\n                            </div>\r\n                        </form>\r\n                    </section>\r\n                    {boards && boards.map(board => {\r\n                        if (board.isFavorite)\r\n                        return <Link key={board._id} to={`board/${board._id}`}><MiniBoard board={board} /></Link>\r\n                    })}\r\n                    {boards && boards.map(board => {\r\n                        if (!board.isFavorite)\r\n                        return <Link key={board._id} to={`board/${board._id}`}><MiniBoard board={board} /></Link>\r\n                    })}\r\n                    {!boards && <h1 >No boards to show</h1>}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardModule.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    remove,\r\n    add,\r\n    query\r\n}\r\nexport const BoardList = connect(mapStateToProps, mapDispatchToProps)(_BoardList)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Chat.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\TaskDetails.jsx",["285","286","287","288","289","290","291"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\boardService.js",["292","293"],"import { utilService } from './generalService/utilService.js'\r\nimport { storageService } from './generalService/asyncStorageService.js'\r\nimport {httpService} from '../services/generalService/httpService.js'\r\n\r\nwindow.storageService = storageService;\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    update,\r\n    add,\r\n    getGroupById,\r\n    getTaskById,\r\n    getGroupIdxById,\r\n    checklistPreview,\r\n    getTaskIdxById,\r\n    checklistPrecent,\r\n    updateTaskAtBoard\r\n}\r\n\r\n\r\nfunction query() {\r\n    // return storageService.query(STORAGE_KEY)\r\n    return httpService.get('board')\r\n}\r\n\r\nfunction getById(boardId) {\r\n    // const board = storageService.get(STORAGE_KEY, boardId);\r\n    // return board\r\n    return httpService.get(`board/${boardId}`)\r\n\r\n}\r\n\r\nfunction remove(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function add(title, background) {\r\n    console.log(title,background)\r\n    // const newBoard = _createBoard()\r\n    // const savedBoard = storageService.post(STORAGE_KEY, newBoard)\r\n    // return savedBoard\r\n    const board = {title ,style:{background}}\r\n    console.log(board)\r\n    const res = await httpService.post(`board`, board)\r\n    return res\r\n}\r\n\r\nasync function update(board) {\r\n    // return storageService.put(STORAGE_KEY, board)\r\n    board.activities = []\r\n    \r\n    const res = await httpService.put(`board/${board._id}`, board)\r\n    return res\r\n\r\n}\r\n\r\n//task crud\r\nfunction getGroupById(board, groupId) {\r\n    return board.groups.find(group => group.id === groupId);\r\n}\r\n\r\nfunction getGroupIdxById(board, groupId) {\r\n    return board.groups.findIndex(group => group.id === groupId);\r\n}\r\n\r\nfunction getTaskIdxById(group, taskId) {\r\n    return group.tasks.findIndex(task => task.id === taskId);\r\n}\r\n\r\nfunction getTaskById(group, taskId) {\r\n    return group.tasks.find(task => task.id === taskId)\r\n}\r\n\r\nfunction checklistPreview(task) {\r\n    const checklists = task.checklists\r\n    let isDone = false\r\n    let allTodos = 0;\r\n    let doneTodos = 0;\r\n    checklists.forEach(checkList => {\r\n        allTodos += checkList.todos.length;\r\n        checkList.todos.forEach(todo => {\r\n            if (todo.isDone) doneTodos++\r\n        })\r\n    });\r\n    if (doneTodos === allTodos && allTodos) isDone = true;\r\n    const str = `${doneTodos}/${allTodos}`\r\n    const res = { str, isDone}\r\n    return res\r\n}\r\n\r\nfunction checklistPrecent(checklist){\r\n    let doneTodos = 0;\r\n    checklist.todos.forEach(todo => {\r\n        if(todo.isDone) doneTodos++\r\n    })\r\n    const precent = (doneTodos / checklist.todos.length) * 100 \r\n    \r\n    return precent\r\n}\r\n\r\nfunction _updateTaskAtGroup(group, updateTask){\r\n    const idx = group.tasks.findIndex( task => {\r\n        task.id = updateTask.id;\r\n    })\r\n    group.tasks.splice(idx, 1, updateTask);\r\n    return group;\r\n}\r\n\r\nfunction _updateGroupAtBoard( board ,updateGroup){\r\n    const idx = getGroupIdxById(board, updateGroup.id)\r\n    board.groups[idx] = updateGroup;\r\n    return board;\r\n}\r\n\r\nfunction updateTaskAtBoard(board,group, updateTask){\r\n    const updateGroup =  _updateTaskAtGroup(group, updateTask);\r\n    const updateBoard = _updateGroupAtBoard(board, updateGroup);\r\n    return updateBoard;\r\n}","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\reviewActions.js",["294","295"],"import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../../services/generalService/socketService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n      // socketService.on(SOCKET_EVENT_REVIEW_ADDED, review =>{\r\n      //   dispatch({ type: 'ADD_REVIEW', review })\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\ModalWrapper.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\boardsAction.js",["296"],"import { boardService } from '../../services/boardService'\r\nimport { socketService } from '../../services/generalService/socketService'\r\nimport { utilService } from '../../services/generalService/utilService'\r\n\r\nexport function query() { // Action Creator\r\n    return async dispatch => {\r\n        const boards = await boardService.query()\r\n        const action = {\r\n            type: 'SET_BOARDS',\r\n            boards\r\n        }\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport function loadBoard(boardId) { // Action Creator\r\n    return async dispatch => {\r\n        const board = await boardService.getById(boardId)\r\n        const action = {\r\n            type: 'SET_BOARD',\r\n            board\r\n        }\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport function setBoard(board) { \r\n    return async dispatch => {\r\n        const action = {\r\n            type: 'SET_BOARD',\r\n            board\r\n        }\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function remove(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.remove(boardId)\r\n            const action = {\r\n                type: 'REMOVE_BOARD',\r\n                boardId\r\n            }\r\n            dispatch(action)\r\n        } catch (err) {\r\n            console.log('BoardActions: err in removeBoard', err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function update(board,activity) {\r\n    // Action Creator\r\n    return async dispatch => {\r\n        try {      \r\n            const copyBoard = utilService.deepClone(board)\r\n            copyBoard.activities.unshift(activity)\r\n            const action = {\r\n                type: 'UPDATE_BOARD',\r\n                updatedBoard: copyBoard\r\n            }\r\n            dispatch(action)\r\n\r\n            delete board.activities\r\n            socketService.emit('update board',copyBoard)\r\n            const updatedBoard = await boardService.update(board,activity)\r\n        } catch (err){\r\n            console.log('BoardActions: err in update board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function add(title, background) {\r\n    // Action Creator\r\n    return async dispatch => {\r\n        try {\r\n            const newBoard = await boardService.add(title,background)          \r\n            const action = {\r\n                type: 'ADD_BOARD',\r\n                board: newBoard\r\n            }\r\n            dispatch(action)\r\n        } catch (err){\r\n            console.log('BoardActions: err in addBoard', err)\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\utilService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\socketService.js",["297"],"import io from 'socket.io-client'\r\nimport {httpService} from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\nfunction cb(x) {console.log(x)}\r\nsocketService.on('baba', cb)\r\nsocketService.on('mama', cb)\r\nsocketService.on('lala', cb)\r\nsocketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\UserPreview.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\userService.js",["298"],"// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './generalService/httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\asyncStorageService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\httpService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\Upload.jsx",["299","300"],"import { Component } from 'react'\r\nimport { cloudinaryService } from '../services/generalService/cloudinaryService'\r\nimport { BsImage } from 'react-icons/bs'\r\nimport { remove, add, loadBoard, update } from '../store/actions/boardsAction.js'\r\nimport { connect } from 'react-redux'\r\nimport {boardService} from '../services/boardService.js'\r\n\r\n\r\nclass _Upload extends Component {\r\n  state = {\r\n    imgUrl: null,\r\n    minHeight: 300,\r\n    maxHeight: 200,\r\n    height: 'auto',\r\n    width: 200,\r\n    isUploading: false\r\n  }\r\n\r\n  uploadImg = async (ev) => {\r\n    this.setState({ isUploading: true })\r\n    const { secure_url, height, width } = await cloudinaryService.uploadImg(ev)\r\n    this.setState({ isUploading: false, imgUrl: secure_url, height, width },()=> {this.props.addImgToTask(this.state.imgUrl)})\r\n  }\r\n  get uploadMsg() {\r\n    const { imgUrl, isUploading } = this.state\r\n    if (imgUrl) return 'Upload Another?'\r\n    return isUploading ? 'Uploading....' : 'Upload Image'\r\n  }\r\n  render() {\r\n    const { imgUrl, width, height } = this.state\r\n    const previewStyle = {\r\n      backgroundImage: `url(${imgUrl})`,\r\n      width,\r\n      height\r\n    }\r\n    return (\r\n      <div>\r\n        <label className=\"btn-action\" htmlFor=\"imgUpload\"><BsImage className=\"action-icon\" />Image</label>\r\n        <input hidden type=\"file\" onChange={ this.uploadImg } accept=\"img/*\" id=\"imgUpload\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loggedInUser: state.userModule.loggedInUser,\r\n      board: state.boardModule.board\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  remove,\r\n  add,\r\n  loadBoard,\r\n  update\r\n}\r\nexport const Upload = connect(mapStateToProps, mapDispatchToProps)(_Upload)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskList.jsx",["301","302"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\MiniBoard.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardNavbar.jsx",["303","304"],"import { MembersBoard } from '../MembersBoard';\r\nimport { add, loadBoard, update, setBoard, remove } from '../../../store/actions/boardsAction.js';\r\nimport { MdKeyboardArrowDown } from 'react-icons/md'\r\nimport { RiDashboardLine } from 'react-icons/ri'\r\nimport { AiOutlineStar, AiFillStar } from 'react-icons/ai'\r\nimport { Component } from 'react';\r\nimport { BoardMembersModal } from './BoardMembersModal'\r\nimport { InfoBoardModal } from './InfoBoardModal'\r\nimport { BsCalendar } from 'react-icons/bs'\r\nimport { BiBarChartAlt2 } from 'react-icons/bi'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../../services/generalService/utilService.js';\r\nimport { UserPreview } from '../UserPreview.jsx';\r\n\r\n\r\n\r\nclass _BoardNavbar extends Component {\r\n    state = {\r\n        displayBoard: this.props.displayBoard,\r\n        title: this.props.board.title,\r\n        members: this.props.board.members,\r\n        backgrounds: ['',\r\n            'https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2286x1600/24baa6609b89fb8eb0cc0aceb70eaf36/photo-1557682250-33bd709cbe85.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671389/backrounds/0_jflqwf.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671416/backrounds/1_gavwov.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991464/backrounds/images_nnscac.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991434/backrounds/ded84385480090c3464352f152dbc0c8_bzdu9x.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991432/backrounds/508751_bftz6u.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991426/backrounds/wp4676582_rhnghy.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991421/backrounds/Eb3zqm9WsAIalyT_sdypqq.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991411/backrounds/wallpapersden.com_cool-4k-pattern_3840x2160_ag3xac.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991393/backrounds/wp5633980_gb2sub.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991348/backrounds/65c7d4a8f34de11f9414ce49b847e56a_bvwpgt.gif',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991338/backrounds/Vaporwave-4K-Wallpapers_mmacwb.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622991315/backrounds/thor-stormbreaker-minimalist-wallpaper_goxnts.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671401/backrounds/2_gstip0.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671404/backrounds/4_ly2zj7.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671430/backrounds/6_mi6wun.jpg',\r\n            'https://res.cloudinary.com/dxsv4c229/image/upload/v1622671421/backrounds/7_oivv0t.jpg',\r\n        ],\r\n        isActivities:true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            ...this.state,\r\n            displayBoard: this.props.displayBoard,\r\n            title: this.props.board.title,\r\n            members: this.props.board.members\r\n        })\r\n    }\r\n\r\n\r\n    onAddMemberToBoard = (addedMember) => {\r\n        const { members } = this.state\r\n        const memberIdx = members.findIndex(member => member._id === addedMember._id)\r\n        if (memberIdx !== -1) {\r\n            members.splice(memberIdx, 1)\r\n        }\r\n        else members.push(addedMember)\r\n        const copyBoard = { ...this.props.board }\r\n        copyBoard.members = members\r\n        console.log(members)\r\n        this.props.updateBoard(copyBoard)\r\n    }\r\n\r\n    isMemberChecked = (memberCheck) => {\r\n        const memberIdx = this.state.members.findIndex(member => member._id === memberCheck._id)\r\n        if (memberIdx !== -1) {\r\n            return 'checked'\r\n        }\r\n        else return ''\r\n    }\r\n\r\n    toggleActivities=()=>{\r\n        this.setState({isActivities:!this.state.isActivities})\r\n    }\r\n\r\n    toggleModal = (className) => {\r\n        const modals = document.querySelectorAll('.action-modal');\r\n        const currModal = document.querySelector(`.${className}`);\r\n        if (modals) {\r\n            modals.forEach(\r\n                el => el.classList.add('d-none'));\r\n        }\r\n        if (currModal) {\r\n            currModal.classList.remove('d-none');\r\n        }\r\n    }\r\n    onChangeBoardName = () => {\r\n        const board = this.props.board\r\n        board.title = this.state.title\r\n        this.props.updateBoard(board)\r\n    }\r\n\r\n    onChangeBg = (url) => {\r\n        const board = this.props.board\r\n        board.style = url\r\n        document.body.style.background = board.style ? `url(${board.style})` : 'rgb(0, 121, 191)'\r\n        document.body.style.backgroundRepeat = \"no-repeat\";\r\n        document.body.style.backgroundSize = \"cover\";\r\n        this.props.updateBoard(board)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    render() {\r\n        const { board, onUpdate } = this.props;\r\n        const displayBoard = this.props.displayBoard\r\n        if (!board) return <div>Loading...</div>\r\n        return (\r\n            <nav className=\"board-navbar flex space-between font-m c-white fam-1 \">\r\n                <ul className=\"left-bar flex center space-evenly \">\r\n                    <ul className=\"display-option\">\r\n                        {displayBoard === 'board' &&\r\n                            <div className=\"board-option\">\r\n                                <li className=\"btn-board btn-board-navbar bg-board-btn flex center space-evenly cur-poiner\" onClick={() => { this.toggleModal('info-board-wrap-modal') }}>\r\n                                    <span className=\"ps-xxs flex center\"><RiDashboardLine /></span>\r\n                                Board\r\n                                <span className=\"font-2 flex right\">\r\n                                        <MdKeyboardArrowDown />\r\n                                    </span>\r\n                                </li>\r\n                                <InfoBoardModal\r\n                                    toggleModal={() => { this.toggleModal() }}\r\n                                    changeDisplay={this.props.changeDisplay}\r\n                                />\r\n                            </div>\r\n                        }\r\n\r\n                        {displayBoard === 'dashboard' &&\r\n                            <div className=\"board-option\">\r\n                                <li className=\"btn-board btn-board-navbar bg-board-btn flex center space-evenly cur-poiner\" onClick={() => { this.toggleModal('info-board-wrap-modal') }}>\r\n                                    <span className=\"ps-xxs flex center\"><BiBarChartAlt2 /></span>\r\n                                Dashboard\r\n                                <span className=\"font-2 flex right\">\r\n                                        <MdKeyboardArrowDown />\r\n                                    </span>\r\n                                    <InfoBoardModal\r\n                                        toggleModal={() => { this.toggleModal() }}\r\n                                        changeDisplay={this.props.changeDisplay}\r\n                                    />\r\n                                </li>\r\n                            </div>\r\n                        }\r\n\r\n                        {displayBoard === 'calendar' &&\r\n                            <div className=\"board-option\">\r\n                                <li className=\"btn-board btn-board-navbar bg-board-btn flex center space-evenly cur-poiner\" onClick={() => { this.toggleModal('info-board-wrap-modal') }}>\r\n                                    <span className=\"ps-xxs flex center\"><BsCalendar /></span>\r\n                                    Calendar\r\n                                    <span className=\"font-2 flex right\">\r\n                                        <MdKeyboardArrowDown />\r\n                                    </span>\r\n                                </li>\r\n                                <InfoBoardModal\r\n                                    toggleModal={() => { this.toggleModal() }}\r\n                                    changeDisplay={this.props.changeDisplay}\r\n                                />\r\n                            </div>\r\n                        }\r\n\r\n                    </ul>\r\n\r\n                    <li className=\"btn-board bold ps-xxs\">\r\n                        <div onClick={(ev) => {\r\n                            ev.preventDefault()\r\n                            this.onChangeBoardName(ev)\r\n                        }}>\r\n                            <input type=\"text\"\r\n                                className=\"app-input bold font-m lh-20 c-white title-nav-input \"\r\n                                name=\"title\"\r\n                                onChange={this.handleChange}\r\n                                autoComplete=\"off\"\r\n                                value={this.state.title}\r\n                                onBlur={this.onChangeBoardName}\r\n                                minLength={2}\r\n                                maxLength={13}\r\n                            />\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"btn-board btn-board-navbar bg-board-btn\" onClick={this.props.favBoard}>\r\n                        {!board.isFavorite && <AiOutlineStar />}\r\n                        {board.isFavorite && <AiFillStar />}\r\n                    </li>\r\n                    <span className=\"board-btn-divider\"></span>\r\n                    <li className=\"btn-board btn-board-navbar bg-board-btn\">Visiblity</li>\r\n                    <span className=\"board-btn-divider\"></span>\r\n                    <li className=\"btn-board bg-inherit\" ><MembersBoard /></li>\r\n                    <ul className=\"members-wrap \">\r\n                        <li\r\n                            className=\"btn-board btn-board-navbar bg-board-btn\"\r\n                            onClick={() => { this.toggleModal('board-members-wrap-modal') }}>\r\n                            Invite\r\n                        </li>\r\n                        <BoardMembersModal\r\n                            users={this.props.users}\r\n                            isMemberChecked={this.isMemberChecked}\r\n                            onAddMemberToBoard={this.onAddMemberToBoard}\r\n                            toggleModal={() => { this.toggleModal() }}\r\n                        />\r\n                    </ul>\r\n                </ul>\r\n                <ul className=\"right-bar flex center\">\r\n                    <li className=\"btn-board btn-board-navbar bg-board-btn\" onClick={() => this.props.removeBoard()}>Delete Board</li>\r\n                    <li onClick={() => { this.props.onToggleActivities() }} className=\"btn-board btn-board-navbar bg-board-btn \">...\r\n                    </li>\r\n                    <div className=\"board-menu flex column\">\r\n                        <div className=\"flex mb-06 space-between\">\r\n                            <h1 className=\"center-self\">Menu</h1>\r\n                            <button className=\"menu-btn\" onClick={this.toggleActivities}>{this.state.isActivities ? 'Backgrounds':'Activities'}</button>\r\n                        </div>\r\n\r\n                        <ul>\r\n                            {\r\n                               this.state.isActivities&& board.activities && board.activities.map(activity => {\r\n                                    if (!activity) return\r\n                                    return <li key={activity.id} className=\"full-activty flex column\">\r\n                                        <div className=\"flex space-between\">\r\n                                            <div className=\"content-gap flex center\">\r\n                                                <UserPreview user={activity.byMember} />\r\n                                                <div className=\"commenter-name\">{activity.byMember.fullname}</div>\r\n                                                <small>{utilService.timeAgo(activity.createdAt)}</small>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"comment-gap\">\r\n                                            <p className=\"comment-txt \">{activity.txt}</p>\r\n                                        </div>\r\n                                    </li>\r\n\r\n                                })\r\n\r\n                            }\r\n                        </ul>\r\n                        <ul className=\"flex column align-center gap-1\">\r\n                            {\r\n                              !this.state.isActivities&&  this.state.backgrounds.map((background) => {\r\n                                    return <li onClick={() => { this.onChangeBg(background) }} className={\"miniBoard cur-pointer flex center content-center\"} style={{ backgroundImage: \"url(\" + background + \")\" }}>\r\n\r\n                                    </li>\r\n                                })\r\n                            }</ul>\r\n                    </div>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        loggedInUser: state.userModule.loggedInUser,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    remove,\r\n    add,\r\n    loadBoard,\r\n    update,\r\n    setBoard\r\n}\r\n\r\nexport const BoardNavbar = connect(mapStateToProps, mapDispatchToProps)(_BoardNavbar)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckList.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\reviewService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\Overlay.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\data\\board.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\services\\generalService\\cloudinaryService.js",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\TaskPreview.jsx",["305","306","307","308","309","310"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\MembersBoard.jsx",["311"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { UserPreview } from './UserPreview';\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nclass _MembersBoard extends Component {\r\n    render() {\r\n        const members = this.props.board.members;\r\n        return (\r\n            <section className=\"members-board flex space-between\">\r\n                {members.map(member =>\r\n                    <NavLink key={member._id} to={`/user/${member._id}`}>\r\n                        <UserPreview user={member} />\r\n                    </NavLink>)}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\nexport const MembersBoard = connect(mapStateToProps, mapDispatchToProps)(_MembersBoard)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\CheckListStatus.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\ActionList.jsx",["312","313"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { MdLabelOutline } from 'react-icons/md'\r\nimport { AiOutlineClockCircle, AiOutlineCheckSquare, AiOutlineDelete } from 'react-icons/ai'\r\nimport { BiCopy } from 'react-icons/bi'\r\nimport { FiUsers } from 'react-icons/fi'\r\nimport { BsImage, BsArrowRight } from 'react-icons/bs'\r\nimport { LabelModal } from './actionModal/LabelModal';\r\nimport { MembersModal } from './actionModal/MembersModal'\r\nimport { DueDateModal } from './actionModal/DueDateModal'\r\nimport { MoveModal } from './actionModal/MoveModal'\r\nimport { CopyModal } from './actionModal/CopyModal'\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\n\r\nclass _ActionList extends Component {\r\n    state = {\r\n        task: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState({\r\n            task: this.props.task\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n    }\r\n\r\n    closeDetails = () =>{\r\n        const boardId = this.props.match.params.boradId;\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n    render() {\r\n        const { task } = this.state\r\n        if (!task) return <h1>Loading...</h1>\r\n        return (\r\n            <div className=\"menu-task flex column w-40 content-start right\">\r\n                <div className=\"close-details fam-2 font-1 bold pad-1 cur-pointer\" onClick={() => this.closeDetails()}>X</div>\r\n                <div className=\"details-action flex column center pad-1 w-80\">\r\n                    <label htmlFor=\"actions\" className=\"font-m pb-3\">ACTIONS</label>\r\n                    <ul className=\"action-menu flex column w-100 clean-list font-m pad-0 fw-2\">\r\n\r\n                        <li className=\"label-wrap\" onClick={() => this.props.openOverlay('label-wrap-modal')}>\r\n                            <div className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('label-wrap-modal') }}><MdLabelOutline />Labels</div>\r\n                            <LabelModal toggleModal={() => { this.props.toggleModal() }} updateState= {() => {this.props.updateState()}}/>\r\n                        </li>\r\n\r\n                        <ul className=\"members-wrap\">\r\n                            <li className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('members-wrap-modal') }}><FiUsers className=\"action-icon\" />Members</li>\r\n                            <MembersModal isMemberChecked={this.props.isMemberChecked} onAddMemberToTask={this.props.onAddMemberToTask} toggleModal={() => { this.props.toggleModal() }} />\r\n                        </ul>\r\n\r\n                        <li className=\"duedate-wrap\">\r\n                            <div className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('duedate-wrap-modal') }}><AiOutlineClockCircle className=\"action-icon\" />DueDate</div>\r\n                            <DueDateModal onSaveDueDate={this.props.onSaveDueDate} toggleModal={() => { this.props.toggleModal() }} />\r\n                        </li>\r\n\r\n                        <li onClick={() => { this.props.onAddCheckList(task) }} className=\"btn-action\"><AiOutlineCheckSquare className=\"action-icon\" />Checklist</li>\r\n                        <li className=\"btn-action\"><BsImage className=\"action-icon\"/>Image</li>\r\n                        <li className=\"move-wrap\">\r\n                            <div className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('move-wrap-modal') }}><BsArrowRight />Move</div>\r\n                            <MoveModal group={this.props.group} task={task} toggleModal={() => { this.props.toggleModal() }} />\r\n                        </li>\r\n                        <li className=\"copy-wrap\">\r\n                            <div className=\"btn-action w-100 \" onClick={() => { this.props.toggleModal('copy-wrap-modal') }}><BiCopy className=\"action-icon\" />Copy</div>\r\n                            <CopyModal className=\"action-icon\" group={this.props.group} task={task} toggleModal={() => { this.props.toggleModal() }} />\r\n                        </li>\r\n                        <li onClick={() => { this.props.onDeleteTask() }} className=\"btn-action btn-delete\"><AiOutlineDelete className=\"action-icon\" />Delete</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const ActionList = connect(mapStateToProps, mapDispatchToProps)(withRouter(_ActionList));\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\LabelModal.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MembersModal.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\shared\\ModalAction.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\OverlayAction.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\store\\actions\\systemAction.js",["314"],"import { utilService } from '../../services/generalService/utilService';\r\n\r\nexport function loading() { // Action Creator\r\n    return async dispatch => {\r\n        try {   \r\n            dispatch('LOADING_DONE');         \r\n            dispatch('LOADING_START');\r\n            setTimeout(() => {\r\n                dispatch('LOADING_DONE');\r\n            }, 1500);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\LabelTask.jsx",["315","316","317","318","319"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { FiEdit2 } from 'react-icons/fi'\r\nimport { withRouter } from \"react-router\";\r\nimport { update } from '../../../../store/actions/boardsAction';\r\nimport { boardService } from '../../../../services/boardService';\r\n\r\nclass _LabelTask extends Component {\r\n    state = {\r\n        isDisable: true,\r\n        titleLabel: this.props.label.title ? this.props.label.title : '',\r\n        task: null,\r\n        group: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { taskId, groupId } = this.props.match.params;\r\n        const board = this.props.board;\r\n        const group = boardService.getGroupById(board, groupId);\r\n        const task = boardService.getTaskById(group, taskId);\r\n        this.setState({ ...this.state, task: task, group: group });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props !== prevProps) {\r\n            const { boardId, taskId, groupId } = this.props.match.params;\r\n            const board = { ...this.props.board };\r\n            const group = boardService.getGroupById(board, groupId);\r\n            const task = boardService.getTaskById(group, taskId);\r\n            this.setState({ ...this.state, task: task, group: group });\r\n        }\r\n\r\n    }\r\n\r\n    toggleLabel(labelId, nameInput) {\r\n        const { task, group } = this.state;\r\n        const board = { ...this.props.board };\r\n        if (!task.labelIds) {\r\n            task.labelIds = []\r\n        }\r\n        const labelIdx = task.labelIds.findIndex(currLabelId => currLabelId === labelId);\r\n        if (labelIdx > -1) {\r\n            task.labelIds.splice(labelIdx, 1)\r\n        } else task.labelIds.push(labelId)\r\n        this.props.updateTaskLabel(task)\r\n        // const updateBoard = boardService.updateTaskAtBoard(board, group, task);\r\n        // this.props.update(updateBoard)\r\n    }\r\n\r\n    toggleDisable(nameInput) {\r\n        document.querySelector(`.${nameInput}`).disabled = !(document.querySelector(`.${nameInput}`).disabled); \r\n        this.setState({\r\n            isDisable: !this.state.isDisable\r\n        })\r\n    }\r\n\r\n    borderLabel = (task, labelId) => {\r\n        if (task.labelIds) {\r\n            if (task.labelIds.includes(labelId))\r\n                return 'border';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const value = target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            titleLabel: value\r\n        });\r\n        const label = this.props.label;\r\n        label.title = target.value;\r\n        this.updateLabelBoard(label);\r\n    }\r\n\r\n    updateLabelBoard = (label) => {\r\n        const { board } = this.props;\r\n        const idx = board.labels.findIndex(currLabel => currLabel.id === label.id);\r\n        board.labels.splice(idx, 1, label);\r\n        this.props.update(board);\r\n    };\r\n\r\n    render() {\r\n        const task = this.props.task;\r\n        if(!task) return <h1>lodaing...</h1>\r\n        const { label } = this.props;\r\n        let className;\r\n        if (task) {\r\n            className = this.borderLabel(task, label.id);\r\n        }\r\n        const nameInput = `label-${label.id}`;\r\n        return (\r\n            <div className=\"label flex center space-between w-100 h-20\" data-label={label.id}>\r\n                <div className={`wrap-label ${className} w-85`} onClick={() => this.toggleLabel(label.id, nameInput)}\r\n                >\r\n                    <input\r\n                        type=\"text\"\r\n                        name={nameInput}\r\n                        value={this.state.titleLabel}\r\n                        style={{ background: `${label.color}` }}\r\n                        className={`label-input ${nameInput} ${this.state.isDisable}  cur-pointer`}\r\n                        onChange={this.handleChange}\r\n                        maxLength={13}\r\n                        disabled\r\n                    />\r\n                </div>\r\n                    <span onClick={() => { this.toggleDisable(nameInput) }} className=\"edit-label ps-1\"><FiEdit2 /> </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const LabelTask = connect(mapStateToProps, mapDispatchToProps)(withRouter(_LabelTask))","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Login.jsx",["320"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Upload } from '../cmps/Upload'\r\nimport LoginPic from '../assets/img/login.svg'\r\nimport {\r\n  loadUsers,\r\n  removeUser,\r\n  login,\r\n  logout,\r\n  signup\r\n} from '../store/actions/userActions'\r\n\r\nclass _Login extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      username: '',\r\n      password: ''\r\n    },\r\n    signupCred: {\r\n      username: '',\r\n      password: '',\r\n      fullname: ''\r\n    },\r\n    toggleLogin: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadUsers()\r\n  }\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  toggleLogin = () => {\r\n    this.setState({ ...this.state, toggleLogin: !this.state.toggleLogin })\r\n  }\r\n  signupHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault()\r\n    try {\r\n      this.props.login({ username: this.state.loginCred.username, password: this.state.loginCred.password })\r\n      document.querySelector('.app-header').classList.add('bg-header-board');\r\n      this.props.history.push('/board')\r\n\r\n      this.setState({ loginCred: { username: '', password: '' } })\r\n    } catch (err) {\r\n      this.setState({ msg: 'Login failed, try again.' })\r\n    }\r\n  }\r\n\r\n  doSignup = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password, fullname } = this.state.signupCred\r\n    if (!username || !password || !fullname) {\r\n      return this.setState({ msg: 'All inputs are required' })\r\n    }\r\n    const signupCreds = { username, password, fullname }\r\n    this.props.signup(signupCreds)\r\n    this.setState({ signupCred: { username: '', password: '', fullname: '' } })\r\n  }\r\n\r\n  removeUser = userId => {\r\n    this.props.removeUser(userId)\r\n  }\r\n\r\n  doLogout = () => {\r\n    this.props.logout()\r\n    this.props.history.push('/')\r\n    document.querySelector('.app-header').classList.remove('bg-header-board');\r\n  }\r\n  render() {\r\n    let signupSection = (\r\n      <form className=\"flex column sign-up space-between\" onSubmit={this.doSignup}>\r\n        <h2 className=\"fam-1 font-3 fw-2\">Signup</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"fullname\"\r\n          value={this.state.signupCred.fullname}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Full name\"\r\n          autoComplete=\"fullname\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Username\"\r\n          autoComplete=\"username\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n        <br />\r\n        <Upload />\r\n        <div className=\"flex space-between\">\r\n          <button className=\"sign-btn\">Signup</button>\r\n          <button className=\"login-btn\" onClick={() => this.toggleLogin()}>Login</button>\r\n        </div>\r\n      </form>\r\n    )\r\n    let loginSection = (\r\n      <form className=\"login flex column  w-100 h-80 space-between\" onSubmit={this.doLogin}>\r\n        <h2 className=\"fam-1 font-3 fw-2 mb-1\">Login</h2>\r\n\r\n        <select\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n        >\r\n          <option value=\"\">Select User</option>\r\n          {this.props.users && this.props.users.map(user => <option key={user._id} value={user.username}>{user.fullname}</option>)}\r\n        </select>\r\n        \r\n\r\n        {/* <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Username\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.loginCred.password}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br /> */}\r\n        <div className=\"flex space-between mt-3\">\r\n          <button className=\"login-btn\">Login</button>\r\n          <button className=\"login-btn\" onClick={() => this.toggleLogin()}>Sign-in</button>\r\n        </div>\r\n\r\n      </form>\r\n    )\r\n\r\n    const { loggedInUser } = this.props\r\n    const toggleLogin = this.state.toggleLogin;\r\n    return (\r\n      <div className=\"login-sign-up flex column right content-center\">\r\n        {/* <p>{this.state.msg}</p> */}\r\n\r\n        {loggedInUser && (\r\n          <div>\r\n            <h3>\r\n              Welcome {loggedInUser.fullname}\r\n              <button onClick={() => { this.doLogout() }}>Logout</button>\r\n            </h3>\r\n          </div>\r\n        )}\r\n\r\n        {(!loggedInUser && toggleLogin) && loginSection}\r\n        {(!loggedInUser && !toggleLogin) && signupSection}\r\n          {/* <LoginPic/> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    isLoading: state.systemModule.isLoading\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  removeUser,\r\n  loadUsers,\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\r\n","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\BoardMembersModal.jsx",["321"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { UserPreview } from '../UserPreview';\r\nimport { MembersBoard } from '../MembersBoard';\r\n\r\n\r\n\r\n\r\nclass _BoardMembersModal extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        const members  = this.props.users;\r\n        return <div className=\"action-modal c-stand board-members-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"members-modal p-abs flex column pad-1\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center content-end gap-5 w-70\">\r\n                        <h1 className=\"fam-1 font-1 \">Members</h1>\r\n                        <span className=\"cur-pointer fam-1 font-s bold\" onClick={() => { this.props.toggleModal('board-members-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content\">\r\n                        <ul>\r\n                            {members.map(member => {\r\n                                return <li key={member._id} onClick={() => { this.props.onAddMemberToBoard(member) }} className=\"flex space-between member-modal center\">\r\n                                    <div className=\"flex center gap-xs\">\r\n                                        <UserPreview user={member}/>\r\n                                        <p>{member.fullname} ({member.username})</p>\r\n                                    </div>\r\n                                    <span className={`check ${this.props.isMemberChecked(member)}`}>✓</span>\r\n                                </li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const BoardMembersModal = connect(mapStateToProps, mapDispatchToProps)(_BoardMembersModal)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\DueDateModal.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\MoveModal.jsx",["322"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { LabelTask } from '../LabelTask'\r\nimport { update } from '../../../../../store/actions/boardsAction';\r\nimport { boardService } from '../../../../../services/boardService'\r\n\r\n\r\nclass _MoveMdodal extends Component {\r\n    state = {\r\n        moveTo: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    moveTask = () => {\r\n        if (this.state.moveTo !== this.props.group.id) {\r\n            const copyBoard = { ...this.props.board }\r\n            copyBoard.groups[boardService.getGroupIdxById(copyBoard, this.props.group.id)].tasks.splice(\r\n                boardService.getTaskIdxById(this.props.group, this.props.task.id), 1)\r\n            copyBoard.groups[this.state.moveTo].tasks.push(this.props.task)\r\n            this.props.update(copyBoard)\r\n        }\r\n        // this.props.history.push(`/board/${copyBoard._id}`)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log(target.value)\r\n        this.setState({ moveTo: target.value })\r\n    }\r\n    render() {\r\n        return <div className=\"action-modal move-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"move-modal w-100 p-abs flex column pad-1\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center space-between gap-5 w-100 mb-1\">\r\n                        <h1 className=\"fam-1 font-1 \">Move to</h1>\r\n                        <span className=\"cur-pointer fam-1 font-s bold\" onClick={() => { this.props.toggleModal('move-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content w-100\">\r\n                        <form onSubmit={(ev) => {\r\n                            this.moveTask()\r\n                            ev.preventDefault()\r\n                        }}>\r\n                            <select onChange={this.handleChange}>\r\n                                {this.props.board.groups.map((group, idx) => {\r\n                                    return group.id === this.props.group.id && <option key={group.id} value={group.id}>{group.title}</option>\r\n                                })}\r\n                                {this.props.board.groups.map((group, idx) => {\r\n                                    return group.id !== this.props.group.id && <option value={idx} key={group.id}>{group.title}</option>\r\n                                })}\r\n                            </select>\r\n                            <button className=\"btn-copy-move\">Move</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const MoveMdodal = connect(mapStateToProps, mapDispatchToProps)(_MoveMdodal)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\CopyModal.jsx",["323","324"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { LabelTask } from '../LabelTask'\r\nimport { update } from '../../../../../store/actions/boardsAction';\r\nimport { boardService } from '../../../../../services/boardService'\r\nimport { utilService } from '../../../../../services/generalService/utilService';\r\n\r\n\r\nclass _CopyModal extends Component {\r\n    state = {\r\n        copyTo: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    copyTask = () => {\r\n        if (this.state.copyTo !== this.props.group.id) {\r\n            const copyBoard = { ...this.props.board }\r\n            const task = { ...this.props.task }\r\n            task.id = utilService.makeId()\r\n            copyBoard.groups[this.state.copyTo].tasks.push(task)\r\n            this.props.update(copyBoard)\r\n        }\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log(target.value)\r\n        this.setState({ copyTo: target.value })\r\n    }\r\n    render() {\r\n        return <div className=\"action-modal copy-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"copy-modal p-abs flex column pad-1\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center space-between gap-5 w-100 mb-1\">\r\n                        <h1 className=\"fam-1 font-1\">Copy</h1>\r\n                        <span className=\"cur-pointer fam-1 font-1 bold\" onClick={() => { this.props.toggleModal('duedate-wrap-modal') }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content\">\r\n                        <form onSubmit={(ev) => {\r\n                            this.copyTask()\r\n                            ev.preventDefault()\r\n                        }}>\r\n                            <select onChange={this.handleChange}>\r\n                                {this.props.board.groups.map((group) => {\r\n                                    return group.id === this.props.group.id && <option key={group.id} value={group.id}>{group.title}</option>\r\n                                })}\r\n                                {this.props.board.groups.map((group, idx) => {\r\n                                    return group.id !== this.props.group.id && <option value={idx} key={group.id}>{group.title}</option>\r\n                                })}\r\n                            </select>\r\n                            <button className=\"btn-copy-move\">Copy</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\n\r\nexport const CopyModal = connect(mapStateToProps, mapDispatchToProps)(_CopyModal)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\taskDetails\\action\\actionModal\\GroupModal.jsx",["325","326","327","328"],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\calendar.jsx",["329","330"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nclass _Calendar extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"calendar w-100 h-100\">\r\n            <h1>Put Calendar with react library</h1>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const Calendar = connect(mapStateToProps, mapDispatchToProps)(_Calendar)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\pages\\Dashboard.jsx",["331","332"],"import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nclass _Dashboard extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"dashboard w-100 h-100 flex center space-between\">\r\n            <h1>Fill chart!!</h1>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\board\\boardNavbar\\InfoBoardModal.jsx",["333","334"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ModalAction } from '../../shared/ModalAction';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { Link } from 'react-router-dom';\r\nimport { BsCalendar } from 'react-icons/bs'\r\nimport { BiBarChartAlt2 } from 'react-icons/bi'\r\nimport { RiDashboardLine } from 'react-icons/ri'\r\n\r\n\r\n\r\n\r\n\r\nclass _InfoBoardModal extends Component {\r\n\r\n    render() {\r\n        const { board } = this.props;\r\n        return <div className=\"action-modal info-board-wrap-modal d-none p-abs flex\">\r\n            <ModalAction>\r\n                <div className=\"info-board-modal p-abs flex column pad-1 bg-white c-stand z-1 br-3 h-100\">\r\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center space-between gap-5 w-100 mb-1\">\r\n                        <h1 className=\"fam-1 font-m \">Option</h1>\r\n                        <span className=\"cur-pointer fam-1 font-m bold\" onClick={() => { this.props.toggleModal() }}><AiOutlineClose /></span>\r\n                    </div>\r\n                    <div className=\"action-content font-m \">\r\n                        <ul className=\"flex column space-evenly h-100\">\r\n                            <li\r\n                                onClick={() => { this.props.changeDisplay('board') }}>\r\n                                <RiDashboardLine />Board\r\n                            </li>\r\n                            <li \r\n                                onClick={() => { this.props.changeDisplay('dashboard') }}>\r\n                                <BiBarChartAlt2 />Dashboard\r\n                            </li>\r\n                            <li\r\n                                onClick={() => { this.props.changeDisplay('calendar') }}>\r\n                                 <BsCalendar /> Calender</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </ModalAction>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const InfoBoardModal = connect(mapStateToProps, mapDispatchToProps)(_InfoBoardModal)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\dashboard\\ChartLabelsTasks.jsx",["335","336"],"import { Component } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { connect } from 'react-redux';\r\nimport { utilService } from '../../services/generalService/utilService'\r\n\r\n// import { add, loadBoard, update, setBoard, remove } from '../store/actions/boardsAction.js';\r\n\r\n\r\n\r\nclass _ChartLabelsTasks extends Component {\r\n    state = {\r\n        tasks: null,\r\n        labels: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            ...this.state,\r\n            tasks: this.props.tasks,\r\n            labels: this.props.labelsBoard\r\n        })\r\n    }\r\n\r\n    mapLabelsTask = (labels, tasks) => {\r\n\r\n        const mapObj = {};\r\n        if (labels && tasks) {\r\n            labels.forEach(label => {\r\n                mapObj[`${label.title}`] = 0;\r\n                console.log(mapObj);\r\n                tasks.forEach(task => {\r\n                    if (task.labelIds) {\r\n                        task.labelIds.forEach(labelId => {\r\n                            if (labelId === label.id) {\r\n                                mapObj[`${label.title}`]++;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            });\r\n            return mapObj;\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { tasks, labels } = this.state;\r\n        if (!tasks || !labels) return <h1>Loading...</h1>\r\n        const mapLabelsTask = this.mapLabelsTask(labels, tasks);\r\n        const backgroundColorDashboard = [];\r\n        const backgroundColorBorder = [];\r\n\r\n        labels.forEach( label => {\r\n            backgroundColorDashboard.push(label.color);\r\n        })\r\n        const data = {\r\n            labels: Object.keys(mapLabelsTask),\r\n            datasets: [\r\n                {\r\n                    label: 'Task per Member',\r\n                    data: Object.values(mapLabelsTask),\r\n\r\n                    backgroundColor: backgroundColorDashboard,\r\n                    borderColor: [\r\n                        'rgba(54, 162, 80, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                    ],\r\n                    borderWidth: 2,\r\n                },\r\n            ],\r\n        };\r\n        return (\r\n            <div className=\"category-chart\">\r\n                <Pie data={data} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\nexport const ChartLabelsTasks = connect(mapStateToProps, mapDispatchToProps)(_ChartLabelsTasks)","C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\dashboard\\ChartGroupsTasks.jsx",[],"C:\\Users\\ravit\\OneDrive\\שולחן העבודה\\Taskman\\frontend\\src\\cmps\\dashboard\\ChartMembersTasks.jsx",["337"],"import { Component } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { connect } from 'react-redux';\r\nimport {utilService} from '../../services/generalService/utilService'\r\n\r\n// import { add, loadBoard, update, setBoard, remove } from '../store/actions/boardsAction.js';\r\n\r\n\r\n\r\nclass _ChartMembersTasks extends Component {\r\n    state = {\r\n        tasks: null,\r\n        members: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            ...this.state,\r\n            tasks: this.props.tasks,\r\n            members: this.props.membersBoard\r\n        })\r\n    }\r\n\r\n    mapMembersTask = (members,tasks) => {\r\n\r\n        const mapObj = {};\r\n        members.forEach( member => {\r\n            mapObj[`${member.fullname}`] = 0;\r\n            console.log(mapObj);\r\n            tasks.forEach( task => {\r\n                task.members.forEach( currMember => {\r\n                    if(currMember.fullname === member.fullname){\r\n                        mapObj[`${member.fullname}`]++;\r\n                    }\r\n                })\r\n            })\r\n        });\r\n        return mapObj;\r\n        \r\n    }\r\n    \r\n\r\n    render() {\r\n        const {tasks, members} = this.state;\r\n        if(!tasks || !members) return <h1>Loading...</h1>\r\n        const mapMembersTask = this.mapMembersTask(members,tasks);\r\n        const data = {\r\n            labels: Object.keys(mapMembersTask),\r\n            datasets: [\r\n                {\r\n                    label: 'Task per Member',\r\n                    data: Object.values(mapMembersTask),\r\n\r\n                    backgroundColor: [\r\n                        'rgba(54, 162, 80, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(255, 38, 86, 0.2)',\r\n\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(54, 162, 80, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                    ],\r\n                    borderWidth: 2,\r\n                },\r\n            ],\r\n        };\r\n        return (\r\n            <div className=\"category-chart\">\r\n                <Pie data={data} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\nexport const ChartMembersTasks = connect(mapStateToProps, mapDispatchToProps)(_ChartMembersTasks)",{"ruleId":"338","replacedBy":"339"},{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","severity":1,"message":"343","line":2,"column":34,"nodeType":"344","messageId":"345","endLine":2,"endColumn":51},{"ruleId":"342","severity":1,"message":"346","line":2,"column":10,"nodeType":"344","messageId":"345","endLine":2,"endColumn":14},{"ruleId":"342","severity":1,"message":"347","line":6,"column":37,"nodeType":"344","messageId":"345","endLine":6,"endColumn":48},{"ruleId":"342","severity":1,"message":"348","line":2,"column":10,"nodeType":"344","messageId":"345","endLine":2,"endColumn":16},{"ruleId":"342","severity":1,"message":"349","line":25,"column":13,"nodeType":"344","messageId":"345","endLine":25,"endColumn":16},{"ruleId":"350","severity":1,"message":"351","line":30,"column":11,"nodeType":"352","endLine":30,"endColumn":28},{"ruleId":"342","severity":1,"message":"353","line":3,"column":10,"nodeType":"344","messageId":"345","endLine":3,"endColumn":17},{"ruleId":"342","severity":1,"message":"354","line":8,"column":27,"nodeType":"344","messageId":"345","endLine":8,"endColumn":36},{"ruleId":"342","severity":1,"message":"355","line":2,"column":10,"nodeType":"344","messageId":"345","endLine":2,"endColumn":17},{"ruleId":"342","severity":1,"message":"356","line":7,"column":10,"nodeType":"344","messageId":"345","endLine":7,"endColumn":21},{"ruleId":"342","severity":1,"message":"357","line":7,"column":23,"nodeType":"344","messageId":"345","endLine":7,"endColumn":32},{"ruleId":"342","severity":1,"message":"358","line":7,"column":34,"nodeType":"344","messageId":"345","endLine":7,"endColumn":46},{"ruleId":"342","severity":1,"message":"359","line":8,"column":10,"nodeType":"344","messageId":"345","endLine":8,"endColumn":19},{"ruleId":"350","severity":1,"message":"351","line":41,"column":11,"nodeType":"352","endLine":41,"endColumn":57},{"ruleId":"350","severity":1,"message":"351","line":51,"column":11,"nodeType":"352","endLine":51,"endColumn":64},{"ruleId":"350","severity":1,"message":"351","line":60,"column":11,"nodeType":"352","endLine":60,"endColumn":60},{"ruleId":"350","severity":1,"message":"351","line":68,"column":11,"nodeType":"352","endLine":68,"endColumn":60},{"ruleId":"342","severity":1,"message":"360","line":6,"column":10,"nodeType":"344","messageId":"345","endLine":6,"endColumn":21},{"ruleId":"361","severity":1,"message":"362","line":80,"column":49,"nodeType":"363","messageId":"364","endLine":80,"endColumn":51},{"ruleId":"361","severity":1,"message":"362","line":84,"column":49,"nodeType":"363","messageId":"364","endLine":84,"endColumn":51},{"ruleId":"342","severity":1,"message":"365","line":3,"column":10,"nodeType":"344","messageId":"345","endLine":3,"endColumn":14},{"ruleId":"342","severity":1,"message":"366","line":6,"column":8,"nodeType":"344","messageId":"345","endLine":6,"endColumn":22},{"ruleId":"367","severity":1,"message":"368","line":173,"column":9,"nodeType":"369","endLine":173,"endColumn":24},{"ruleId":"361","severity":1,"message":"362","line":361,"column":77,"nodeType":"363","messageId":"364","endLine":361,"endColumn":79},{"ruleId":"350","severity":1,"message":"351","line":401,"column":37,"nodeType":"352","endLine":401,"endColumn":86},{"ruleId":"361","severity":1,"message":"362","line":452,"column":78,"nodeType":"363","messageId":"364","endLine":452,"endColumn":80},{"ruleId":"361","severity":1,"message":"370","line":453,"column":52,"nodeType":"371","messageId":"372","endLine":453,"endColumn":58},{"ruleId":"342","severity":1,"message":"360","line":1,"column":10,"nodeType":"344","messageId":"345","endLine":1,"endColumn":21},{"ruleId":"361","severity":1,"message":"373","line":104,"column":45,"nodeType":"363","messageId":"374","endLine":104,"endColumn":47},{"ruleId":"342","severity":1,"message":"375","line":3,"column":10,"nodeType":"344","messageId":"345","endLine":3,"endColumn":23},{"ruleId":"342","severity":1,"message":"376","line":3,"column":25,"nodeType":"344","messageId":"345","endLine":3,"endColumn":50},{"ruleId":"342","severity":1,"message":"377","line":70,"column":19,"nodeType":"344","messageId":"345","endLine":70,"endColumn":31},{"ruleId":"342","severity":1,"message":"378","line":43,"column":7,"nodeType":"344","messageId":"345","endLine":43,"endColumn":20},{"ruleId":"342","severity":1,"message":"379","line":3,"column":7,"nodeType":"344","messageId":"345","endLine":3,"endColumn":23},{"ruleId":"342","severity":1,"message":"380","line":6,"column":9,"nodeType":"344","messageId":"345","endLine":6,"endColumn":21},{"ruleId":"342","severity":1,"message":"381","line":31,"column":11,"nodeType":"344","messageId":"345","endLine":31,"endColumn":23},{"ruleId":"342","severity":1,"message":"382","line":2,"column":10,"nodeType":"344","messageId":"345","endLine":2,"endColumn":25},{"ruleId":"383","severity":1,"message":"384","line":103,"column":55,"nodeType":"385","messageId":"386","endLine":103,"endColumn":57},{"ruleId":"342","severity":1,"message":"387","line":112,"column":24,"nodeType":"344","messageId":"345","endLine":112,"endColumn":32},{"ruleId":"361","severity":1,"message":"370","line":219,"column":52,"nodeType":"371","messageId":"372","endLine":219,"endColumn":58},{"ruleId":"342","severity":1,"message":"388","line":3,"column":10,"nodeType":"344","messageId":"345","endLine":3,"endColumn":18},{"ruleId":"342","severity":1,"message":"389","line":25,"column":32,"nodeType":"344","messageId":"345","endLine":25,"endColumn":40},{"ruleId":"342","severity":1,"message":"390","line":42,"column":24,"nodeType":"344","messageId":"345","endLine":42,"endColumn":29},{"ruleId":"342","severity":1,"message":"391","line":42,"column":31,"nodeType":"344","messageId":"345","endLine":42,"endColumn":35},{"ruleId":"350","severity":1,"message":"351","line":71,"column":45,"nodeType":"352","endLine":71,"endColumn":93},{"ruleId":"361","severity":1,"message":"362","line":80,"column":83,"nodeType":"363","messageId":"364","endLine":80,"endColumn":85},{"ruleId":"342","severity":1,"message":"365","line":4,"column":10,"nodeType":"344","messageId":"345","endLine":4,"endColumn":14},{"ruleId":"342","severity":1,"message":"365","line":2,"column":10,"nodeType":"344","messageId":"345","endLine":2,"endColumn":14},{"ruleId":"342","severity":1,"message":"392","line":2,"column":16,"nodeType":"344","messageId":"345","endLine":2,"endColumn":23},{"ruleId":"342","severity":1,"message":"360","line":1,"column":10,"nodeType":"344","messageId":"345","endLine":1,"endColumn":21},{"ruleId":"342","severity":1,"message":"365","line":2,"column":10,"nodeType":"344","messageId":"345","endLine":2,"endColumn":14},{"ruleId":"342","severity":1,"message":"392","line":2,"column":16,"nodeType":"344","messageId":"345","endLine":2,"endColumn":23},{"ruleId":"342","severity":1,"message":"393","line":27,"column":21,"nodeType":"344","messageId":"345","endLine":27,"endColumn":28},{"ruleId":"342","severity":1,"message":"394","line":37,"column":23,"nodeType":"344","messageId":"345","endLine":37,"endColumn":28},{"ruleId":"342","severity":1,"message":"395","line":38,"column":15,"nodeType":"344","messageId":"345","endLine":38,"endColumn":20},{"ruleId":"342","severity":1,"message":"396","line":4,"column":8,"nodeType":"344","messageId":"345","endLine":4,"endColumn":16},{"ruleId":"342","severity":1,"message":"397","line":6,"column":10,"nodeType":"344","messageId":"345","endLine":6,"endColumn":22},{"ruleId":"342","severity":1,"message":"398","line":5,"column":10,"nodeType":"344","messageId":"345","endLine":5,"endColumn":19},{"ruleId":"342","severity":1,"message":"398","line":5,"column":10,"nodeType":"344","messageId":"345","endLine":5,"endColumn":19},{"ruleId":"342","severity":1,"message":"380","line":7,"column":10,"nodeType":"344","messageId":"345","endLine":7,"endColumn":22},{"ruleId":"342","severity":1,"message":"399","line":5,"column":10,"nodeType":"344","messageId":"345","endLine":5,"endColumn":16},{"ruleId":"342","severity":1,"message":"400","line":5,"column":18,"nodeType":"344","messageId":"345","endLine":5,"endColumn":21},{"ruleId":"342","severity":1,"message":"401","line":5,"column":23,"nodeType":"344","messageId":"345","endLine":5,"endColumn":32},{"ruleId":"342","severity":1,"message":"402","line":5,"column":42,"nodeType":"344","messageId":"345","endLine":5,"endColumn":50},{"ruleId":"342","severity":1,"message":"365","line":2,"column":10,"nodeType":"344","messageId":"345","endLine":2,"endColumn":14},{"ruleId":"342","severity":1,"message":"392","line":2,"column":16,"nodeType":"344","messageId":"345","endLine":2,"endColumn":23},{"ruleId":"342","severity":1,"message":"365","line":2,"column":10,"nodeType":"344","messageId":"345","endLine":2,"endColumn":14},{"ruleId":"342","severity":1,"message":"392","line":2,"column":16,"nodeType":"344","messageId":"345","endLine":2,"endColumn":23},{"ruleId":"342","severity":1,"message":"365","line":5,"column":10,"nodeType":"344","messageId":"345","endLine":5,"endColumn":14},{"ruleId":"342","severity":1,"message":"395","line":17,"column":17,"nodeType":"344","messageId":"345","endLine":17,"endColumn":22},{"ruleId":"342","severity":1,"message":"360","line":4,"column":10,"nodeType":"344","messageId":"345","endLine":4,"endColumn":21},{"ruleId":"342","severity":1,"message":"403","line":51,"column":15,"nodeType":"344","messageId":"345","endLine":51,"endColumn":36},{"ruleId":"342","severity":1,"message":"360","line":4,"column":9,"nodeType":"344","messageId":"345","endLine":4,"endColumn":20},"no-native-reassign",["404"],"no-negated-in-lhs",["405"],"no-unused-vars","'localLoggedinUser' is assigned a value but never used.","Identifier","unusedVar","'Chat' is defined but never used.","'IoAppsSharp' is defined but never used.","'Upload' is defined but never used.","'_id' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'loading' is defined but never used.","'Draggable' is defined but never used.","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","'utilService' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Link' is defined but never used.","'onClickOutside' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Array.prototype.findIndex() expects a return value from arrow function.","expectedInside","'socketService' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'updatedBoard' is assigned a value but never used.","'socketIsReady' is assigned a value but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.","'boardService' is defined but never used.","'previewStyle' is assigned a value but never used.","'DragDropContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onUpdate' is assigned a value but never used.","'Provider' is defined but never used.","'duration' is assigned a value but never used.","'index' is assigned a value but never used.","'task' is assigned a value but never used.","'NavLink' is defined but never used.","'boardId' is assigned a value but never used.","'group' is assigned a value but never used.","'board' is assigned a value but never used.","'LoginPic' is defined but never used.","'MembersBoard' is defined but never used.","'LabelTask' is defined but never used.","'remove' is defined but never used.","'add' is defined but never used.","'loadBoard' is defined but never used.","'setBoard' is defined but never used.","'backgroundColorBorder' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]