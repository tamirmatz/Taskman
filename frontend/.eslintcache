[{"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/index.js":"1","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/serviceWorkerRegistration.js":"2","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/reportWebVitals.js":"3","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/App.jsx":"4","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/store.js":"5","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/routes.js":"6","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/systemReducer.js":"7","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/userReducer.js":"8","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/reviewReducer.js":"9","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/boardReducer.js":"10","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/AppHeader.jsx":"11","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/UserDetails.jsx":"12","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Board.jsx":"13","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Chat.jsx":"14","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Home.jsx":"15","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/BoardList.jsx":"16","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/userActions.js":"17","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/reviewActions.js":"18","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/boardsAction.js":"19","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/userService.js":"20","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/socketService.js":"21","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/Upload.jsx":"22","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskList.jsx":"23","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/reviewService.js":"24","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/boardService.js":"25","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/httpService.js":"26","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/cloudinaryService.js":"27","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/utilService.js":"28","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/asyncStorageService.js":"29","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskPreview.jsx":"30","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/data/board.js":"31","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalWrapper.jsx":"32","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/Overlay.jsx":"33","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MiniBoard.jsx":"34","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/UserPreview.jsx":"35","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MembersBoard.jsx":"36","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/boardNavbar/BoardNavbar.jsx":"37","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/TaskDetails.jsx":"38","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/CheckList.jsx":"39","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/CheckListStatus.jsx":"40","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/ActionList.jsx":"41","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/LabelModal.jsx":"42","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/MembersModal.jsx":"43","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalAction.jsx":"44","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/OverlayAction.jsx":"45","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/systemAction.js":"46","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/LabelTask.jsx":"47","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Login.jsx":"48","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/boardNavbar/BoardMembersModal.jsx":"49","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/DueDateModal.jsx":"50"},{"size":910,"mtime":1610189396000,"results":"51","hashOfConfig":"52"},{"size":5064,"mtime":499155300000,"results":"53","hashOfConfig":"52"},{"size":364,"mtime":499155300000,"results":"54","hashOfConfig":"52"},{"size":515,"mtime":1622208933114,"results":"55","hashOfConfig":"52"},{"size":752,"mtime":1622123464533,"results":"56","hashOfConfig":"52"},{"size":605,"mtime":1622631139552,"results":"57","hashOfConfig":"52"},{"size":322,"mtime":1609063804000,"results":"58","hashOfConfig":"52"},{"size":868,"mtime":1622452229862,"results":"59","hashOfConfig":"52"},{"size":669,"mtime":1609949674000,"results":"60","hashOfConfig":"52"},{"size":668,"mtime":1622215305163,"results":"61","hashOfConfig":"52"},{"size":2631,"mtime":1622452229853,"results":"62","hashOfConfig":"52"},{"size":1405,"mtime":1622631139549,"results":"63","hashOfConfig":"52"},{"size":6738,"mtime":1622636334716,"results":"64","hashOfConfig":"52"},{"size":3395,"mtime":1622123464523,"results":"65","hashOfConfig":"52"},{"size":2963,"mtime":1622548245289,"results":"66","hashOfConfig":"52"},{"size":1141,"mtime":1622390182440,"results":"67","hashOfConfig":"52"},{"size":1966,"mtime":1622631634138,"results":"68","hashOfConfig":"52"},{"size":1321,"mtime":1622123464531,"results":"69","hashOfConfig":"52"},{"size":1877,"mtime":1622631340203,"results":"70","hashOfConfig":"52"},{"size":2097,"mtime":1622445084281,"results":"71","hashOfConfig":"52"},{"size":2324,"mtime":1622477414605,"results":"72","hashOfConfig":"52"},{"size":1127,"mtime":1622631634136,"results":"73","hashOfConfig":"52"},{"size":4997,"mtime":1622631139545,"results":"74","hashOfConfig":"52"},{"size":1087,"mtime":1622123464528,"results":"75","hashOfConfig":"52"},{"size":3132,"mtime":1622631340201,"results":"76","hashOfConfig":"52"},{"size":1093,"mtime":1622401206514,"results":"77","hashOfConfig":"52"},{"size":563,"mtime":1622631437870,"results":"78","hashOfConfig":"52"},{"size":3195,"mtime":1622473191343,"results":"79","hashOfConfig":"52"},{"size":2319,"mtime":1622289086771,"results":"80","hashOfConfig":"52"},{"size":6535,"mtime":1622642838147,"results":"81","hashOfConfig":"52"},{"size":298329,"mtime":1622473341850,"results":"82","hashOfConfig":"52"},{"size":158,"mtime":1622292625069,"results":"83","hashOfConfig":"52"},{"size":104,"mtime":1622559883756,"results":"84","hashOfConfig":"52"},{"size":239,"mtime":1622381347337,"results":"85","hashOfConfig":"52"},{"size":515,"mtime":1622636334712,"results":"86","hashOfConfig":"52"},{"size":752,"mtime":1622642838145,"results":"87","hashOfConfig":"52"},{"size":3431,"mtime":1622636334713,"results":"88","hashOfConfig":"52"},{"size":10861,"mtime":1622642838173,"results":"89","hashOfConfig":"52"},{"size":4361,"mtime":1622634468838,"results":"90","hashOfConfig":"52"},{"size":699,"mtime":1622634229499,"results":"91","hashOfConfig":"52"},{"size":3261,"mtime":1622640727387,"results":"92","hashOfConfig":"52"},{"size":1550,"mtime":1622631340197,"results":"93","hashOfConfig":"52"},{"size":2239,"mtime":1622642994432,"results":"94","hashOfConfig":"52"},{"size":213,"mtime":1622559883755,"results":"95","hashOfConfig":"52"},{"size":114,"mtime":1622559883755,"results":"96","hashOfConfig":"52"},{"size":424,"mtime":1622561767108,"results":"97","hashOfConfig":"52"},{"size":3732,"mtime":1622642838149,"results":"98","hashOfConfig":"52"},{"size":4535,"mtime":1622631634136,"results":"99","hashOfConfig":"52"},{"size":2176,"mtime":1622636334713,"results":"100","hashOfConfig":"52"},{"size":1487,"mtime":1622641074694,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1wsars6",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/index.js",[],["210","211"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/serviceWorkerRegistration.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/reportWebVitals.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/App.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/store.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/routes.js",["212"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/systemReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/userReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/reviewReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/boardReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/AppHeader.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/UserDetails.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Board.jsx",["213","214"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Chat.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Home.jsx",["215","216","217","218","219","220","221","222","223"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/BoardList.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/userActions.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/reviewActions.js",["224","225"],"import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../../services/generalService/socketService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n      // socketService.on(SOCKET_EVENT_REVIEW_ADDED, review =>{\r\n      //   dispatch({ type: 'ADD_REVIEW', review })\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/boardsAction.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/userService.js",["226"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/socketService.js",["227"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/Upload.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskList.jsx",["228","229"],"import { TaskPreview } from '../board/TaskPreview'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Component } from 'react';\nimport { boardService } from '../../services/boardService.js'\nimport { utilService } from '../../services/generalService/utilService.js'\nimport { HiOutlineMenuAlt4 } from 'react-icons/hi'\nconst EMPTY_TASK = { title: '' }\nconst EMPTY_GROUP = { title: '' }\nexport class TaskList extends Component {\n    state = {\n        group: EMPTY_GROUP,\n        task: EMPTY_TASK\n    }\n    componentDidMount() {\n        this.setState({ group: this.props.group })\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            task: {\n                ...prevState.task,\n                [field]: value,\n            }\n        }))\n    }\n\n    updateGroup = () => {\n        if (!this.state.group.title) return;\n        const copyBoard = { ...this.props.board };\n        this.props.updateBoard(copyBoard)\n        const groupIdx = boardService.getGroupIdxById(copyBoard, this.state.group.id)\n        copyBoard.groups[groupIdx] = this.state.group\n        console.log(copyBoard)\n    }\n\n    handleChangeGroup = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            group: {\n                ...prevState.group,\n                [field]: value,\n            }\n        }))\n    }\n\n    onAddTask = () => {\n        if (!this.state.task.title) return;\n        const { group } = this.props\n        const copyBoard = { ...this.props.board };\n        const groupIdx = boardService.getGroupIdxById(copyBoard, group.id)\n        copyBoard.groups[groupIdx].tasks.push(utilService.formatNewTask(this.state.task))\n        this.props.updateBoard(copyBoard)\n        this.setState({ task: EMPTY_TASK })\n    }\n\n    render() {\n        const { board, group, updateBoard, index } = this.props\n\n        return (\n            <Draggable index={index} isDragDisabled={false} draggableId={group.id} >\n                {(provided, snapshot) => {\n                    return <li className=\"group br-3\"\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                    >\n                        <form className=\"\" onSubmit={(ev) => {\n                            ev.preventDefault()\n                            this.updateGroup()\n\n                        }}>\n                            <div className=\"group-title w-100 flex center space-between pb-2\">\n                                <input className=\"app-input font-w2 font-m lh-20 \" onBlur={this.updateGroup} type=\"text\" value={this.state.group.title} name=\"title\" onChange={this.handleChangeGroup} />\n                                <div className=\"group-menu\">...</div>\n                            </div>\n                        </form>\n                        <div className=\"wrap-task-list\">\n\n                            <div className=\"task-list flex column center content-center\">\n                                <Droppable key={index} droppableId={group.id} type='task'>\n                                    {(provided) => (\n                                        <div className=\"task-list-droppable\" ref={provided.innerRef} {...provided.droppableProps} {...provided.dragHandleProps}>\n                                            {group.tasks.map((task, idx) => (\n                                                <TaskPreview key={task.id}\n                                                    board={board}\n                                                    index={idx}\n                                                    groupId={group.id}\n                                                    updateBoard={updateBoard}\n                                                    task={task}\n                                                />\n                                            ))}\n                                            {!utilService.isFalse(group.tasks) && <h1 className=\"task-title fam-1 font-m\">No tasks to show</h1>}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                            </div>\n                            <form onSubmit={(ev) => {\n                                ev.preventDefault()\n                                this.onAddTask()\n                                console.log(ev)\n                            }}>\n                                <input className=\"add-task\" value={this.state.task.title} type=\"text\" placeholder=\"+ Add another card\" name=\"title\" onChange={this.handleChange} />\n                            </form>\n                        </div>\n                    </li>\n                }}\n            </Draggable>)\n        /*    </div> */\n    }\n}","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/reviewService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/boardService.js",["230"],"import { utilService } from './generalService/utilService.js'\r\nimport { storageService } from './generalService/asyncStorageService.js'\r\nimport {httpService} from '../services/generalService/httpService.js'\r\n\r\nwindow.storageService = storageService;\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    update,\r\n    add,\r\n    getGroupById,\r\n    getTaskById,\r\n    getGroupIdxById,\r\n    checklistPreview,\r\n    getTaskIdxById,\r\n    checklistPrecent\r\n}\r\n\r\n\r\nfunction query() {\r\n    // return storageService.query(STORAGE_KEY)\r\n    return httpService.get('board')\r\n}\r\n\r\nfunction getById(boardId) {\r\n    // const board = storageService.get(STORAGE_KEY, boardId);\r\n    // return board\r\n    return httpService.get(`board/${boardId}`)\r\n\r\n}\r\n\r\nfunction remove(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function add() {\r\n    // const newBoard = _createBoard()\r\n    // const savedBoard = storageService.post(STORAGE_KEY, newBoard)\r\n    // return savedBoard\r\n    const board = {title: 'new' ,style:{}}\r\n    const res = await httpService.post(`board`, board)\r\n    return res\r\n}\r\n\r\nasync function update(board) {\r\n    // return storageService.put(STORAGE_KEY, board)\r\n    board.activities = []\r\n    \r\n    const res = await httpService.put(`board/${board._id}`, board)\r\n    return res\r\n\r\n}\r\n\r\n//task crud\r\nfunction getGroupById(board, groupId) {\r\n    return board.groups.find(group => group.id === groupId);\r\n}\r\n\r\nfunction getGroupIdxById(board, groupId) {\r\n    return board.groups.findIndex(group => group.id === groupId);\r\n}\r\n\r\nfunction getTaskIdxById(group, taskId) {\r\n    return group.tasks.findIndex(task => task.id === taskId);\r\n}\r\n\r\nfunction getTaskById(group, taskId) {\r\n    return group.tasks.find(task => task.id === taskId)\r\n}\r\n\r\nfunction checklistPreview(task) {\r\n    const checklists = task.checklists\r\n    let isDone = false\r\n    let allTodos = 0;\r\n    let doneTodos = 0;\r\n    checklists.forEach(checkList => {\r\n        allTodos += checkList.todos.length;\r\n        checkList.todos.forEach(todo => {\r\n            if (todo.isDone) doneTodos++\r\n        })\r\n    });\r\n    if (doneTodos === allTodos && allTodos) isDone = true;\r\n    const str = `${doneTodos}/${allTodos}`\r\n    const res = { str, isDone}\r\n    return res\r\n}\r\n\r\nfunction checklistPrecent(checklist){\r\n    let doneTodos = 0;\r\n    checklist.todos.forEach(todo => {\r\n        if(todo.isDone) doneTodos++\r\n    })\r\n    const precent = (doneTodos / checklist.todos.length) * 100 \r\n    console.log('doneTodos',checklist.todos.length);\r\n    \r\n    return precent\r\n}","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/httpService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/cloudinaryService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/utilService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/asyncStorageService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskPreview.jsx",["231","232","233","234","235","236","237","238"],"import { Link } from 'react-router-dom'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Provider } from 'react-redux';\nimport { boardService } from '../../services/boardService.js'\nimport { BsCheckBox } from 'react-icons/bs'\nimport { FaRegCommentDots } from 'react-icons/fa'\nimport { AiOutlineClockCircle, AiOutlineClose } from 'react-icons/ai'\nimport { GrTextAlignFull } from 'react-icons/gr'\n\nimport { utilService } from '../../services/generalService/utilService'\nimport React, { Component } from 'react'\n\n\n\n// export function TaskPreview({ board, index, task, updateBoard, groupId }) {\nexport class TaskPreview extends Component {\n    state = {\n        isLabelOpen: false\n    }\n\n    toggleLabels = () => {\n        document.querySelectorAll('.preview-label').forEach(label => {\n            label.classList.toggle('label-open');\n        });;\n        this.setState({ isLabelOpen: !this.state.isLabelOpen })\n    }\n\n    getStyle = (style, snapshot) => {\n        if (!snapshot.isDropAnimating) {\n            return style;\n        }\n        const { moveTo, curve, duration } = snapshot.dropAnimation;\n        // move to the right spot\n        const translate = `translate(${moveTo.x}px, ${moveTo.y}px)`;\n        // add a bit of turn for fun\n        const rotate = 'rotate(0.01turn)';\n\n        // patching the existing style\n        return {\n            ...style,\n            background: '#fff',\n            transform: `${translate} ${rotate}`,\n            // slowing down the drop because we can\n            transition: `all ${curve} 0.2s`,\n        };\n    }\n\n    onRemoveTask = (taskId) => {\n        const { board, index, task, updateBoard, groupId } = this.props\n        const group = board.groups[boardService.getGroupIdxById(board, groupId)]\n        board.groups[boardService.getGroupIdxById(board, groupId)].tasks.splice(boardService.getTaskIdxById(group, taskId), 1)\n        updateBoard({ ...board })\n    }\n    render() {\n        const { board, index, task, updateBoard, groupId } = this.props\n        return <Draggable\n            draggableId={task.id}\n            index={index}\n            isDragDisabled={false}\n        >\n            {(provided, snapshot) => (\n                <div\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                // isDragging={snapshot.isDragging && !snapshot.isDropAnimating}\n                // style={this.getStyle(provided.draggableProps.style, snapshot)}\n                >\n                    <div className=\"wrap-list-task br-3\">\n                        <div className=\"wrap-task-prev\">\n                            <div className=\"task-preview flex column\">\n                                {/* <Link to={`/board/${board._id}/${task.id}`}> */}\n                                {utilService.isFalse(task.labelIds) &&\n                                    <div className=\"flex row space-between center w-100\">\n                                        <div className=\"label-task-prev\">\n                                            <div className=\"labels-container wrap flex\" onClick={(ev) => {\n                                                ev.stopPropagation();\n                                            }}>\n                                                {task.labelIds.map(labelId => {\n\n                                                    const label = board.labels.find(label => {\n                                                        return label.id === labelId;\n                                                    })\n\n                                                    if (label)\n                                                        return <div key={label.id} className={`preview-label ${this.state.isLabelOpen && \"label-open\"}`} onClick={this.toggleLabels} style={{ backgroundColor: label.color }}>\n                                                            {this.state.isLabelOpen && label.title}\n                                                        </div>\n                                                })}</div>\n                                        </div>\n                                        <span className=\"cur-pointer fam-1 font-s bold\" onClick={() => { this.onRemoveTask(task.id) }}><AiOutlineClose /></span>\n                                    </div>\n                                }\n\n                                <Link to={`/board/${board._id}/${groupId}/${task.id}`}>\n\n\n                                    <h1 className=\"task-title fam-1 font-m\">{task.title}</h1>\n                                    <div className=\"task-mini-details flex w-100 content-start  gap-xs fam-1 c-stand\">\n                                        {utilService.isFalse(task.comments) && <small className=\"flex center\"><FaRegCommentDots /></small>}\n                                        {utilService.isFalse(task.checklists) && <div className={`flex row center ${boardService.checklistPreview(task).isDone && \"check-list-done-prev\"}`}>\n                                            <BsCheckBox />\n                                            <small>{boardService.checklistPreview(task).str}</small>\n                                        </div>}\n                                        {task.dueDate && <div className=\"flex row center\">\n                                            <AiOutlineClockCircle />\n                                            <small>\n                                                {utilService.timeAgo(task.dueDate)}\n                                            </small>\n                                        </div>}\n                                        {task.description && <small className=\"flex center\"><GrTextAlignFull /></small>}\n                                    </div>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n            }\n        </Draggable>\n    }\n}","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/data/board.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalWrapper.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/Overlay.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MiniBoard.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/UserPreview.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MembersBoard.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/boardNavbar/BoardNavbar.jsx",["239"],"import { MembersBoard } from '../MembersBoard';\nimport { MdKeyboardArrowDown } from 'react-icons/md'\nimport { RiDashboardLine } from 'react-icons/ri'\nimport { AiOutlineStar } from 'react-icons/ai'\nimport { Component } from 'react';\nimport { BoardMembersModal } from './BoardMembersModal'\n\n\n\nexport class BoardNavbar extends Component {\n    state = {\n        title: this.props.board.title,\n        members: this.props.board.members\n    }\n\n\n    onAddMemberToBoard = (addedMember) => {\n        const { members } = this.state\n        const memberIdx = members.findIndex(member => member._id === addedMember._id)\n        if (memberIdx !== -1) {\n            members.splice(memberIdx, 1)\n        }\n        else members.push(addedMember)\n        const copyBoard = { ...this.props.board }\n        copyBoard.members = members\n        console.log(members)\n        this.props.updateBoard(copyBoard)\n    }\n\n    isMemberChecked = (memberCheck) => {\n        const memberIdx = this.state.members.findIndex(member => member._id === memberCheck._id)\n        if (memberIdx !== -1) {\n            return 'checked'\n        }\n        else return ''\n    }\n\n    toggleModal = (className) => {\n        const modals = document.querySelectorAll('.action-modal');\n        const currModal = document.querySelector(`.${className}`);\n        if (modals) {\n            modals.forEach(\n                el => el.classList.add('d-none'));\n        }\n        if (currModal) {\n            currModal.classList.remove('d-none');\n        }\n    }\n    onChangeBoardName = () => {\n        const board = this.props.board\n        board.title = this.state.title\n        this.props.updateBoard(board)\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n        this.setState({ [field]: value })\n    }\n    render() {\n        const { board, onUpdate } = this.props\n        if (!board) return <div>Loading...</div>\n        return (\n            <nav className=\"board-navbar flex space-between font-1 c-white fam-1 mb-03\">\n                <ul className=\"left-bar flex center space-evenly \">\n                    <li className=\"btn-board\"><RiDashboardLine />Board<MdKeyboardArrowDown /></li>\n                    <li className=\"btn-board \"><AiOutlineStar /></li>\n                    <li className=\"btn-board bold\"><form onSubmit={(ev) => {\n                        ev.preventDefault()\n                        this.onChangeBoardName(ev)\n                    }}>\n                        <input type=\"text\" className=\"app-input nav-board-input font-w2 font-m lh-20 \" name=\"title\" onChange={this.handleChange} value={this.state.title} onBlur={this.onChangeBoardName} />\n                    </form></li>\n                    <li className=\"btn-board\">Visiblity</li>\n                    <li className=\"members-wrap\">\n                        <li className=\"btn-board \" onClick={() => { this.toggleModal('board-members-wrap-modal') }}>Invite</li>\n                        <BoardMembersModal users={this.props.users} isMemberChecked={this.isMemberChecked} onAddMemberToBoard={this.onAddMemberToBoard} toggleModal={() => { this.toggleModal() }} />\n                    </li>\n                    <li className=\"btn-board\" ><MembersBoard /></li>\n                </ul>\n                <ul className=\"right-bar flex center\">\n                    <li className=\"btn-board\">Show-menu</li>\n                </ul>\n            </nav>\n        )\n    }\n}\n\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/TaskDetails.jsx",["240","241","242","243","244","245","246"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/CheckList.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/CheckListStatus.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/ActionList.jsx",["247","248"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/LabelModal.jsx",["249"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { ModalAction } from '../../../../shared/ModalAction';\nimport { AiOutlineClose } from 'react-icons/ai'\nimport { LabelTask } from '../LabelTask'\n\n\n\nclass _LabelModal extends Component {\n    state = {\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate(prevProps) {\n\n    }\n    render() {\n        const labels = this.props.board.labels;\n        console.log(labels);\n        return <div className=\"action-modal label-wrap-modal d-none p-abs flex\">\n            <ModalAction>\n                <div className=\"label-modal p-abs flex column pad-1\">\n                    <div className=\"header-modal font-1 fam-1 fw-2 flex center content-end gap-5 w-70\">\n                        <h1 className=\"fam-1 font-1 \">Label</h1>\n                        <span className=\"cur-pointer fam-1 font-s bold\" onClick={() => { this.props.toggleModal('label-wrap-modal') }}><AiOutlineClose /></span>\n                    </div>\n                    <div className=\"action-content\">\n                        <ul>\n                            {labels.map((label, idx) => <LabelTask key={idx} label={label} />)}\n                        </ul>\n                    </div>\n                </div>\n            </ModalAction>\n        </div>\n    }\n\n}\nconst mapStateToProps = state => {\n    return {\n        loggedInUser: state.userModule.loggedInUser,\n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n\n}\n\n\nexport const LabelModal = connect(mapStateToProps, mapDispatchToProps)(_LabelModal)","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/MembersModal.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalAction.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/OverlayAction.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/systemAction.js",["250"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/LabelTask.jsx",["251","252"],"import React, { Component } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { FiEdit2 } from 'react-icons/fi'\n\n\n\nclass _LabelTask extends Component {\n    state = {\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate(prevProps) {\n\n    }\n\n    render() {\n        const label = this.props.label;\n        // console.log(this.props.board);\n        return (\n            <div className=\"label-input flex gap-2\">\n                <input type=\"text\" style={{ background: `${label.color}` }} className=\"label-input\" onChange={() => { console.log('aa'); }} onClick={() => this.toggleLabel()} />\n                <FiEdit2 />\n            </div>\n        )\n    }\n\n}\nconst mapStateToProps = state => {\n    return {\n        loggedInUser: state.userModule.loggedInUser,\n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n\n}\n\n\nexport const LabelTask = connect(mapStateToProps, mapDispatchToProps)(_LabelTask)","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Login.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/boardNavbar/BoardMembersModal.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/taskDetails/action/actionModal/DueDateModal.jsx",[],{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"261","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":17},{"ruleId":"257","severity":1,"message":"262","line":8,"column":27,"nodeType":"259","messageId":"260","endLine":8,"endColumn":36},{"ruleId":"257","severity":1,"message":"263","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":17},{"ruleId":"257","severity":1,"message":"264","line":7,"column":10,"nodeType":"259","messageId":"260","endLine":7,"endColumn":21},{"ruleId":"257","severity":1,"message":"265","line":7,"column":23,"nodeType":"259","messageId":"260","endLine":7,"endColumn":32},{"ruleId":"257","severity":1,"message":"266","line":7,"column":34,"nodeType":"259","messageId":"260","endLine":7,"endColumn":46},{"ruleId":"257","severity":1,"message":"267","line":8,"column":10,"nodeType":"259","messageId":"260","endLine":8,"endColumn":19},{"ruleId":"268","severity":1,"message":"269","line":41,"column":11,"nodeType":"270","endLine":41,"endColumn":57},{"ruleId":"268","severity":1,"message":"269","line":51,"column":11,"nodeType":"270","endLine":51,"endColumn":64},{"ruleId":"268","severity":1,"message":"269","line":60,"column":11,"nodeType":"270","endLine":60,"endColumn":60},{"ruleId":"268","severity":1,"message":"269","line":68,"column":11,"nodeType":"270","endLine":68,"endColumn":60},{"ruleId":"257","severity":1,"message":"271","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":23},{"ruleId":"257","severity":1,"message":"272","line":3,"column":25,"nodeType":"259","messageId":"260","endLine":3,"endColumn":50},{"ruleId":"257","severity":1,"message":"273","line":3,"column":7,"nodeType":"259","messageId":"260","endLine":3,"endColumn":23},{"ruleId":"257","severity":1,"message":"274","line":43,"column":7,"nodeType":"259","messageId":"260","endLine":43,"endColumn":20},{"ruleId":"257","severity":1,"message":"275","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":25},{"ruleId":"257","severity":1,"message":"276","line":6,"column":10,"nodeType":"259","messageId":"260","endLine":6,"endColumn":27},{"ruleId":"257","severity":1,"message":"277","line":1,"column":10,"nodeType":"259","messageId":"260","endLine":1,"endColumn":21},{"ruleId":"257","severity":1,"message":"275","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":25},{"ruleId":"257","severity":1,"message":"278","line":2,"column":38,"nodeType":"259","messageId":"260","endLine":2,"endColumn":47},{"ruleId":"257","severity":1,"message":"279","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":18},{"ruleId":"257","severity":1,"message":"280","line":32,"column":32,"nodeType":"259","messageId":"260","endLine":32,"endColumn":40},{"ruleId":"257","severity":1,"message":"281","line":49,"column":24,"nodeType":"259","messageId":"260","endLine":49,"endColumn":29},{"ruleId":"257","severity":1,"message":"282","line":49,"column":31,"nodeType":"259","messageId":"260","endLine":49,"endColumn":35},{"ruleId":"257","severity":1,"message":"283","line":55,"column":37,"nodeType":"259","messageId":"260","endLine":55,"endColumn":48},{"ruleId":"284","severity":1,"message":"285","line":79,"column":76,"nodeType":"286","messageId":"287","endLine":79,"endColumn":78},{"ruleId":"257","severity":1,"message":"288","line":26,"column":24,"nodeType":"259","messageId":"260","endLine":26,"endColumn":32},{"ruleId":"257","severity":1,"message":"289","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":14},{"ruleId":"257","severity":1,"message":"290","line":6,"column":8,"nodeType":"259","messageId":"260","endLine":6,"endColumn":22},{"ruleId":"257","severity":1,"message":"291","line":26,"column":17,"nodeType":"259","messageId":"260","endLine":26,"endColumn":24},{"ruleId":"257","severity":1,"message":"291","line":35,"column":21,"nodeType":"259","messageId":"260","endLine":35,"endColumn":28},{"ruleId":"257","severity":1,"message":"292","line":82,"column":15,"nodeType":"259","messageId":"260","endLine":82,"endColumn":22},{"ruleId":"284","severity":1,"message":"285","line":172,"column":77,"nodeType":"286","messageId":"287","endLine":172,"endColumn":79},{"ruleId":"268","severity":1,"message":"269","line":221,"column":37,"nodeType":"270","endLine":221,"endColumn":93},{"ruleId":"257","severity":1,"message":"289","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"293","line":2,"column":16,"nodeType":"259","messageId":"260","endLine":2,"endColumn":23},{"ruleId":"257","severity":1,"message":"290","line":4,"column":8,"nodeType":"259","messageId":"260","endLine":4,"endColumn":22},{"ruleId":"257","severity":1,"message":"277","line":1,"column":10,"nodeType":"259","messageId":"260","endLine":1,"endColumn":21},{"ruleId":"257","severity":1,"message":"289","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"293","line":2,"column":16,"nodeType":"259","messageId":"260","endLine":2,"endColumn":23},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],"no-unused-vars","'Chat' is defined but never used.","Identifier","unusedVar","'loading' is defined but never used.","'Draggable' is defined but never used.","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'socketService' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.","'socketIsReady' is assigned a value but never used.","'DragDropContext' is defined but never used.","'HiOutlineMenuAlt4' is defined but never used.","'utilService' is defined but never used.","'Droppable' is defined but never used.","'Provider' is defined but never used.","'duration' is assigned a value but never used.","'index' is assigned a value but never used.","'task' is assigned a value but never used.","'updateBoard' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'onUpdate' is assigned a value but never used.","'Link' is defined but never used.","'onClickOutside' is defined but never used.","'boardId' is assigned a value but never used.","'removed' is assigned a value but never used.","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation"]