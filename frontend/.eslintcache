[{"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/index.js":"1","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/serviceWorkerRegistration.js":"2","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/reportWebVitals.js":"3","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/App.jsx":"4","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/store.js":"5","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/routes.js":"6","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/systemReducer.js":"7","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/userReducer.js":"8","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/reviewReducer.js":"9","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/boardReducer.js":"10","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/AppHeader.jsx":"11","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/UserDetails.jsx":"12","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/LoginSignup.jsx":"13","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Board.jsx":"14","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Chat.jsx":"15","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Home.jsx":"16","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/BoardList.jsx":"17","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskDetails.jsx":"18","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/userActions.js":"19","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/reviewActions.js":"20","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/boardsAction.js":"21","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/userService.js":"22","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/socketService.js":"23","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/Upload.jsx":"24","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskList.jsx":"25","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/reviewService.js":"26","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/boardService.js":"27","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/httpService.js":"28","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/cloudinaryService.js":"29","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/utilService.js":"30","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/asyncStorageService.js":"31","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskPreview.jsx":"32","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/data/board.js":"33","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalWrapper.jsx":"34","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/Overlay.jsx":"35","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MiniBoard.jsx":"36"},{"size":910,"mtime":1610189396000,"results":"37","hashOfConfig":"38"},{"size":5064,"mtime":499155300000,"results":"39","hashOfConfig":"38"},{"size":364,"mtime":499155300000,"results":"40","hashOfConfig":"38"},{"size":515,"mtime":1622208933114,"results":"41","hashOfConfig":"38"},{"size":752,"mtime":1622123464533,"results":"42","hashOfConfig":"38"},{"size":747,"mtime":1622376904555,"results":"43","hashOfConfig":"38"},{"size":322,"mtime":1609063804000,"results":"44","hashOfConfig":"38"},{"size":737,"mtime":1609752012000,"results":"45","hashOfConfig":"38"},{"size":669,"mtime":1609949674000,"results":"46","hashOfConfig":"38"},{"size":668,"mtime":1622215305163,"results":"47","hashOfConfig":"38"},{"size":844,"mtime":1622379154736,"results":"48","hashOfConfig":"38"},{"size":732,"mtime":1621836072000,"results":"49","hashOfConfig":"38"},{"size":5470,"mtime":1622381124923,"results":"50","hashOfConfig":"38"},{"size":5421,"mtime":1622381347339,"results":"51","hashOfConfig":"38"},{"size":3395,"mtime":1622123464523,"results":"52","hashOfConfig":"38"},{"size":1403,"mtime":1622381347340,"results":"53","hashOfConfig":"38"},{"size":1132,"mtime":1622380289896,"results":"54","hashOfConfig":"38"},{"size":4732,"mtime":1622365987264,"results":"55","hashOfConfig":"38"},{"size":1574,"mtime":1609834088000,"results":"56","hashOfConfig":"38"},{"size":1321,"mtime":1622123464531,"results":"57","hashOfConfig":"38"},{"size":1855,"mtime":1622274219320,"results":"58","hashOfConfig":"38"},{"size":2300,"mtime":1622123464529,"results":"59","hashOfConfig":"38"},{"size":2329,"mtime":1622123464527,"results":"60","hashOfConfig":"38"},{"size":1127,"mtime":1622123464522,"results":"61","hashOfConfig":"38"},{"size":4441,"mtime":1622371168330,"results":"62","hashOfConfig":"38"},{"size":1087,"mtime":1622123464528,"results":"63","hashOfConfig":"38"},{"size":3536,"mtime":1622382648247,"results":"64","hashOfConfig":"38"},{"size":1093,"mtime":1622123464527,"results":"65","hashOfConfig":"38"},{"size":563,"mtime":1622123464526,"results":"66","hashOfConfig":"38"},{"size":3219,"mtime":1622381616987,"results":"67","hashOfConfig":"38"},{"size":2319,"mtime":1622289086771,"results":"68","hashOfConfig":"38"},{"size":5361,"mtime":1622383858276,"results":"69","hashOfConfig":"38"},{"size":298307,"mtime":1622370343765,"results":"70","hashOfConfig":"38"},{"size":158,"mtime":1622292625069,"results":"71","hashOfConfig":"38"},{"size":103,"mtime":1622291834024,"results":"72","hashOfConfig":"38"},{"size":239,"mtime":1622381347337,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1wsars6",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/index.js",[],["151","152"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/serviceWorkerRegistration.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/reportWebVitals.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/App.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/store.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/routes.js",["153","154","155","156"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/systemReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/userReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/reviewReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/reducers/boardReducer.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/AppHeader.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/UserDetails.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/LoginSignup.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Board.jsx",["157"],"import { connect } from 'react-redux'\nimport { remove, add, loadBoard, update } from '../store/actions/boardsAction.js';\nimport React, { Component } from 'react'\nimport { TaskList } from '../cmps/board/TaskList'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Route, Switch } from 'react-router';\nimport { TaskDetails } from '../cmps/board/TaskDetails.jsx';\nimport { boardService } from '.././services/boardService.js'\nimport { utilService } from '../services/generalService/utilService.js'\nimport { ModalWrapper } from '../cmps/shared/ModalWrapper.jsx';\n\nconst EMPTY_GROUP = { title: '' }\n\nclass _Board extends Component {\n    state = {\n        group: EMPTY_GROUP\n    }\n\n\n    componentDidMount() {\n        const { boardId } = this.props.match.params\n        this.props.loadBoard(boardId);\n    }\n\n    onUpdate = (updateBoard) => {\n        this.props.update(updateBoard)\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            group: {\n                ...prevState.group,\n                [field]: value,\n            }\n        }))\n    }\n\n    onAddGroup = () => {\n        const copyBoard = { ...this.props.board };\n        this.setState({ group: { ...this.state.group, id: utilService.makeId() } })\n        copyBoard.groups.push(utilService.formatNewGroup(this.state.group))\n        this.props.update(copyBoard)\n        this.setState({ group: EMPTY_GROUP })\n    }\n\n    onDragEnd = res => {\n        const { destination, source, type } = res\n        if (!destination) return\n        if (destination.droppableId === source.droppableId &&\n            destination.index === source.index) return\n        const copyBoard = { ...this.props.board }\n        const activity = {}\n        if (type === 'task') {\n            const sourceListIdx = boardService.getGroupIdxById(copyBoard, source.droppableId)\n            const destinationListIdx = boardService.getGroupIdxById(copyBoard, destination.droppableId)\n            const task = copyBoard.groups[sourceListIdx].tasks.splice(source.index, 1)\n            copyBoard.groups[destinationListIdx].tasks.splice(destination.index, 0, task[0])\n            const sourceListName = copyBoard.groups[sourceListIdx].title\n            const destinationListName = copyBoard.groups[destinationListIdx].title\n            activity.txt = `has moved ${task[0].title} from ${sourceListName} to ${destinationListName}`\n        }\n        else {\n\n            const list = copyBoard.groups.splice(source.index, 1)\n            copyBoard.groups.splice(destination.index, 0, list[0])\n            activity.txt = `has moved list ${list[0].title}`\n        }\n        this.props.update(copyBoard)\n    }\n\n    onCloseDetails = () => {\n        this.props.history.push(`/board/${this.props.board._id}`)\n\n    }\n    render() {\n        const { board } = this.props;\n        console.log('from Board, before render:', board)\n        if (!board) {\n            return <h1>loading...{board}</h1>\n        }\n        return (\n            <section className=\"board\">\n                <section className=\"flex\">\n                    <DragDropContext\n                        onDragEnd={this.onDragEnd}\n                    >\n                        <Droppable droppableId={'all-columns'}\n                            direction=\"horizontal\"\n                            type=\"list\"\n                        >\n                            {provided => (\n                                <ul\n                                    className=\"groups clean-list flex\"\n                                    {...provided.droppableProps}\n                                    ref={provided.innerRef}\n                                >\n                                    {board && board.groups.map((group, idx) => <TaskList index={idx}\n                                        key={group.id}\n                                        board={board}\n                                        group={group}\n                                        updateBoard={this.onUpdate} />)}\n                                    {provided.placeholder}\n\n\n                                </ul>\n                            )}\n\n                        </Droppable>\n                    </DragDropContext>\n                    <div className=\"group add-group flex\">\n                        <form onSubmit={(ev) => {\n                            ev.preventDefault()\n                            this.onAddGroup()\n                        }}>\n                            <input className=\"add-task\" value={this.state.group.title} type=\"text\" placeholder=\"+ Add a group\" name=\"title\" onChange={this.handleChange} />\n                        </form>\n                    </div>\n                </section>\n                <Switch>\n                    <Route path={'/board/:boardId/:groupId/:taskId'} render={(props) => <ModalWrapper onClick={this.onCloseDetails}><TaskDetails {...props} /></ModalWrapper>}></Route>\n                </Switch>\n            </section>\n        )\n    }\n}\n\n// {\n//     path: '/board/:boardId/:taskId',\n//     component: TaskDetails,\n// }\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n    remove,\n    add,\n    loadBoard,\n    update\n}\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Chat.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/Home.jsx",["158","159","160","161","162","163"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/pages/BoardList.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskDetails.jsx",["164","165"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { boardService } from '../../services/boardService.js'\nimport { remove, add, loadBoard, update } from '../../store/actions/boardsAction.js';\nimport onClickOutside from \"react-onclickoutside\";\nimport { BsCardChecklist } from 'react-icons/bs'\nimport { GrTextAlignFull } from 'react-icons/gr'\nimport { utilService } from '../../services/generalService/utilService.js';\n\n\nclass _TaskDetails extends Component {\n    state = {\n        group: null,\n        task: null,\n        onFocus: false,\n    }\n\n    async componentDidMount() {\n        const { boardId, taskId, groupId } = this.props.match.params;\n        console.log(boardId)\n        await this.props.loadBoard(boardId);\n        const copyBoard = { ...this.props.board };\n        const group = boardService.getGroupById(copyBoard, groupId);\n        const task = boardService.getTaskById(group, taskId);\n        this.setState({ ...this.state, group, task })\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n\n        this.setState(prevState => ({\n            task: {\n                ...prevState.task,\n                [field]: value,\n            }\n        }))\n    }\n\n    handleClickOutside = evt => {\n        // ..handling code goes here...\n    };\n\n    updateTask = () => {\n        if (!this.state.task.title) return;\n        const copyBoard = { ...this.props.board };\n        const groupIdx = boardService.getGroupIdxById(copyBoard, this.state.group.id)\n        const taskIdx = boardService.getTaskIdxById(this.state.group, this.state.task.id)\n        copyBoard.groups[groupIdx].tasks[taskIdx] = this.state.task\n        this.props.update(copyBoard)\n    }\n\n\n    render() {\n        const { task } = this.state;\n        if (!task) return <h1>Loading...</h1>\n        return (\n            <section className=\"task-details w-50 h-100 flex bg-modal pos-fixed c-stand fam-1 pad-1\">\n                <div className=\"info-task flex column w-70 h-100 content-start\">\n                    {/* Title */}\n                    <form className=\"task-title flex column w-100 content-start pb-2\" onSubmit={(ev) => {\n                        ev.preventDefault()\n                        this.updateTask()\n                    }}>\n                        <div className=\"task-title flex row w-100\">\n                            <label htmlFor=\"title\" className=\"font-6\"><BsCardChecklist /></label>\n                            <input onBlur={this.updateTask} type=\"text\" value={task.title} name=\"title\" className=\"input-details\" onChange={this.handleChange} />\n                        </div>\n                        <h3 className=\"fam-1 font-2 left-self h-20 center pb-4\">in list {this.state.group.title}</h3>\n                    </form>\n                    {/* DESC */}\n                    <section className=\"desc-section \">\n                        <div className=\"desc-header flex row\">\n                            <GrTextAlignFull /><label>Description</label>\n                        </div>\n                        <form onSubmit={(ev) => {\n                            ev.preventDefault()\n                            this.updateTask()\n                        }}>\n\n                            <textarea placeholder=\"Add a description for this task...\" onBlur={this.updateTask} type=\"textArea\" value={task.description} name=\"description\" className=\"w-90 input-details\" onChange={this.handleChange} />\n                        </form>\n                    </section>\n                    {task.comments && <ul className=\"comments clean-list\">\n                        {task.comments.map(comment => {\n                            return <li className=\"full-comment flex row\">\n                                <img className=\"avatar\" src={comment.byMember.imgUrl} />\n                                <div className=\"comment-text flex column\">\n                                    <h3 className=\"commenter-name\">{comment.byMember.fullname}</h3>\n                                    {comment.txt}\n                                    <small>{utilService.timeAgo(comment.createdAt)}</small>\n                                </div>\n                            </li>\n                        })}\n                    </ul>}\n                </div>\n                <div className=\"menu-task flex w-30\">\n\n                </div>\n\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n    remove,\n    add,\n    loadBoard,\n    update\n}\nexport const TaskDetails = connect(mapStateToProps, mapDispatchToProps)(onClickOutside(_TaskDetails))","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/userActions.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/reviewActions.js",["166","167"],"import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../../services/generalService/socketService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n      // socketService.on(SOCKET_EVENT_REVIEW_ADDED, review =>{\r\n      //   dispatch({ type: 'ADD_REVIEW', review })\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/store/actions/boardsAction.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/userService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/socketService.js",["168","169"],"import io from 'socket.io-client'\nimport {httpService} from './httpService'\n\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\n\n\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\n// export const socketService = createSocketService()\nexport const socketService = createDummySocketService()\n\nwindow.socketService = socketService\n\nvar socketIsReady = false;\n// socketService.setup()\n\n\nfunction createSocketService() {\n  var socket = null;\n  const socketService = {\n    async setup() {\n      if (socket) return\n      await httpService.get('setup-session')\n      socket = io(baseUrl, { reconnection: false})\n      socketIsReady = true;\n    },\n    async on(eventName, cb) {\n      if (!socket) await socketService.setup()\n      socket.on(eventName, cb)\n    },\n    async off(eventName, cb=null) {\n      if (!socket) await socketService.setup()\n      if (!cb) socket.removeAllListeners(eventName)\n      else socket.off(eventName, cb)\n    },\n    async emit(eventName, data) {\n      if (!socket) await socketService.setup()\n      socket.emit(eventName, data)\n    },\n    terminate() {\n      socket = null\n      socketIsReady = false\n    }\n  }\n  return socketService\n}\n\n// eslint-disable-next-line\nfunction createDummySocketService() {\n  var listenersMap = {}\n  const socketService = {\n    listenersMap,\n    setup() {\n      listenersMap = {}\n    },\n    terminate() {\n      this.setup()\n    },\n    on(eventName, cb) {\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\n    },\n    off(eventName, cb) {\n      if (!listenersMap[eventName]) return\n      if (!cb) delete listenersMap[eventName]\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\n    },\n    emit(eventName, data) {\n      if (!listenersMap[eventName]) return\n      listenersMap[eventName].forEach(listener => {\n        listener(data)\n      })\n    },\n    debugMsg() {\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\n    },\n  }\n  return socketService\n}\n\n\n// Basic Tests\nfunction cb(x) {console.log(x)}\nsocketService.on('baba', cb)\nsocketService.on('mama', cb)\nsocketService.on('lala', cb)\nsocketService.emit('baba', 'DATA')\n// socketService.off('baba', cb)\n\n\n","/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/Upload.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskList.jsx",["170"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/reviewService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/boardService.js",["171"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/httpService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/cloudinaryService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/utilService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/services/generalService/asyncStorageService.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/TaskPreview.jsx",["172","173","174","175","176","177","178","179"],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/data/board.js",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/ModalWrapper.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/shared/Overlay.jsx",[],"/Users/tamirmatz/Desktop/Sprint 4/taskman/frontend/src/cmps/board/MiniBoard.jsx",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":14},{"ruleId":"184","severity":1,"message":"188","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":21},{"ruleId":"184","severity":1,"message":"189","line":7,"column":10,"nodeType":"186","messageId":"187","endLine":7,"endColumn":15},{"ruleId":"184","severity":1,"message":"190","line":8,"column":10,"nodeType":"186","messageId":"187","endLine":8,"endColumn":21},{"ruleId":"184","severity":1,"message":"191","line":5,"column":27,"nodeType":"186","messageId":"187","endLine":5,"endColumn":36},{"ruleId":"184","severity":1,"message":"192","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":17},{"ruleId":"184","severity":1,"message":"193","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":21},{"ruleId":"184","severity":1,"message":"194","line":4,"column":23,"nodeType":"186","messageId":"187","endLine":4,"endColumn":32},{"ruleId":"184","severity":1,"message":"195","line":4,"column":34,"nodeType":"186","messageId":"187","endLine":4,"endColumn":46},{"ruleId":"184","severity":1,"message":"196","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":19},{"ruleId":"197","severity":1,"message":"198","line":39,"column":11,"nodeType":"199","endLine":39,"endColumn":57},{"ruleId":"184","severity":1,"message":"200","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":87,"column":33,"nodeType":"199","endLine":87,"endColumn":89},{"ruleId":"184","severity":1,"message":"201","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":23},{"ruleId":"184","severity":1,"message":"202","line":3,"column":25,"nodeType":"186","messageId":"187","endLine":3,"endColumn":50},{"ruleId":"184","severity":1,"message":"203","line":19,"column":10,"nodeType":"186","messageId":"187","endLine":19,"endColumn":29},{"ruleId":"184","severity":1,"message":"204","line":43,"column":7,"nodeType":"186","messageId":"187","endLine":43,"endColumn":20},{"ruleId":"184","severity":1,"message":"205","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":25},{"ruleId":"184","severity":1,"message":"206","line":66,"column":11,"nodeType":"186","messageId":"187","endLine":66,"endColumn":18},{"ruleId":"184","severity":1,"message":"205","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":25},{"ruleId":"184","severity":1,"message":"207","line":2,"column":38,"nodeType":"186","messageId":"187","endLine":2,"endColumn":47},{"ruleId":"184","severity":1,"message":"208","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":18},{"ruleId":"184","severity":1,"message":"209","line":28,"column":32,"nodeType":"186","messageId":"187","endLine":28,"endColumn":40},{"ruleId":"184","severity":1,"message":"210","line":44,"column":24,"nodeType":"186","messageId":"187","endLine":44,"endColumn":29},{"ruleId":"184","severity":1,"message":"211","line":44,"column":31,"nodeType":"186","messageId":"187","endLine":44,"endColumn":35},{"ruleId":"184","severity":1,"message":"212","line":50,"column":37,"nodeType":"186","messageId":"187","endLine":50,"endColumn":48},{"ruleId":"213","severity":1,"message":"214","line":73,"column":68,"nodeType":"215","messageId":"216","endLine":73,"endColumn":70},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'Chat' is defined but never used.","Identifier","unusedVar","'UserDetails' is defined but never used.","'Login' is defined but never used.","'TaskDetails' is defined but never used.","'Draggable' is defined but never used.","'connect' is defined but never used.","'loadReviews' is defined but never used.","'addReview' is defined but never used.","'removeReview' is defined but never used.","'loadUsers' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'socketService' is defined but never used.","'SOCKET_EVENT_REVIEW_ADDED' is defined but never used.","'createSocketService' is defined but never used.","'socketIsReady' is assigned a value but never used.","'DragDropContext' is defined but never used.","'newTask' is assigned a value but never used.","'Droppable' is defined but never used.","'Provider' is defined but never used.","'duration' is assigned a value but never used.","'index' is assigned a value but never used.","'task' is assigned a value but never used.","'updateBoard' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]